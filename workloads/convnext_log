def @main(%input0: Tensor[(32, 3, 224, 224), float16] /* ty=Tensor[(32, 3, 224, 224), float16] span=/features/features.0/features.0.0/Conv.input0:0:0 */) -> Tensor[(32, 1000), float16] {
  %881 = fn (%p0380: Tensor[(32, 3, 224, 224), float16] /* ty=Tensor[(32, 3, 224, 224), float16] */, Primitive=1) -> Tensor[(32, 224, 224, 3), float16] {
    layout_transform(%p0380, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 224, 224, 3), float16] */
  } /* ty=fn (Tensor[(32, 3, 224, 224), float16]) -> Tensor[(32, 224, 224, 3), float16] */;
  %882 = %881(%input0) /* ty=Tensor[(32, 224, 224, 3), float16] */;
  %883 = fn (%p0379: Tensor[(32, 224, 224, 3), float16] /* ty=Tensor[(32, 224, 224, 3), float16] */, %p1266: Tensor[(128, 4, 4, 3), float16] /* ty=Tensor[(128, 4, 4, 3), float16] */, %p2153: Tensor[(1, 1, 1, 128), float16] /* ty=Tensor[(1, 1, 1, 128), float16] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float16] {
    %880 = nn.conv2d(%p0379, %p1266, strides=[4, 4], padding=[0, 0, 0, 0], channels=128, kernel_size=[4, 4], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 56, 56, 128), float16] */;
    add(%880, %p2153) /* ty=Tensor[(32, 56, 56, 128), float16] */
  } /* ty=fn (Tensor[(32, 224, 224, 3), float16], Tensor[(128, 4, 4, 3), float16], Tensor[(1, 1, 1, 128), float16]) -> Tensor[(32, 56, 56, 128), float16] */;
  %884 = %883(%882, meta[relay.Constant][0] /* ty=Tensor[(128, 4, 4, 3), float16] */, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 1, 128), float16] */) /* ty=Tensor[(32, 56, 56, 128), float16] */;
  %885 = fn (%p0378: Tensor[(32, 56, 56, 128), float16] /* ty=Tensor[(32, 56, 56, 128), float16] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float32] {
    %879 = transpose(%p0378, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 56, 56, 128), float16] */;
    cast(%879, dtype="float32") /* ty=Tensor[(32, 56, 56, 128), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float16]) -> Tensor[(32, 56, 56, 128), float32] */;
  %886 = %885(%884) /* ty=Tensor[(32, 56, 56, 128), float32] */;
  %887 = fn (%p0381: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 1), float32] {
    mean(%p0381, axis=[3], keepdims=True) /* ty=Tensor[(32, 56, 56, 1), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32]) -> Tensor[(32, 56, 56, 1), float32] */;
  %888 = %887(%886) /* ty=Tensor[(32, 56, 56, 1), float32] */;
  %889 = fn (%p0377: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, %p1265: Tensor[(32, 56, 56, 1), float32] /* ty=Tensor[(32, 56, 56, 1), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float32] {
    subtract(%p0377, %p1265) /* ty=Tensor[(32, 56, 56, 128), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32], Tensor[(32, 56, 56, 1), float32]) -> Tensor[(32, 56, 56, 128), float32] */;
  %890 = %889(%886, %888) /* ty=Tensor[(32, 56, 56, 128), float32] */;
  %891 = fn (%p0376: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 1), float32] {
    %878 = power(%p0376, 2f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    mean(%878, axis=[3], keepdims=True) /* ty=Tensor[(32, 56, 56, 1), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32]) -> Tensor[(32, 56, 56, 1), float32] */;
  %892 = %891(%890) /* ty=Tensor[(32, 56, 56, 1), float32] */;
  %893 = fn (%p0375: Tensor[(32, 56, 56, 1), float32] /* ty=Tensor[(32, 56, 56, 1), float32] */, %p1264: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, %p2152: Tensor[(1, 1, 1, 128), float32] /* ty=Tensor[(1, 1, 1, 128), float32] */, %p376: Tensor[(1, 1, 1, 128), float32] /* ty=Tensor[(1, 1, 1, 128), float32] */, Primitive=1) -> Tensor[(32, 128, 56, 56), float32] {
    %873 = add(%p0375, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 1), float32] */;
    %874 = rsqrt(%873) /* ty=Tensor[(32, 56, 56, 1), float32] */;
    %875 = multiply(%p1264, %874) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    %876 = multiply(%875, %p2152) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    %877 = add(%876, %p376) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    transpose(%877, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 128, 56, 56), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 1), float32], Tensor[(32, 56, 56, 128), float32], Tensor[(1, 1, 1, 128), float32], Tensor[(1, 1, 1, 128), float32]) -> Tensor[(32, 128, 56, 56), float32] */;
  %894 = %893(%892, %890, meta[relay.Constant][2] /* ty=Tensor[(1, 1, 1, 128), float32] */, meta[relay.Constant][3] /* ty=Tensor[(1, 1, 1, 128), float32] */) /* ty=Tensor[(32, 128, 56, 56), float32] */;
  %895 = fn (%p0374: Tensor[(32, 128, 56, 56), float32] /* ty=Tensor[(32, 128, 56, 56), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float16] {
    %872 = layout_transform(%p0374, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 56, 56, 128), float32] */;
    cast(%872, dtype="float16") /* ty=Tensor[(32, 56, 56, 128), float16] */
  } /* ty=fn (Tensor[(32, 128, 56, 56), float32]) -> Tensor[(32, 56, 56, 128), float16] */;
  %896 = %895(%894) /* ty=Tensor[(32, 56, 56, 128), float16] */;
  %897 = fn (%p0373: Tensor[(32, 56, 56, 128), float16] /* ty=Tensor[(32, 56, 56, 128), float16] */, %p1263: Tensor[(128, 7, 7, 1), float16] /* ty=Tensor[(128, 7, 7, 1), float16] */, %p2151: Tensor[(1, 1, 1, 128), float16] /* ty=Tensor[(1, 1, 1, 128), float16] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float16] {
    %871 = nn.conv2d(%p0373, %p1263, padding=[3, 3, 3, 3], groups=128, channels=128, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 56, 56, 128), float16] */;
    add(%871, %p2151) /* ty=Tensor[(32, 56, 56, 128), float16] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float16], Tensor[(128, 7, 7, 1), float16], Tensor[(1, 1, 1, 128), float16]) -> Tensor[(32, 56, 56, 128), float16] */;
  %898 = %897(%896, meta[relay.Constant][4] /* ty=Tensor[(128, 7, 7, 1), float16] */, meta[relay.Constant][5] /* ty=Tensor[(1, 1, 1, 128), float16] */) /* ty=Tensor[(32, 56, 56, 128), float16] */;
  %899 = fn (%p0372: Tensor[(32, 56, 56, 128), float16] /* ty=Tensor[(32, 56, 56, 128), float16] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float32] {
    %870 = transpose(%p0372, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 56, 56, 128), float16] */;
    cast(%870, dtype="float32") /* ty=Tensor[(32, 56, 56, 128), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float16]) -> Tensor[(32, 56, 56, 128), float32] */;
  %900 = %899(%898) /* ty=Tensor[(32, 56, 56, 128), float32] */;
  %901 = fn (%p0382: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 1), float32] {
    mean(%p0382, axis=[3], keepdims=True) /* ty=Tensor[(32, 56, 56, 1), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32]) -> Tensor[(32, 56, 56, 1), float32] */;
  %902 = %901(%900) /* ty=Tensor[(32, 56, 56, 1), float32] */;
  %903 = fn (%p0371: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, %p1262: Tensor[(32, 56, 56, 1), float32] /* ty=Tensor[(32, 56, 56, 1), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float32] {
    subtract(%p0371, %p1262) /* ty=Tensor[(32, 56, 56, 128), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32], Tensor[(32, 56, 56, 1), float32]) -> Tensor[(32, 56, 56, 128), float32] */;
  %904 = %903(%900, %902) /* ty=Tensor[(32, 56, 56, 128), float32] */;
  %905 = fn (%p0370: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 1), float32] {
    %869 = power(%p0370, 2f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    mean(%869, axis=[3], keepdims=True) /* ty=Tensor[(32, 56, 56, 1), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32]) -> Tensor[(32, 56, 56, 1), float32] */;
  %906 = %905(%904) /* ty=Tensor[(32, 56, 56, 1), float32] */;
  %907 = fn (%p0369: Tensor[(32, 56, 56, 1), float32] /* ty=Tensor[(32, 56, 56, 1), float32] */, %p1261: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, %p2150: Tensor[(1, 1, 1, 128), float32] /* ty=Tensor[(1, 1, 1, 128), float32] */, %p375: Tensor[(1, 1, 1, 128), float32] /* ty=Tensor[(1, 1, 1, 128), float32] */, Primitive=1) -> Tensor[(100352, 128), float16] {
    %863 = add(%p0369, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 1), float32] */;
    %864 = rsqrt(%863) /* ty=Tensor[(32, 56, 56, 1), float32] */;
    %865 = multiply(%p1261, %864) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    %866 = multiply(%865, %p2150) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    %867 = add(%866, %p375) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    %868 = reshape(%867, newshape=[-1, 128]) /* ty=Tensor[(100352, 128), float32] */;
    cast(%868, dtype="float16") /* ty=Tensor[(100352, 128), float16] */
  } /* ty=fn (Tensor[(32, 56, 56, 1), float32], Tensor[(32, 56, 56, 128), float32], Tensor[(1, 1, 1, 128), float32], Tensor[(1, 1, 1, 128), float32]) -> Tensor[(100352, 128), float16] */;
  %908 = %907(%906, %904, meta[relay.Constant][6] /* ty=Tensor[(1, 1, 1, 128), float32] */, meta[relay.Constant][7] /* ty=Tensor[(1, 1, 1, 128), float32] */) /* ty=Tensor[(100352, 128), float16] */;
  %909 = fn (%p0368: Tensor[(100352, 128), float16] /* ty=Tensor[(100352, 128), float16] */, %p1260: Tensor[(512, 128), float16] /* ty=Tensor[(512, 128), float16] */, Primitive=1) -> Tensor[(100352, 512), float16] {
    nn.dense(%p0368, %p1260, units=None, out_dtype="float16") /* ty=Tensor[(100352, 512), float16] */
  } /* ty=fn (Tensor[(100352, 128), float16], Tensor[(512, 128), float16]) -> Tensor[(100352, 512), float16] */;
  %910 = %909(%908, meta[relay.Constant][8] /* ty=Tensor[(512, 128), float16] span=/features/features.1/features.1.0/block/block.3/MatMul:0:0 */) /* ty=Tensor[(100352, 512), float16] */;
  %911 = fn (%p0367: Tensor[(100352, 512), float16] /* ty=Tensor[(100352, 512), float16] */, %p1259: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p2149: float16 /* ty=float16 */, Primitive=1) -> Tensor[(100352, 512), float16] {
    %853 = reshape(%p0367, newshape=[32, 56, 56, 512]) /* ty=Tensor[(32, 56, 56, 512), float16] */;
    %854 = add(%p1259, %853) /* ty=Tensor[(32, 56, 56, 512), float16] */;
    %855 = divide(%854, %p2149) /* ty=Tensor[(32, 56, 56, 512), float16] */;
    %856 = cast(%855, dtype="float32") /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %857 = erf(%856) /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %858 = cast(%854, dtype="float32") /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %859 = add(%857, 1f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %860 = multiply(%858, %859) /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %861 = multiply(%860, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %862 = reshape(%861, newshape=[-1, 512]) /* ty=Tensor[(100352, 512), float32] */;
    cast(%862, dtype="float16") /* ty=Tensor[(100352, 512), float16] */
  } /* ty=fn (Tensor[(100352, 512), float16], Tensor[(512), float16], float16) -> Tensor[(100352, 512), float16] */;
  %912 = %911(%910, meta[relay.Constant][9] /* ty=Tensor[(512), float16] span=Identity_18.features.1.0.block.3.bias:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.1/features.1.0/block/block.4/Constant:0:0 */) /* ty=Tensor[(100352, 512), float16] */;
  %913 = fn (%p0366: Tensor[(100352, 512), float16] /* ty=Tensor[(100352, 512), float16] */, %p1258: Tensor[(128, 512), float16] /* ty=Tensor[(128, 512), float16] */, Primitive=1) -> Tensor[(100352, 128), float16] {
    nn.dense(%p0366, %p1258, units=None, out_dtype="float16") /* ty=Tensor[(100352, 128), float16] */
  } /* ty=fn (Tensor[(100352, 512), float16], Tensor[(128, 512), float16]) -> Tensor[(100352, 128), float16] */;
  %914 = %913(%912, meta[relay.Constant][10] /* ty=Tensor[(128, 512), float16] span=/features/features.1/features.1.0/block/block.5/MatMul:0:0 */) /* ty=Tensor[(100352, 128), float16] */;
  %915 = fn (%p0365: Tensor[(100352, 128), float16] /* ty=Tensor[(100352, 128), float16] */, %p1257: Tensor[(128), float16] /* ty=Tensor[(128), float16] */, %p2148: Tensor[(128, 1, 1), float16] /* ty=Tensor[(128, 1, 1), float16] */, %p374: Tensor[(32, 128, 56, 56), float32] /* ty=Tensor[(32, 128, 56, 56), float32] */, Primitive=1) -> Tensor[(32, 128, 56, 56), float32] {
    %848 = reshape(%p0365, newshape=[32, 56, 56, 128]) /* ty=Tensor[(32, 56, 56, 128), float16] */;
    %849 = add(%p1257, %848) /* ty=Tensor[(32, 56, 56, 128), float16] */;
    %850 = transpose(%849, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 128, 56, 56), float16] */;
    %851 = multiply(%p2148, %850) /* ty=Tensor[(32, 128, 56, 56), float16] */;
    %852 = cast(%851, dtype="float32") /* ty=Tensor[(32, 128, 56, 56), float32] */;
    add(%852, %p374) /* ty=Tensor[(32, 128, 56, 56), float32] */
  } /* ty=fn (Tensor[(100352, 128), float16], Tensor[(128), float16], Tensor[(128, 1, 1), float16], Tensor[(32, 128, 56, 56), float32]) -> Tensor[(32, 128, 56, 56), float32] */;
  %916 = %915(%914, meta[relay.Constant][11] /* ty=Tensor[(128), float16] span=Identity_211:0:0 */, meta[relay.Constant][12] /* ty=Tensor[(128, 1, 1), float16] span=Identity_204.features.1.0.layer_scale:0:0 */, %894) /* ty=Tensor[(32, 128, 56, 56), float32] */;
  %917 = fn (%p0364: Tensor[(32, 128, 56, 56), float32] /* ty=Tensor[(32, 128, 56, 56), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float16] {
    %847 = layout_transform(%p0364, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 56, 56, 128), float32] */;
    cast(%847, dtype="float16") /* ty=Tensor[(32, 56, 56, 128), float16] */
  } /* ty=fn (Tensor[(32, 128, 56, 56), float32]) -> Tensor[(32, 56, 56, 128), float16] */;
  %918 = %917(%916) /* ty=Tensor[(32, 56, 56, 128), float16] */;
  %919 = fn (%p0363: Tensor[(32, 56, 56, 128), float16] /* ty=Tensor[(32, 56, 56, 128), float16] */, %p1256: Tensor[(128, 7, 7, 1), float16] /* ty=Tensor[(128, 7, 7, 1), float16] */, %p2147: Tensor[(1, 1, 1, 128), float16] /* ty=Tensor[(1, 1, 1, 128), float16] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float16] {
    %846 = nn.conv2d(%p0363, %p1256, padding=[3, 3, 3, 3], groups=128, channels=128, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 56, 56, 128), float16] */;
    add(%846, %p2147) /* ty=Tensor[(32, 56, 56, 128), float16] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float16], Tensor[(128, 7, 7, 1), float16], Tensor[(1, 1, 1, 128), float16]) -> Tensor[(32, 56, 56, 128), float16] */;
  %920 = %919(%918, meta[relay.Constant][13] /* ty=Tensor[(128, 7, 7, 1), float16] */, meta[relay.Constant][14] /* ty=Tensor[(1, 1, 1, 128), float16] */) /* ty=Tensor[(32, 56, 56, 128), float16] */;
  %921 = fn (%p0362: Tensor[(32, 56, 56, 128), float16] /* ty=Tensor[(32, 56, 56, 128), float16] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float32] {
    %845 = transpose(%p0362, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 56, 56, 128), float16] */;
    cast(%845, dtype="float32") /* ty=Tensor[(32, 56, 56, 128), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float16]) -> Tensor[(32, 56, 56, 128), float32] */;
  %922 = %921(%920) /* ty=Tensor[(32, 56, 56, 128), float32] */;
  %923 = fn (%p0383: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 1), float32] {
    mean(%p0383, axis=[3], keepdims=True) /* ty=Tensor[(32, 56, 56, 1), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32]) -> Tensor[(32, 56, 56, 1), float32] */;
  %924 = %923(%922) /* ty=Tensor[(32, 56, 56, 1), float32] */;
  %925 = fn (%p0361: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, %p1255: Tensor[(32, 56, 56, 1), float32] /* ty=Tensor[(32, 56, 56, 1), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float32] {
    subtract(%p0361, %p1255) /* ty=Tensor[(32, 56, 56, 128), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32], Tensor[(32, 56, 56, 1), float32]) -> Tensor[(32, 56, 56, 128), float32] */;
  %926 = %925(%922, %924) /* ty=Tensor[(32, 56, 56, 128), float32] */;
  %927 = fn (%p0360: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 1), float32] {
    %844 = power(%p0360, 2f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    mean(%844, axis=[3], keepdims=True) /* ty=Tensor[(32, 56, 56, 1), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32]) -> Tensor[(32, 56, 56, 1), float32] */;
  %928 = %927(%926) /* ty=Tensor[(32, 56, 56, 1), float32] */;
  %929 = fn (%p0359: Tensor[(32, 56, 56, 1), float32] /* ty=Tensor[(32, 56, 56, 1), float32] */, %p1254: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, %p2146: Tensor[(1, 1, 1, 128), float32] /* ty=Tensor[(1, 1, 1, 128), float32] */, %p373: Tensor[(1, 1, 1, 128), float32] /* ty=Tensor[(1, 1, 1, 128), float32] */, Primitive=1) -> Tensor[(100352, 128), float16] {
    %838 = add(%p0359, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 1), float32] */;
    %839 = rsqrt(%838) /* ty=Tensor[(32, 56, 56, 1), float32] */;
    %840 = multiply(%p1254, %839) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    %841 = multiply(%840, %p2146) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    %842 = add(%841, %p373) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    %843 = reshape(%842, newshape=[-1, 128]) /* ty=Tensor[(100352, 128), float32] */;
    cast(%843, dtype="float16") /* ty=Tensor[(100352, 128), float16] */
  } /* ty=fn (Tensor[(32, 56, 56, 1), float32], Tensor[(32, 56, 56, 128), float32], Tensor[(1, 1, 1, 128), float32], Tensor[(1, 1, 1, 128), float32]) -> Tensor[(100352, 128), float16] */;
  %930 = %929(%928, %926, meta[relay.Constant][15] /* ty=Tensor[(1, 1, 1, 128), float32] */, meta[relay.Constant][16] /* ty=Tensor[(1, 1, 1, 128), float32] */) /* ty=Tensor[(100352, 128), float16] */;
  %931 = fn (%p0358: Tensor[(100352, 128), float16] /* ty=Tensor[(100352, 128), float16] */, %p1253: Tensor[(512, 128), float16] /* ty=Tensor[(512, 128), float16] */, Primitive=1) -> Tensor[(100352, 512), float16] {
    nn.dense(%p0358, %p1253, units=None, out_dtype="float16") /* ty=Tensor[(100352, 512), float16] */
  } /* ty=fn (Tensor[(100352, 128), float16], Tensor[(512, 128), float16]) -> Tensor[(100352, 512), float16] */;
  %932 = %931(%930, meta[relay.Constant][17] /* ty=Tensor[(512, 128), float16] span=/features/features.1/features.1.1/block/block.3/MatMul:0:0 */) /* ty=Tensor[(100352, 512), float16] */;
  %933 = fn (%p0357: Tensor[(100352, 512), float16] /* ty=Tensor[(100352, 512), float16] */, %p1252: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p2145: float16 /* ty=float16 */, Primitive=1) -> Tensor[(100352, 512), float16] {
    %828 = reshape(%p0357, newshape=[32, 56, 56, 512]) /* ty=Tensor[(32, 56, 56, 512), float16] */;
    %829 = add(%p1252, %828) /* ty=Tensor[(32, 56, 56, 512), float16] */;
    %830 = divide(%829, %p2145) /* ty=Tensor[(32, 56, 56, 512), float16] */;
    %831 = cast(%830, dtype="float32") /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %832 = erf(%831) /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %833 = cast(%829, dtype="float32") /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %834 = add(%832, 1f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %835 = multiply(%833, %834) /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %836 = multiply(%835, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %837 = reshape(%836, newshape=[-1, 512]) /* ty=Tensor[(100352, 512), float32] */;
    cast(%837, dtype="float16") /* ty=Tensor[(100352, 512), float16] */
  } /* ty=fn (Tensor[(100352, 512), float16], Tensor[(512), float16], float16) -> Tensor[(100352, 512), float16] */;
  %934 = %933(%932, meta[relay.Constant][18] /* ty=Tensor[(512), float16] span=Identity_206:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.1/features.1.1/block/block.4/Constant:0:0 */) /* ty=Tensor[(100352, 512), float16] */;
  %935 = fn (%p0356: Tensor[(100352, 512), float16] /* ty=Tensor[(100352, 512), float16] */, %p1251: Tensor[(128, 512), float16] /* ty=Tensor[(128, 512), float16] */, Primitive=1) -> Tensor[(100352, 128), float16] {
    nn.dense(%p0356, %p1251, units=None, out_dtype="float16") /* ty=Tensor[(100352, 128), float16] */
  } /* ty=fn (Tensor[(100352, 512), float16], Tensor[(128, 512), float16]) -> Tensor[(100352, 128), float16] */;
  %936 = %935(%934, meta[relay.Constant][19] /* ty=Tensor[(128, 512), float16] span=/features/features.1/features.1.1/block/block.5/MatMul:0:0 */) /* ty=Tensor[(100352, 128), float16] */;
  %937 = fn (%p0355: Tensor[(100352, 128), float16] /* ty=Tensor[(100352, 128), float16] */, %p1250: Tensor[(128), float16] /* ty=Tensor[(128), float16] */, %p2144: Tensor[(128, 1, 1), float16] /* ty=Tensor[(128, 1, 1), float16] */, %p372: Tensor[(32, 128, 56, 56), float32] /* ty=Tensor[(32, 128, 56, 56), float32] */, Primitive=1) -> Tensor[(32, 128, 56, 56), float32] {
    %823 = reshape(%p0355, newshape=[32, 56, 56, 128]) /* ty=Tensor[(32, 56, 56, 128), float16] */;
    %824 = add(%p1250, %823) /* ty=Tensor[(32, 56, 56, 128), float16] */;
    %825 = transpose(%824, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 128, 56, 56), float16] */;
    %826 = multiply(%p2144, %825) /* ty=Tensor[(32, 128, 56, 56), float16] */;
    %827 = cast(%826, dtype="float32") /* ty=Tensor[(32, 128, 56, 56), float32] */;
    add(%827, %p372) /* ty=Tensor[(32, 128, 56, 56), float32] */
  } /* ty=fn (Tensor[(100352, 128), float16], Tensor[(128), float16], Tensor[(128, 1, 1), float16], Tensor[(32, 128, 56, 56), float32]) -> Tensor[(32, 128, 56, 56), float32] */;
  %938 = %937(%936, meta[relay.Constant][20] /* ty=Tensor[(128), float16] span=Identity_205:0:0 */, meta[relay.Constant][21] /* ty=Tensor[(128, 1, 1), float16] span=Identity_210:0:0 */, %916) /* ty=Tensor[(32, 128, 56, 56), float32] */;
  %939 = fn (%p0354: Tensor[(32, 128, 56, 56), float32] /* ty=Tensor[(32, 128, 56, 56), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float16] {
    %822 = layout_transform(%p0354, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 56, 56, 128), float32] */;
    cast(%822, dtype="float16") /* ty=Tensor[(32, 56, 56, 128), float16] */
  } /* ty=fn (Tensor[(32, 128, 56, 56), float32]) -> Tensor[(32, 56, 56, 128), float16] */;
  %940 = %939(%938) /* ty=Tensor[(32, 56, 56, 128), float16] */;
  %941 = fn (%p0353: Tensor[(32, 56, 56, 128), float16] /* ty=Tensor[(32, 56, 56, 128), float16] */, %p1249: Tensor[(128, 7, 7, 1), float16] /* ty=Tensor[(128, 7, 7, 1), float16] */, %p2143: Tensor[(1, 1, 1, 128), float16] /* ty=Tensor[(1, 1, 1, 128), float16] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float16] {
    %821 = nn.conv2d(%p0353, %p1249, padding=[3, 3, 3, 3], groups=128, channels=128, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 56, 56, 128), float16] */;
    add(%821, %p2143) /* ty=Tensor[(32, 56, 56, 128), float16] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float16], Tensor[(128, 7, 7, 1), float16], Tensor[(1, 1, 1, 128), float16]) -> Tensor[(32, 56, 56, 128), float16] */;
  %942 = %941(%940, meta[relay.Constant][22] /* ty=Tensor[(128, 7, 7, 1), float16] */, meta[relay.Constant][23] /* ty=Tensor[(1, 1, 1, 128), float16] */) /* ty=Tensor[(32, 56, 56, 128), float16] */;
  %943 = fn (%p0352: Tensor[(32, 56, 56, 128), float16] /* ty=Tensor[(32, 56, 56, 128), float16] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float32] {
    %820 = transpose(%p0352, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 56, 56, 128), float16] */;
    cast(%820, dtype="float32") /* ty=Tensor[(32, 56, 56, 128), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float16]) -> Tensor[(32, 56, 56, 128), float32] */;
  %944 = %943(%942) /* ty=Tensor[(32, 56, 56, 128), float32] */;
  %945 = fn (%p0384: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 1), float32] {
    mean(%p0384, axis=[3], keepdims=True) /* ty=Tensor[(32, 56, 56, 1), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32]) -> Tensor[(32, 56, 56, 1), float32] */;
  %946 = %945(%944) /* ty=Tensor[(32, 56, 56, 1), float32] */;
  %947 = fn (%p0351: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, %p1248: Tensor[(32, 56, 56, 1), float32] /* ty=Tensor[(32, 56, 56, 1), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float32] {
    subtract(%p0351, %p1248) /* ty=Tensor[(32, 56, 56, 128), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32], Tensor[(32, 56, 56, 1), float32]) -> Tensor[(32, 56, 56, 128), float32] */;
  %948 = %947(%944, %946) /* ty=Tensor[(32, 56, 56, 128), float32] */;
  %949 = fn (%p0350: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 1), float32] {
    %819 = power(%p0350, 2f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    mean(%819, axis=[3], keepdims=True) /* ty=Tensor[(32, 56, 56, 1), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32]) -> Tensor[(32, 56, 56, 1), float32] */;
  %950 = %949(%948) /* ty=Tensor[(32, 56, 56, 1), float32] */;
  %951 = fn (%p0349: Tensor[(32, 56, 56, 1), float32] /* ty=Tensor[(32, 56, 56, 1), float32] */, %p1247: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, %p2142: Tensor[(1, 1, 1, 128), float32] /* ty=Tensor[(1, 1, 1, 128), float32] */, %p371: Tensor[(1, 1, 1, 128), float32] /* ty=Tensor[(1, 1, 1, 128), float32] */, Primitive=1) -> Tensor[(100352, 128), float16] {
    %813 = add(%p0349, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 1), float32] */;
    %814 = rsqrt(%813) /* ty=Tensor[(32, 56, 56, 1), float32] */;
    %815 = multiply(%p1247, %814) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    %816 = multiply(%815, %p2142) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    %817 = add(%816, %p371) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    %818 = reshape(%817, newshape=[-1, 128]) /* ty=Tensor[(100352, 128), float32] */;
    cast(%818, dtype="float16") /* ty=Tensor[(100352, 128), float16] */
  } /* ty=fn (Tensor[(32, 56, 56, 1), float32], Tensor[(32, 56, 56, 128), float32], Tensor[(1, 1, 1, 128), float32], Tensor[(1, 1, 1, 128), float32]) -> Tensor[(100352, 128), float16] */;
  %952 = %951(%950, %948, meta[relay.Constant][24] /* ty=Tensor[(1, 1, 1, 128), float32] */, meta[relay.Constant][25] /* ty=Tensor[(1, 1, 1, 128), float32] */) /* ty=Tensor[(100352, 128), float16] */;
  %953 = fn (%p0348: Tensor[(100352, 128), float16] /* ty=Tensor[(100352, 128), float16] */, %p1246: Tensor[(512, 128), float16] /* ty=Tensor[(512, 128), float16] */, Primitive=1) -> Tensor[(100352, 512), float16] {
    nn.dense(%p0348, %p1246, units=None, out_dtype="float16") /* ty=Tensor[(100352, 512), float16] */
  } /* ty=fn (Tensor[(100352, 128), float16], Tensor[(512, 128), float16]) -> Tensor[(100352, 512), float16] */;
  %954 = %953(%952, meta[relay.Constant][26] /* ty=Tensor[(512, 128), float16] span=/features/features.1/features.1.2/block/block.3/MatMul:0:0 */) /* ty=Tensor[(100352, 512), float16] */;
  %955 = fn (%p0347: Tensor[(100352, 512), float16] /* ty=Tensor[(100352, 512), float16] */, %p1245: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p2141: float16 /* ty=float16 */, Primitive=1) -> Tensor[(100352, 512), float16] {
    %803 = reshape(%p0347, newshape=[32, 56, 56, 512]) /* ty=Tensor[(32, 56, 56, 512), float16] */;
    %804 = add(%p1245, %803) /* ty=Tensor[(32, 56, 56, 512), float16] */;
    %805 = divide(%804, %p2141) /* ty=Tensor[(32, 56, 56, 512), float16] */;
    %806 = cast(%805, dtype="float32") /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %807 = erf(%806) /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %808 = cast(%804, dtype="float32") /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %809 = add(%807, 1f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %810 = multiply(%808, %809) /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %811 = multiply(%810, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 512), float32] */;
    %812 = reshape(%811, newshape=[-1, 512]) /* ty=Tensor[(100352, 512), float32] */;
    cast(%812, dtype="float16") /* ty=Tensor[(100352, 512), float16] */
  } /* ty=fn (Tensor[(100352, 512), float16], Tensor[(512), float16], float16) -> Tensor[(100352, 512), float16] */;
  %956 = %955(%954, meta[relay.Constant][27] /* ty=Tensor[(512), float16] span=Identity_200:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.1/features.1.2/block/block.4/Constant:0:0 */) /* ty=Tensor[(100352, 512), float16] */;
  %957 = fn (%p0346: Tensor[(100352, 512), float16] /* ty=Tensor[(100352, 512), float16] */, %p1244: Tensor[(128, 512), float16] /* ty=Tensor[(128, 512), float16] */, Primitive=1) -> Tensor[(100352, 128), float16] {
    nn.dense(%p0346, %p1244, units=None, out_dtype="float16") /* ty=Tensor[(100352, 128), float16] */
  } /* ty=fn (Tensor[(100352, 512), float16], Tensor[(128, 512), float16]) -> Tensor[(100352, 128), float16] */;
  %958 = %957(%956, meta[relay.Constant][28] /* ty=Tensor[(128, 512), float16] span=/features/features.1/features.1.2/block/block.5/MatMul:0:0 */) /* ty=Tensor[(100352, 128), float16] */;
  %959 = fn (%p0345: Tensor[(100352, 128), float16] /* ty=Tensor[(100352, 128), float16] */, %p1243: Tensor[(128), float16] /* ty=Tensor[(128), float16] */, %p2140: Tensor[(128, 1, 1), float16] /* ty=Tensor[(128, 1, 1), float16] */, %p370: Tensor[(32, 128, 56, 56), float32] /* ty=Tensor[(32, 128, 56, 56), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float32] {
    %797 = reshape(%p0345, newshape=[32, 56, 56, 128]) /* ty=Tensor[(32, 56, 56, 128), float16] */;
    %798 = add(%p1243, %797) /* ty=Tensor[(32, 56, 56, 128), float16] */;
    %799 = transpose(%798, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 128, 56, 56), float16] */;
    %800 = multiply(%p2140, %799) /* ty=Tensor[(32, 128, 56, 56), float16] */;
    %801 = cast(%800, dtype="float32") /* ty=Tensor[(32, 128, 56, 56), float32] */;
    %802 = add(%801, %p370) /* ty=Tensor[(32, 128, 56, 56), float32] */;
    transpose(%802, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 56, 56, 128), float32] */
  } /* ty=fn (Tensor[(100352, 128), float16], Tensor[(128), float16], Tensor[(128, 1, 1), float16], Tensor[(32, 128, 56, 56), float32]) -> Tensor[(32, 56, 56, 128), float32] */;
  %960 = %959(%958, meta[relay.Constant][29] /* ty=Tensor[(128), float16] span=Identity_199:0:0 */, meta[relay.Constant][30] /* ty=Tensor[(128, 1, 1), float16] span=Identity_204:0:0 */, %938) /* ty=Tensor[(32, 56, 56, 128), float32] */;
  %961 = fn (%p0385: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 1), float32] {
    mean(%p0385, axis=[3], keepdims=True) /* ty=Tensor[(32, 56, 56, 1), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32]) -> Tensor[(32, 56, 56, 1), float32] */;
  %962 = %961(%960) /* ty=Tensor[(32, 56, 56, 1), float32] */;
  %963 = fn (%p0344: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, %p1242: Tensor[(32, 56, 56, 1), float32] /* ty=Tensor[(32, 56, 56, 1), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float32] {
    subtract(%p0344, %p1242) /* ty=Tensor[(32, 56, 56, 128), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32], Tensor[(32, 56, 56, 1), float32]) -> Tensor[(32, 56, 56, 128), float32] */;
  %964 = %963(%960, %962) /* ty=Tensor[(32, 56, 56, 128), float32] */;
  %965 = fn (%p0343: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 1), float32] {
    %796 = power(%p0343, 2f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    mean(%796, axis=[3], keepdims=True) /* ty=Tensor[(32, 56, 56, 1), float32] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float32]) -> Tensor[(32, 56, 56, 1), float32] */;
  %966 = %965(%964) /* ty=Tensor[(32, 56, 56, 1), float32] */;
  %967 = fn (%p0342: Tensor[(32, 56, 56, 1), float32] /* ty=Tensor[(32, 56, 56, 1), float32] */, %p1241: Tensor[(32, 56, 56, 128), float32] /* ty=Tensor[(32, 56, 56, 128), float32] */, %p2139: Tensor[(1, 1, 1, 128), float32] /* ty=Tensor[(1, 1, 1, 128), float32] */, %p369: Tensor[(1, 1, 1, 128), float32] /* ty=Tensor[(1, 1, 1, 128), float32] */, Primitive=1) -> Tensor[(32, 56, 56, 128), float16] {
    %791 = add(%p0342, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 56, 56, 1), float32] */;
    %792 = rsqrt(%791) /* ty=Tensor[(32, 56, 56, 1), float32] */;
    %793 = multiply(%p1241, %792) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    %794 = multiply(%793, %p2139) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    %795 = add(%794, %p369) /* ty=Tensor[(32, 56, 56, 128), float32] */;
    cast(%795, dtype="float16") /* ty=Tensor[(32, 56, 56, 128), float16] */
  } /* ty=fn (Tensor[(32, 56, 56, 1), float32], Tensor[(32, 56, 56, 128), float32], Tensor[(1, 1, 1, 128), float32], Tensor[(1, 1, 1, 128), float32]) -> Tensor[(32, 56, 56, 128), float16] */;
  %968 = %967(%966, %964, meta[relay.Constant][31] /* ty=Tensor[(1, 1, 1, 128), float32] */, meta[relay.Constant][32] /* ty=Tensor[(1, 1, 1, 128), float32] */) /* ty=Tensor[(32, 56, 56, 128), float16] */;
  %969 = fn (%p0341: Tensor[(32, 56, 56, 128), float16] /* ty=Tensor[(32, 56, 56, 128), float16] */, %p1240: Tensor[(256, 2, 2, 128), float16] /* ty=Tensor[(256, 2, 2, 128), float16] */, %p2138: Tensor[(1, 1, 1, 256), float16] /* ty=Tensor[(1, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float16] {
    %790 = nn.conv2d(%p0341, %p1240, strides=[2, 2], padding=[0, 0, 0, 0], channels=256, kernel_size=[2, 2], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 28, 28, 256), float16] */;
    add(%790, %p2138) /* ty=Tensor[(32, 28, 28, 256), float16] */
  } /* ty=fn (Tensor[(32, 56, 56, 128), float16], Tensor[(256, 2, 2, 128), float16], Tensor[(1, 1, 1, 256), float16]) -> Tensor[(32, 28, 28, 256), float16] */;
  %970 = %969(%968, meta[relay.Constant][33] /* ty=Tensor[(256, 2, 2, 128), float16] */, meta[relay.Constant][34] /* ty=Tensor[(1, 1, 1, 256), float16] */) /* ty=Tensor[(32, 28, 28, 256), float16] */;
  %971 = fn (%p0340: Tensor[(32, 28, 28, 256), float16] /* ty=Tensor[(32, 28, 28, 256), float16] */, %p1239: Tensor[(256, 7, 7, 1), float16] /* ty=Tensor[(256, 7, 7, 1), float16] */, %p2137: Tensor[(1, 1, 1, 256), float16] /* ty=Tensor[(1, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float16] {
    %789 = nn.conv2d(%p0340, %p1239, padding=[3, 3, 3, 3], groups=256, channels=256, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 28, 28, 256), float16] */;
    add(%789, %p2137) /* ty=Tensor[(32, 28, 28, 256), float16] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float16], Tensor[(256, 7, 7, 1), float16], Tensor[(1, 1, 1, 256), float16]) -> Tensor[(32, 28, 28, 256), float16] */;
  %972 = %971(%970, meta[relay.Constant][35] /* ty=Tensor[(256, 7, 7, 1), float16] */, meta[relay.Constant][36] /* ty=Tensor[(1, 1, 1, 256), float16] */) /* ty=Tensor[(32, 28, 28, 256), float16] */;
  %973 = fn (%p0339: Tensor[(32, 28, 28, 256), float16] /* ty=Tensor[(32, 28, 28, 256), float16] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float32] {
    %788 = transpose(%p0339, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 28, 28, 256), float16] */;
    cast(%788, dtype="float32") /* ty=Tensor[(32, 28, 28, 256), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float16]) -> Tensor[(32, 28, 28, 256), float32] */;
  %974 = %973(%972) /* ty=Tensor[(32, 28, 28, 256), float32] */;
  %975 = fn (%p0386: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, Primitive=1) -> Tensor[(32, 28, 28, 1), float32] {
    mean(%p0386, axis=[3], keepdims=True) /* ty=Tensor[(32, 28, 28, 1), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float32]) -> Tensor[(32, 28, 28, 1), float32] */;
  %976 = %975(%974) /* ty=Tensor[(32, 28, 28, 1), float32] */;
  %977 = fn (%p0338: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, %p1238: Tensor[(32, 28, 28, 1), float32] /* ty=Tensor[(32, 28, 28, 1), float32] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float32] {
    subtract(%p0338, %p1238) /* ty=Tensor[(32, 28, 28, 256), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float32], Tensor[(32, 28, 28, 1), float32]) -> Tensor[(32, 28, 28, 256), float32] */;
  %978 = %977(%974, %976) /* ty=Tensor[(32, 28, 28, 256), float32] */;
  %979 = fn (%p0337: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, Primitive=1) -> Tensor[(32, 28, 28, 1), float32] {
    %787 = power(%p0337, 2f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    mean(%787, axis=[3], keepdims=True) /* ty=Tensor[(32, 28, 28, 1), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float32]) -> Tensor[(32, 28, 28, 1), float32] */;
  %980 = %979(%978) /* ty=Tensor[(32, 28, 28, 1), float32] */;
  %981 = fn (%p0336: Tensor[(32, 28, 28, 1), float32] /* ty=Tensor[(32, 28, 28, 1), float32] */, %p1237: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, %p2136: Tensor[(1, 1, 1, 256), float32] /* ty=Tensor[(1, 1, 1, 256), float32] */, %p368: Tensor[(1, 1, 1, 256), float32] /* ty=Tensor[(1, 1, 1, 256), float32] */, Primitive=1) -> Tensor[(25088, 256), float16] {
    %781 = add(%p0336, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 1), float32] */;
    %782 = rsqrt(%781) /* ty=Tensor[(32, 28, 28, 1), float32] */;
    %783 = multiply(%p1237, %782) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    %784 = multiply(%783, %p2136) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    %785 = add(%784, %p368) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    %786 = reshape(%785, newshape=[-1, 256]) /* ty=Tensor[(25088, 256), float32] */;
    cast(%786, dtype="float16") /* ty=Tensor[(25088, 256), float16] */
  } /* ty=fn (Tensor[(32, 28, 28, 1), float32], Tensor[(32, 28, 28, 256), float32], Tensor[(1, 1, 1, 256), float32], Tensor[(1, 1, 1, 256), float32]) -> Tensor[(25088, 256), float16] */;
  %982 = %981(%980, %978, meta[relay.Constant][37] /* ty=Tensor[(1, 1, 1, 256), float32] */, meta[relay.Constant][38] /* ty=Tensor[(1, 1, 1, 256), float32] */) /* ty=Tensor[(25088, 256), float16] */;
  %983 = fn (%p0335: Tensor[(25088, 256), float16] /* ty=Tensor[(25088, 256), float16] */, %p1236: Tensor[(1024, 256), float16] /* ty=Tensor[(1024, 256), float16] */, Primitive=1) -> Tensor[(25088, 1024), float16] {
    nn.dense(%p0335, %p1236, units=None, out_dtype="float16") /* ty=Tensor[(25088, 1024), float16] */
  } /* ty=fn (Tensor[(25088, 256), float16], Tensor[(1024, 256), float16]) -> Tensor[(25088, 1024), float16] */;
  %984 = %983(%982, meta[relay.Constant][39] /* ty=Tensor[(1024, 256), float16] span=/features/features.3/features.3.0/block/block.3/MatMul:0:0 */) /* ty=Tensor[(25088, 1024), float16] */;
  %985 = fn (%p0334: Tensor[(25088, 1024), float16] /* ty=Tensor[(25088, 1024), float16] */, %p1235: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2135: float16 /* ty=float16 */, Primitive=1) -> Tensor[(25088, 1024), float16] {
    %771 = reshape(%p0334, newshape=[32, 28, 28, 1024]) /* ty=Tensor[(32, 28, 28, 1024), float16] */;
    %772 = add(%p1235, %771) /* ty=Tensor[(32, 28, 28, 1024), float16] */;
    %773 = divide(%772, %p2135) /* ty=Tensor[(32, 28, 28, 1024), float16] */;
    %774 = cast(%773, dtype="float32") /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %775 = erf(%774) /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %776 = cast(%772, dtype="float32") /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %777 = add(%775, 1f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %778 = multiply(%776, %777) /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %779 = multiply(%778, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %780 = reshape(%779, newshape=[-1, 1024]) /* ty=Tensor[(25088, 1024), float32] */;
    cast(%780, dtype="float16") /* ty=Tensor[(25088, 1024), float16] */
  } /* ty=fn (Tensor[(25088, 1024), float16], Tensor[(1024), float16], float16) -> Tensor[(25088, 1024), float16] */;
  %986 = %985(%984, meta[relay.Constant][40] /* ty=Tensor[(1024), float16] span=Identity_0.features.3.0.block.3.bias:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.3/features.3.0/block/block.4/Constant:0:0 */) /* ty=Tensor[(25088, 1024), float16] */;
  %987 = fn (%p0333: Tensor[(25088, 1024), float16] /* ty=Tensor[(25088, 1024), float16] */, %p1234: Tensor[(256, 1024), float16] /* ty=Tensor[(256, 1024), float16] */, Primitive=1) -> Tensor[(25088, 256), float16] {
    nn.dense(%p0333, %p1234, units=None, out_dtype="float16") /* ty=Tensor[(25088, 256), float16] */
  } /* ty=fn (Tensor[(25088, 1024), float16], Tensor[(256, 1024), float16]) -> Tensor[(25088, 256), float16] */;
  %988 = %987(%986, meta[relay.Constant][41] /* ty=Tensor[(256, 1024), float16] span=/features/features.3/features.3.0/block/block.5/MatMul:0:0 */) /* ty=Tensor[(25088, 256), float16] */;
  %989 = fn (%p0332: Tensor[(25088, 256), float16] /* ty=Tensor[(25088, 256), float16] */, %p1233: Tensor[(256), float16] /* ty=Tensor[(256), float16] */, %p2134: Tensor[(256, 1, 1), float16] /* ty=Tensor[(256, 1, 1), float16] */, %p367: Tensor[(32, 28, 28, 256), float16] /* ty=Tensor[(32, 28, 28, 256), float16] */, Primitive=1) -> Tensor[(32, 256, 28, 28), float16] {
    %766 = reshape(%p0332, newshape=[32, 28, 28, 256]) /* ty=Tensor[(32, 28, 28, 256), float16] */;
    %767 = add(%p1233, %766) /* ty=Tensor[(32, 28, 28, 256), float16] */;
    %768 = transpose(%767, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 256, 28, 28), float16] */;
    %769 = multiply(%p2134, %768) /* ty=Tensor[(32, 256, 28, 28), float16] */;
    %770 = layout_transform(%p367, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(32, 256, 28, 28), float16] */;
    add(%769, %770) /* ty=Tensor[(32, 256, 28, 28), float16] */
  } /* ty=fn (Tensor[(25088, 256), float16], Tensor[(256), float16], Tensor[(256, 1, 1), float16], Tensor[(32, 28, 28, 256), float16]) -> Tensor[(32, 256, 28, 28), float16] */;
  %990 = %989(%988, meta[relay.Constant][42] /* ty=Tensor[(256), float16] span=Identity_194:0:0 */, meta[relay.Constant][43] /* ty=Tensor[(256, 1, 1), float16] span=Identity_187.features.3.0.layer_scale:0:0 */, %970) /* ty=Tensor[(32, 256, 28, 28), float16] */;
  %991 = fn (%p0331: Tensor[(32, 256, 28, 28), float16] /* ty=Tensor[(32, 256, 28, 28), float16] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float16] {
    layout_transform(%p0331, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 28, 28, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 28, 28), float16]) -> Tensor[(32, 28, 28, 256), float16] */;
  %992 = %991(%990) /* ty=Tensor[(32, 28, 28, 256), float16] */;
  %993 = fn (%p0330: Tensor[(32, 28, 28, 256), float16] /* ty=Tensor[(32, 28, 28, 256), float16] */, %p1232: Tensor[(256, 7, 7, 1), float16] /* ty=Tensor[(256, 7, 7, 1), float16] */, %p2133: Tensor[(1, 1, 1, 256), float16] /* ty=Tensor[(1, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float16] {
    %765 = nn.conv2d(%p0330, %p1232, padding=[3, 3, 3, 3], groups=256, channels=256, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 28, 28, 256), float16] */;
    add(%765, %p2133) /* ty=Tensor[(32, 28, 28, 256), float16] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float16], Tensor[(256, 7, 7, 1), float16], Tensor[(1, 1, 1, 256), float16]) -> Tensor[(32, 28, 28, 256), float16] */;
  %994 = %993(%992, meta[relay.Constant][44] /* ty=Tensor[(256, 7, 7, 1), float16] */, meta[relay.Constant][45] /* ty=Tensor[(1, 1, 1, 256), float16] */) /* ty=Tensor[(32, 28, 28, 256), float16] */;
  %995 = fn (%p0329: Tensor[(32, 28, 28, 256), float16] /* ty=Tensor[(32, 28, 28, 256), float16] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float32] {
    %764 = transpose(%p0329, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 28, 28, 256), float16] */;
    cast(%764, dtype="float32") /* ty=Tensor[(32, 28, 28, 256), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float16]) -> Tensor[(32, 28, 28, 256), float32] */;
  %996 = %995(%994) /* ty=Tensor[(32, 28, 28, 256), float32] */;
  %997 = fn (%p0387: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, Primitive=1) -> Tensor[(32, 28, 28, 1), float32] {
    mean(%p0387, axis=[3], keepdims=True) /* ty=Tensor[(32, 28, 28, 1), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float32]) -> Tensor[(32, 28, 28, 1), float32] */;
  %998 = %997(%996) /* ty=Tensor[(32, 28, 28, 1), float32] */;
  %999 = fn (%p0328: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, %p1231: Tensor[(32, 28, 28, 1), float32] /* ty=Tensor[(32, 28, 28, 1), float32] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float32] {
    subtract(%p0328, %p1231) /* ty=Tensor[(32, 28, 28, 256), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float32], Tensor[(32, 28, 28, 1), float32]) -> Tensor[(32, 28, 28, 256), float32] */;
  %1000 = %999(%996, %998) /* ty=Tensor[(32, 28, 28, 256), float32] */;
  %1001 = fn (%p0327: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, Primitive=1) -> Tensor[(32, 28, 28, 1), float32] {
    %763 = power(%p0327, 2f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    mean(%763, axis=[3], keepdims=True) /* ty=Tensor[(32, 28, 28, 1), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float32]) -> Tensor[(32, 28, 28, 1), float32] */;
  %1002 = %1001(%1000) /* ty=Tensor[(32, 28, 28, 1), float32] */;
  %1003 = fn (%p0326: Tensor[(32, 28, 28, 1), float32] /* ty=Tensor[(32, 28, 28, 1), float32] */, %p1230: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, %p2132: Tensor[(1, 1, 1, 256), float32] /* ty=Tensor[(1, 1, 1, 256), float32] */, %p366: Tensor[(1, 1, 1, 256), float32] /* ty=Tensor[(1, 1, 1, 256), float32] */, Primitive=1) -> Tensor[(25088, 256), float16] {
    %757 = add(%p0326, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 1), float32] */;
    %758 = rsqrt(%757) /* ty=Tensor[(32, 28, 28, 1), float32] */;
    %759 = multiply(%p1230, %758) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    %760 = multiply(%759, %p2132) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    %761 = add(%760, %p366) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    %762 = reshape(%761, newshape=[-1, 256]) /* ty=Tensor[(25088, 256), float32] */;
    cast(%762, dtype="float16") /* ty=Tensor[(25088, 256), float16] */
  } /* ty=fn (Tensor[(32, 28, 28, 1), float32], Tensor[(32, 28, 28, 256), float32], Tensor[(1, 1, 1, 256), float32], Tensor[(1, 1, 1, 256), float32]) -> Tensor[(25088, 256), float16] */;
  %1004 = %1003(%1002, %1000, meta[relay.Constant][46] /* ty=Tensor[(1, 1, 1, 256), float32] */, meta[relay.Constant][47] /* ty=Tensor[(1, 1, 1, 256), float32] */) /* ty=Tensor[(25088, 256), float16] */;
  %1005 = fn (%p0325: Tensor[(25088, 256), float16] /* ty=Tensor[(25088, 256), float16] */, %p1229: Tensor[(1024, 256), float16] /* ty=Tensor[(1024, 256), float16] */, Primitive=1) -> Tensor[(25088, 1024), float16] {
    nn.dense(%p0325, %p1229, units=None, out_dtype="float16") /* ty=Tensor[(25088, 1024), float16] */
  } /* ty=fn (Tensor[(25088, 256), float16], Tensor[(1024, 256), float16]) -> Tensor[(25088, 1024), float16] */;
  %1006 = %1005(%1004, meta[relay.Constant][48] /* ty=Tensor[(1024, 256), float16] span=/features/features.3/features.3.1/block/block.3/MatMul:0:0 */) /* ty=Tensor[(25088, 1024), float16] */;
  %1007 = fn (%p0324: Tensor[(25088, 1024), float16] /* ty=Tensor[(25088, 1024), float16] */, %p1228: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2131: float16 /* ty=float16 */, Primitive=1) -> Tensor[(25088, 1024), float16] {
    %747 = reshape(%p0324, newshape=[32, 28, 28, 1024]) /* ty=Tensor[(32, 28, 28, 1024), float16] */;
    %748 = add(%p1228, %747) /* ty=Tensor[(32, 28, 28, 1024), float16] */;
    %749 = divide(%748, %p2131) /* ty=Tensor[(32, 28, 28, 1024), float16] */;
    %750 = cast(%749, dtype="float32") /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %751 = erf(%750) /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %752 = cast(%748, dtype="float32") /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %753 = add(%751, 1f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %754 = multiply(%752, %753) /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %755 = multiply(%754, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %756 = reshape(%755, newshape=[-1, 1024]) /* ty=Tensor[(25088, 1024), float32] */;
    cast(%756, dtype="float16") /* ty=Tensor[(25088, 1024), float16] */
  } /* ty=fn (Tensor[(25088, 1024), float16], Tensor[(1024), float16], float16) -> Tensor[(25088, 1024), float16] */;
  %1008 = %1007(%1006, meta[relay.Constant][49] /* ty=Tensor[(1024), float16] span=Identity_189:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.3/features.3.1/block/block.4/Constant:0:0 */) /* ty=Tensor[(25088, 1024), float16] */;
  %1009 = fn (%p0323: Tensor[(25088, 1024), float16] /* ty=Tensor[(25088, 1024), float16] */, %p1227: Tensor[(256, 1024), float16] /* ty=Tensor[(256, 1024), float16] */, Primitive=1) -> Tensor[(25088, 256), float16] {
    nn.dense(%p0323, %p1227, units=None, out_dtype="float16") /* ty=Tensor[(25088, 256), float16] */
  } /* ty=fn (Tensor[(25088, 1024), float16], Tensor[(256, 1024), float16]) -> Tensor[(25088, 256), float16] */;
  %1010 = %1009(%1008, meta[relay.Constant][50] /* ty=Tensor[(256, 1024), float16] span=/features/features.3/features.3.1/block/block.5/MatMul:0:0 */) /* ty=Tensor[(25088, 256), float16] */;
  %1011 = fn (%p0322: Tensor[(25088, 256), float16] /* ty=Tensor[(25088, 256), float16] */, %p1226: Tensor[(256), float16] /* ty=Tensor[(256), float16] */, %p2130: Tensor[(256, 1, 1), float16] /* ty=Tensor[(256, 1, 1), float16] */, %p365: Tensor[(32, 256, 28, 28), float16] /* ty=Tensor[(32, 256, 28, 28), float16] */, Primitive=1) -> Tensor[(32, 256, 28, 28), float16] {
    %743 = reshape(%p0322, newshape=[32, 28, 28, 256]) /* ty=Tensor[(32, 28, 28, 256), float16] */;
    %744 = add(%p1226, %743) /* ty=Tensor[(32, 28, 28, 256), float16] */;
    %745 = transpose(%744, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 256, 28, 28), float16] */;
    %746 = multiply(%p2130, %745) /* ty=Tensor[(32, 256, 28, 28), float16] */;
    add(%746, %p365) /* ty=Tensor[(32, 256, 28, 28), float16] */
  } /* ty=fn (Tensor[(25088, 256), float16], Tensor[(256), float16], Tensor[(256, 1, 1), float16], Tensor[(32, 256, 28, 28), float16]) -> Tensor[(32, 256, 28, 28), float16] */;
  %1012 = %1011(%1010, meta[relay.Constant][51] /* ty=Tensor[(256), float16] span=Identity_188:0:0 */, meta[relay.Constant][52] /* ty=Tensor[(256, 1, 1), float16] span=Identity_193:0:0 */, %990) /* ty=Tensor[(32, 256, 28, 28), float16] */;
  %1013 = fn (%p0321: Tensor[(32, 256, 28, 28), float16] /* ty=Tensor[(32, 256, 28, 28), float16] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float16] {
    layout_transform(%p0321, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 28, 28, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 28, 28), float16]) -> Tensor[(32, 28, 28, 256), float16] */;
  %1014 = %1013(%1012) /* ty=Tensor[(32, 28, 28, 256), float16] */;
  %1015 = fn (%p0320: Tensor[(32, 28, 28, 256), float16] /* ty=Tensor[(32, 28, 28, 256), float16] */, %p1225: Tensor[(256, 7, 7, 1), float16] /* ty=Tensor[(256, 7, 7, 1), float16] */, %p2129: Tensor[(1, 1, 1, 256), float16] /* ty=Tensor[(1, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float16] {
    %742 = nn.conv2d(%p0320, %p1225, padding=[3, 3, 3, 3], groups=256, channels=256, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 28, 28, 256), float16] */;
    add(%742, %p2129) /* ty=Tensor[(32, 28, 28, 256), float16] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float16], Tensor[(256, 7, 7, 1), float16], Tensor[(1, 1, 1, 256), float16]) -> Tensor[(32, 28, 28, 256), float16] */;
  %1016 = %1015(%1014, meta[relay.Constant][53] /* ty=Tensor[(256, 7, 7, 1), float16] */, meta[relay.Constant][54] /* ty=Tensor[(1, 1, 1, 256), float16] */) /* ty=Tensor[(32, 28, 28, 256), float16] */;
  %1017 = fn (%p0319: Tensor[(32, 28, 28, 256), float16] /* ty=Tensor[(32, 28, 28, 256), float16] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float32] {
    %741 = transpose(%p0319, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 28, 28, 256), float16] */;
    cast(%741, dtype="float32") /* ty=Tensor[(32, 28, 28, 256), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float16]) -> Tensor[(32, 28, 28, 256), float32] */;
  %1018 = %1017(%1016) /* ty=Tensor[(32, 28, 28, 256), float32] */;
  %1019 = fn (%p0388: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, Primitive=1) -> Tensor[(32, 28, 28, 1), float32] {
    mean(%p0388, axis=[3], keepdims=True) /* ty=Tensor[(32, 28, 28, 1), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float32]) -> Tensor[(32, 28, 28, 1), float32] */;
  %1020 = %1019(%1018) /* ty=Tensor[(32, 28, 28, 1), float32] */;
  %1021 = fn (%p0318: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, %p1224: Tensor[(32, 28, 28, 1), float32] /* ty=Tensor[(32, 28, 28, 1), float32] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float32] {
    subtract(%p0318, %p1224) /* ty=Tensor[(32, 28, 28, 256), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float32], Tensor[(32, 28, 28, 1), float32]) -> Tensor[(32, 28, 28, 256), float32] */;
  %1022 = %1021(%1018, %1020) /* ty=Tensor[(32, 28, 28, 256), float32] */;
  %1023 = fn (%p0317: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, Primitive=1) -> Tensor[(32, 28, 28, 1), float32] {
    %740 = power(%p0317, 2f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    mean(%740, axis=[3], keepdims=True) /* ty=Tensor[(32, 28, 28, 1), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float32]) -> Tensor[(32, 28, 28, 1), float32] */;
  %1024 = %1023(%1022) /* ty=Tensor[(32, 28, 28, 1), float32] */;
  %1025 = fn (%p0316: Tensor[(32, 28, 28, 1), float32] /* ty=Tensor[(32, 28, 28, 1), float32] */, %p1223: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, %p2128: Tensor[(1, 1, 1, 256), float32] /* ty=Tensor[(1, 1, 1, 256), float32] */, %p364: Tensor[(1, 1, 1, 256), float32] /* ty=Tensor[(1, 1, 1, 256), float32] */, Primitive=1) -> Tensor[(25088, 256), float16] {
    %734 = add(%p0316, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 1), float32] */;
    %735 = rsqrt(%734) /* ty=Tensor[(32, 28, 28, 1), float32] */;
    %736 = multiply(%p1223, %735) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    %737 = multiply(%736, %p2128) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    %738 = add(%737, %p364) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    %739 = reshape(%738, newshape=[-1, 256]) /* ty=Tensor[(25088, 256), float32] */;
    cast(%739, dtype="float16") /* ty=Tensor[(25088, 256), float16] */
  } /* ty=fn (Tensor[(32, 28, 28, 1), float32], Tensor[(32, 28, 28, 256), float32], Tensor[(1, 1, 1, 256), float32], Tensor[(1, 1, 1, 256), float32]) -> Tensor[(25088, 256), float16] */;
  %1026 = %1025(%1024, %1022, meta[relay.Constant][55] /* ty=Tensor[(1, 1, 1, 256), float32] */, meta[relay.Constant][56] /* ty=Tensor[(1, 1, 1, 256), float32] */) /* ty=Tensor[(25088, 256), float16] */;
  %1027 = fn (%p0315: Tensor[(25088, 256), float16] /* ty=Tensor[(25088, 256), float16] */, %p1222: Tensor[(1024, 256), float16] /* ty=Tensor[(1024, 256), float16] */, Primitive=1) -> Tensor[(25088, 1024), float16] {
    nn.dense(%p0315, %p1222, units=None, out_dtype="float16") /* ty=Tensor[(25088, 1024), float16] */
  } /* ty=fn (Tensor[(25088, 256), float16], Tensor[(1024, 256), float16]) -> Tensor[(25088, 1024), float16] */;
  %1028 = %1027(%1026, meta[relay.Constant][57] /* ty=Tensor[(1024, 256), float16] span=/features/features.3/features.3.2/block/block.3/MatMul:0:0 */) /* ty=Tensor[(25088, 1024), float16] */;
  %1029 = fn (%p0314: Tensor[(25088, 1024), float16] /* ty=Tensor[(25088, 1024), float16] */, %p1221: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2127: float16 /* ty=float16 */, Primitive=1) -> Tensor[(25088, 1024), float16] {
    %724 = reshape(%p0314, newshape=[32, 28, 28, 1024]) /* ty=Tensor[(32, 28, 28, 1024), float16] */;
    %725 = add(%p1221, %724) /* ty=Tensor[(32, 28, 28, 1024), float16] */;
    %726 = divide(%725, %p2127) /* ty=Tensor[(32, 28, 28, 1024), float16] */;
    %727 = cast(%726, dtype="float32") /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %728 = erf(%727) /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %729 = cast(%725, dtype="float32") /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %730 = add(%728, 1f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %731 = multiply(%729, %730) /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %732 = multiply(%731, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 1024), float32] */;
    %733 = reshape(%732, newshape=[-1, 1024]) /* ty=Tensor[(25088, 1024), float32] */;
    cast(%733, dtype="float16") /* ty=Tensor[(25088, 1024), float16] */
  } /* ty=fn (Tensor[(25088, 1024), float16], Tensor[(1024), float16], float16) -> Tensor[(25088, 1024), float16] */;
  %1030 = %1029(%1028, meta[relay.Constant][58] /* ty=Tensor[(1024), float16] span=Identity_183:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.3/features.3.2/block/block.4/Constant:0:0 */) /* ty=Tensor[(25088, 1024), float16] */;
  %1031 = fn (%p0313: Tensor[(25088, 1024), float16] /* ty=Tensor[(25088, 1024), float16] */, %p1220: Tensor[(256, 1024), float16] /* ty=Tensor[(256, 1024), float16] */, Primitive=1) -> Tensor[(25088, 256), float16] {
    nn.dense(%p0313, %p1220, units=None, out_dtype="float16") /* ty=Tensor[(25088, 256), float16] */
  } /* ty=fn (Tensor[(25088, 1024), float16], Tensor[(256, 1024), float16]) -> Tensor[(25088, 256), float16] */;
  %1032 = %1031(%1030, meta[relay.Constant][59] /* ty=Tensor[(256, 1024), float16] span=/features/features.3/features.3.2/block/block.5/MatMul:0:0 */) /* ty=Tensor[(25088, 256), float16] */;
  %1033 = fn (%p0312: Tensor[(25088, 256), float16] /* ty=Tensor[(25088, 256), float16] */, %p1219: Tensor[(256), float16] /* ty=Tensor[(256), float16] */, %p2126: Tensor[(256, 1, 1), float16] /* ty=Tensor[(256, 1, 1), float16] */, %p363: Tensor[(32, 256, 28, 28), float16] /* ty=Tensor[(32, 256, 28, 28), float16] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float32] {
    %718 = reshape(%p0312, newshape=[32, 28, 28, 256]) /* ty=Tensor[(32, 28, 28, 256), float16] */;
    %719 = add(%p1219, %718) /* ty=Tensor[(32, 28, 28, 256), float16] */;
    %720 = transpose(%719, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 256, 28, 28), float16] */;
    %721 = multiply(%p2126, %720) /* ty=Tensor[(32, 256, 28, 28), float16] */;
    %722 = add(%721, %p363) /* ty=Tensor[(32, 256, 28, 28), float16] */;
    %723 = transpose(%722, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 28, 28, 256), float16] */;
    cast(%723, dtype="float32") /* ty=Tensor[(32, 28, 28, 256), float32] */
  } /* ty=fn (Tensor[(25088, 256), float16], Tensor[(256), float16], Tensor[(256, 1, 1), float16], Tensor[(32, 256, 28, 28), float16]) -> Tensor[(32, 28, 28, 256), float32] */;
  %1034 = %1033(%1032, meta[relay.Constant][60] /* ty=Tensor[(256), float16] span=Identity_182:0:0 */, meta[relay.Constant][61] /* ty=Tensor[(256, 1, 1), float16] span=Identity_187:0:0 */, %1012) /* ty=Tensor[(32, 28, 28, 256), float32] */;
  %1035 = fn (%p0389: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, Primitive=1) -> Tensor[(32, 28, 28, 1), float32] {
    mean(%p0389, axis=[3], keepdims=True) /* ty=Tensor[(32, 28, 28, 1), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float32]) -> Tensor[(32, 28, 28, 1), float32] */;
  %1036 = %1035(%1034) /* ty=Tensor[(32, 28, 28, 1), float32] */;
  %1037 = fn (%p0311: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, %p1218: Tensor[(32, 28, 28, 1), float32] /* ty=Tensor[(32, 28, 28, 1), float32] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float32] {
    subtract(%p0311, %p1218) /* ty=Tensor[(32, 28, 28, 256), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float32], Tensor[(32, 28, 28, 1), float32]) -> Tensor[(32, 28, 28, 256), float32] */;
  %1038 = %1037(%1034, %1036) /* ty=Tensor[(32, 28, 28, 256), float32] */;
  %1039 = fn (%p0310: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, Primitive=1) -> Tensor[(32, 28, 28, 1), float32] {
    %717 = power(%p0310, 2f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    mean(%717, axis=[3], keepdims=True) /* ty=Tensor[(32, 28, 28, 1), float32] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float32]) -> Tensor[(32, 28, 28, 1), float32] */;
  %1040 = %1039(%1038) /* ty=Tensor[(32, 28, 28, 1), float32] */;
  %1041 = fn (%p0309: Tensor[(32, 28, 28, 1), float32] /* ty=Tensor[(32, 28, 28, 1), float32] */, %p1217: Tensor[(32, 28, 28, 256), float32] /* ty=Tensor[(32, 28, 28, 256), float32] */, %p2125: Tensor[(1, 1, 1, 256), float32] /* ty=Tensor[(1, 1, 1, 256), float32] */, %p362: Tensor[(1, 1, 1, 256), float32] /* ty=Tensor[(1, 1, 1, 256), float32] */, Primitive=1) -> Tensor[(32, 28, 28, 256), float16] {
    %712 = add(%p0309, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 28, 28, 1), float32] */;
    %713 = rsqrt(%712) /* ty=Tensor[(32, 28, 28, 1), float32] */;
    %714 = multiply(%p1217, %713) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    %715 = multiply(%714, %p2125) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    %716 = add(%715, %p362) /* ty=Tensor[(32, 28, 28, 256), float32] */;
    cast(%716, dtype="float16") /* ty=Tensor[(32, 28, 28, 256), float16] */
  } /* ty=fn (Tensor[(32, 28, 28, 1), float32], Tensor[(32, 28, 28, 256), float32], Tensor[(1, 1, 1, 256), float32], Tensor[(1, 1, 1, 256), float32]) -> Tensor[(32, 28, 28, 256), float16] */;
  %1042 = %1041(%1040, %1038, meta[relay.Constant][62] /* ty=Tensor[(1, 1, 1, 256), float32] */, meta[relay.Constant][63] /* ty=Tensor[(1, 1, 1, 256), float32] */) /* ty=Tensor[(32, 28, 28, 256), float16] */;
  %1043 = fn (%p0308: Tensor[(32, 28, 28, 256), float16] /* ty=Tensor[(32, 28, 28, 256), float16] */, %p1216: Tensor[(512, 2, 2, 256), float16] /* ty=Tensor[(512, 2, 2, 256), float16] */, %p2124: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %711 = nn.conv2d(%p0308, %p1216, strides=[2, 2], padding=[0, 0, 0, 0], channels=512, kernel_size=[2, 2], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%711, %p2124) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 28, 28, 256), float16], Tensor[(512, 2, 2, 256), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1044 = %1043(%1042, meta[relay.Constant][64] /* ty=Tensor[(512, 2, 2, 256), float16] */, meta[relay.Constant][65] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1045 = fn (%p0307: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1215: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p2123: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %710 = nn.conv2d(%p0307, %p1215, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%710, %p2123) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1046 = %1045(%1044, meta[relay.Constant][66] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][67] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1047 = fn (%p0306: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %709 = transpose(%p0306, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%709, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1048 = %1047(%1046) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1049 = fn (%p0390: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0390, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1050 = %1049(%1048) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1051 = fn (%p0305: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1214: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0305, %p1214) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1052 = %1051(%1048, %1050) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1053 = fn (%p0304: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %708 = power(%p0304, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%708, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1054 = %1053(%1052) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1055 = fn (%p0303: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1213: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p2122: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p361: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %702 = add(%p0303, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %703 = rsqrt(%702) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %704 = multiply(%p1213, %703) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %705 = multiply(%704, %p2122) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %706 = add(%705, %p361) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %707 = reshape(%706, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%707, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1056 = %1055(%1054, %1052, meta[relay.Constant][68] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][69] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1057 = fn (%p0302: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1212: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0302, %p1212, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1058 = %1057(%1056, meta[relay.Constant][70] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.0/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1059 = fn (%p0301: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1211: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p2121: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %692 = reshape(%p0301, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %693 = add(%p1211, %692) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %694 = divide(%693, %p2121) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %695 = cast(%694, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %696 = erf(%695) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %697 = cast(%693, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %698 = add(%696, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %699 = multiply(%697, %698) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %700 = multiply(%699, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %701 = reshape(%700, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%701, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1060 = %1059(%1058, meta[relay.Constant][71] /* ty=Tensor[(2048), float16] span=Identity_21.features.5.0.block.3.bias:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.0/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1061 = fn (%p0300: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1210: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0300, %p1210, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1062 = %1061(%1060, meta[relay.Constant][72] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.0/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1063 = fn (%p0299: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1209: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p2120: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p360: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %687 = reshape(%p0299, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %688 = add(%p1209, %687) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %689 = transpose(%688, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %690 = multiply(%p2120, %689) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %691 = layout_transform(%p360, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%690, %691) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1064 = %1063(%1062, meta[relay.Constant][73] /* ty=Tensor[(512), float16] span=Identity_176:0:0 */, meta[relay.Constant][74] /* ty=Tensor[(512, 1, 1), float16] span=Identity_25.features.5.0.layer_scale:0:0 */, %1044) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1065 = fn (%p0298: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0298, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1066 = %1065(%1064) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1067 = fn (%p0297: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1208: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p2119: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %686 = nn.conv2d(%p0297, %p1208, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%686, %p2119) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1068 = %1067(%1066, meta[relay.Constant][75] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][76] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1069 = fn (%p0296: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %685 = transpose(%p0296, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%685, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1070 = %1069(%1068) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1071 = fn (%p0391: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0391, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1072 = %1071(%1070) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1073 = fn (%p0295: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1207: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0295, %p1207) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1074 = %1073(%1070, %1072) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1075 = fn (%p0294: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %684 = power(%p0294, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%684, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1076 = %1075(%1074) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1077 = fn (%p0293: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1206: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p2118: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p359: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %678 = add(%p0293, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %679 = rsqrt(%678) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %680 = multiply(%p1206, %679) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %681 = multiply(%680, %p2118) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %682 = add(%681, %p359) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %683 = reshape(%682, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%683, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1078 = %1077(%1076, %1074, meta[relay.Constant][77] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][78] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1079 = fn (%p0292: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1205: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0292, %p1205, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1080 = %1079(%1078, meta[relay.Constant][79] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.1/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1081 = fn (%p0291: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1204: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p2117: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %668 = reshape(%p0291, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %669 = add(%p1204, %668) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %670 = divide(%669, %p2117) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %671 = cast(%670, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %672 = erf(%671) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %673 = cast(%669, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %674 = add(%672, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %675 = multiply(%673, %674) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %676 = multiply(%675, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %677 = reshape(%676, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%677, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1082 = %1081(%1080, meta[relay.Constant][80] /* ty=Tensor[(2048), float16] span=Identity_171:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.1/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1083 = fn (%p0290: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1203: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0290, %p1203, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1084 = %1083(%1082, meta[relay.Constant][81] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.1/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1085 = fn (%p0289: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1202: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p2116: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p358: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %664 = reshape(%p0289, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %665 = add(%p1202, %664) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %666 = transpose(%665, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %667 = multiply(%p2116, %666) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%667, %p358) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1086 = %1085(%1084, meta[relay.Constant][82] /* ty=Tensor[(512), float16] span=Identity_170:0:0 */, meta[relay.Constant][83] /* ty=Tensor[(512, 1, 1), float16] span=Identity_175:0:0 */, %1064) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1087 = fn (%p0288: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0288, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1088 = %1087(%1086) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1089 = fn (%p0287: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1201: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p2115: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %663 = nn.conv2d(%p0287, %p1201, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%663, %p2115) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1090 = %1089(%1088, meta[relay.Constant][84] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][85] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1091 = fn (%p0286: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %662 = transpose(%p0286, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%662, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1092 = %1091(%1090) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1093 = fn (%p0392: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0392, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1094 = %1093(%1092) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1095 = fn (%p0285: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1200: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0285, %p1200) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1096 = %1095(%1092, %1094) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1097 = fn (%p0284: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %661 = power(%p0284, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%661, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1098 = %1097(%1096) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1099 = fn (%p0283: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1199: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p2114: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p357: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %655 = add(%p0283, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %656 = rsqrt(%655) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %657 = multiply(%p1199, %656) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %658 = multiply(%657, %p2114) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %659 = add(%658, %p357) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %660 = reshape(%659, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%660, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1100 = %1099(%1098, %1096, meta[relay.Constant][86] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][87] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1101 = fn (%p0282: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1198: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0282, %p1198, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1102 = %1101(%1100, meta[relay.Constant][88] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.2/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1103 = fn (%p0281: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1197: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p2113: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %645 = reshape(%p0281, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %646 = add(%p1197, %645) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %647 = divide(%646, %p2113) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %648 = cast(%647, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %649 = erf(%648) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %650 = cast(%646, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %651 = add(%649, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %652 = multiply(%650, %651) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %653 = multiply(%652, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %654 = reshape(%653, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%654, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1104 = %1103(%1102, meta[relay.Constant][89] /* ty=Tensor[(2048), float16] span=Identity_165:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.2/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1105 = fn (%p0280: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1196: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0280, %p1196, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1106 = %1105(%1104, meta[relay.Constant][90] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.2/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1107 = fn (%p0279: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1195: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p2112: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p356: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %641 = reshape(%p0279, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %642 = add(%p1195, %641) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %643 = transpose(%642, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %644 = multiply(%p2112, %643) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%644, %p356) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1108 = %1107(%1106, meta[relay.Constant][91] /* ty=Tensor[(512), float16] span=Identity_164:0:0 */, meta[relay.Constant][92] /* ty=Tensor[(512, 1, 1), float16] span=Identity_169:0:0 */, %1086) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1109 = fn (%p0278: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0278, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1110 = %1109(%1108) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1111 = fn (%p0277: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1194: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p2111: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %640 = nn.conv2d(%p0277, %p1194, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%640, %p2111) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1112 = %1111(%1110, meta[relay.Constant][93] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][94] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1113 = fn (%p0276: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %639 = transpose(%p0276, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%639, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1114 = %1113(%1112) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1115 = fn (%p0393: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0393, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1116 = %1115(%1114) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1117 = fn (%p0275: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1193: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0275, %p1193) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1118 = %1117(%1114, %1116) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1119 = fn (%p0274: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %638 = power(%p0274, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%638, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1120 = %1119(%1118) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1121 = fn (%p0273: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1192: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p2110: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p355: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %632 = add(%p0273, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %633 = rsqrt(%632) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %634 = multiply(%p1192, %633) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %635 = multiply(%634, %p2110) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %636 = add(%635, %p355) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %637 = reshape(%636, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%637, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1122 = %1121(%1120, %1118, meta[relay.Constant][95] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][96] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1123 = fn (%p0272: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1191: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0272, %p1191, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1124 = %1123(%1122, meta[relay.Constant][97] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.3/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1125 = fn (%p0271: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1190: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p2109: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %622 = reshape(%p0271, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %623 = add(%p1190, %622) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %624 = divide(%623, %p2109) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %625 = cast(%624, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %626 = erf(%625) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %627 = cast(%623, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %628 = add(%626, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %629 = multiply(%627, %628) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %630 = multiply(%629, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %631 = reshape(%630, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%631, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1126 = %1125(%1124, meta[relay.Constant][98] /* ty=Tensor[(2048), float16] span=Identity_159:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.3/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1127 = fn (%p0270: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1189: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0270, %p1189, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1128 = %1127(%1126, meta[relay.Constant][99] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.3/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1129 = fn (%p0269: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1188: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p2108: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p354: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %618 = reshape(%p0269, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %619 = add(%p1188, %618) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %620 = transpose(%619, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %621 = multiply(%p2108, %620) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%621, %p354) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1130 = %1129(%1128, meta[relay.Constant][100] /* ty=Tensor[(512), float16] span=Identity_158:0:0 */, meta[relay.Constant][101] /* ty=Tensor[(512, 1, 1), float16] span=Identity_163:0:0 */, %1108) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1131 = fn (%p0268: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0268, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1132 = %1131(%1130) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1133 = fn (%p0267: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1187: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p2107: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %617 = nn.conv2d(%p0267, %p1187, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%617, %p2107) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1134 = %1133(%1132, meta[relay.Constant][102] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][103] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1135 = fn (%p0266: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %616 = transpose(%p0266, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%616, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1136 = %1135(%1134) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1137 = fn (%p0394: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0394, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1138 = %1137(%1136) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1139 = fn (%p0265: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1186: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0265, %p1186) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1140 = %1139(%1136, %1138) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1141 = fn (%p0264: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %615 = power(%p0264, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%615, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1142 = %1141(%1140) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1143 = fn (%p0263: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1185: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p2106: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p353: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %609 = add(%p0263, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %610 = rsqrt(%609) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %611 = multiply(%p1185, %610) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %612 = multiply(%611, %p2106) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %613 = add(%612, %p353) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %614 = reshape(%613, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%614, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1144 = %1143(%1142, %1140, meta[relay.Constant][104] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][105] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1145 = fn (%p0262: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1184: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0262, %p1184, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1146 = %1145(%1144, meta[relay.Constant][106] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.4/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1147 = fn (%p0261: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1183: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p2105: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %599 = reshape(%p0261, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %600 = add(%p1183, %599) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %601 = divide(%600, %p2105) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %602 = cast(%601, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %603 = erf(%602) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %604 = cast(%600, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %605 = add(%603, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %606 = multiply(%604, %605) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %607 = multiply(%606, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %608 = reshape(%607, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%608, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1148 = %1147(%1146, meta[relay.Constant][107] /* ty=Tensor[(2048), float16] span=Identity_153:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.4/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1149 = fn (%p0260: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1182: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0260, %p1182, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1150 = %1149(%1148, meta[relay.Constant][108] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.4/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1151 = fn (%p0259: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1181: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p2104: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p352: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %595 = reshape(%p0259, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %596 = add(%p1181, %595) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %597 = transpose(%596, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %598 = multiply(%p2104, %597) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%598, %p352) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1152 = %1151(%1150, meta[relay.Constant][109] /* ty=Tensor[(512), float16] span=Identity_152:0:0 */, meta[relay.Constant][110] /* ty=Tensor[(512, 1, 1), float16] span=Identity_157:0:0 */, %1130) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1153 = fn (%p0258: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0258, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1154 = %1153(%1152) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1155 = fn (%p0257: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1180: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p2103: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %594 = nn.conv2d(%p0257, %p1180, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%594, %p2103) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1156 = %1155(%1154, meta[relay.Constant][111] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][112] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1157 = fn (%p0256: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %593 = transpose(%p0256, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%593, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1158 = %1157(%1156) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1159 = fn (%p0395: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0395, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1160 = %1159(%1158) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1161 = fn (%p0255: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1179: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0255, %p1179) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1162 = %1161(%1158, %1160) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1163 = fn (%p0254: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %592 = power(%p0254, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%592, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1164 = %1163(%1162) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1165 = fn (%p0253: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1178: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p2102: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p351: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %586 = add(%p0253, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %587 = rsqrt(%586) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %588 = multiply(%p1178, %587) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %589 = multiply(%588, %p2102) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %590 = add(%589, %p351) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %591 = reshape(%590, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%591, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1166 = %1165(%1164, %1162, meta[relay.Constant][113] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][114] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1167 = fn (%p0252: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1177: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0252, %p1177, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1168 = %1167(%1166, meta[relay.Constant][115] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.5/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1169 = fn (%p0251: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1176: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p2101: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %576 = reshape(%p0251, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %577 = add(%p1176, %576) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %578 = divide(%577, %p2101) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %579 = cast(%578, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %580 = erf(%579) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %581 = cast(%577, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %582 = add(%580, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %583 = multiply(%581, %582) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %584 = multiply(%583, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %585 = reshape(%584, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%585, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1170 = %1169(%1168, meta[relay.Constant][116] /* ty=Tensor[(2048), float16] span=Identity_147:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.5/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1171 = fn (%p0250: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1175: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0250, %p1175, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1172 = %1171(%1170, meta[relay.Constant][117] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.5/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1173 = fn (%p0249: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1174: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p2100: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p350: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %572 = reshape(%p0249, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %573 = add(%p1174, %572) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %574 = transpose(%573, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %575 = multiply(%p2100, %574) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%575, %p350) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1174 = %1173(%1172, meta[relay.Constant][118] /* ty=Tensor[(512), float16] span=Identity_146:0:0 */, meta[relay.Constant][119] /* ty=Tensor[(512, 1, 1), float16] span=Identity_151:0:0 */, %1152) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1175 = fn (%p0248: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0248, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1176 = %1175(%1174) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1177 = fn (%p0247: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1173: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p299: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %571 = nn.conv2d(%p0247, %p1173, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%571, %p299) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1178 = %1177(%1176, meta[relay.Constant][120] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][121] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1179 = fn (%p0246: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %570 = transpose(%p0246, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%570, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1180 = %1179(%1178) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1181 = fn (%p0396: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0396, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1182 = %1181(%1180) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1183 = fn (%p0245: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1172: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0245, %p1172) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1184 = %1183(%1180, %1182) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1185 = fn (%p0244: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %569 = power(%p0244, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%569, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1186 = %1185(%1184) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1187 = fn (%p0243: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1171: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p298: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p349: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %563 = add(%p0243, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %564 = rsqrt(%563) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %565 = multiply(%p1171, %564) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %566 = multiply(%565, %p298) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %567 = add(%566, %p349) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %568 = reshape(%567, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%568, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1188 = %1187(%1186, %1184, meta[relay.Constant][122] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][123] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1189 = fn (%p0242: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1170: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0242, %p1170, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1190 = %1189(%1188, meta[relay.Constant][124] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.6/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1191 = fn (%p0241: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1169: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p297: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %553 = reshape(%p0241, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %554 = add(%p1169, %553) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %555 = divide(%554, %p297) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %556 = cast(%555, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %557 = erf(%556) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %558 = cast(%554, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %559 = add(%557, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %560 = multiply(%558, %559) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %561 = multiply(%560, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %562 = reshape(%561, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%562, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1192 = %1191(%1190, meta[relay.Constant][125] /* ty=Tensor[(2048), float16] span=Identity_141:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.6/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1193 = fn (%p0240: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1168: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0240, %p1168, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1194 = %1193(%1192, meta[relay.Constant][126] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.6/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1195 = fn (%p0239: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1167: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p296: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p348: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %549 = reshape(%p0239, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %550 = add(%p1167, %549) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %551 = transpose(%550, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %552 = multiply(%p296, %551) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%552, %p348) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1196 = %1195(%1194, meta[relay.Constant][127] /* ty=Tensor[(512), float16] span=Identity_140:0:0 */, meta[relay.Constant][128] /* ty=Tensor[(512, 1, 1), float16] span=Identity_145:0:0 */, %1174) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1197 = fn (%p0238: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0238, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1198 = %1197(%1196) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1199 = fn (%p0237: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1166: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p295: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %548 = nn.conv2d(%p0237, %p1166, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%548, %p295) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1200 = %1199(%1198, meta[relay.Constant][129] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][130] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1201 = fn (%p0236: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %547 = transpose(%p0236, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%547, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1202 = %1201(%1200) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1203 = fn (%p0397: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0397, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1204 = %1203(%1202) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1205 = fn (%p0235: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1165: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0235, %p1165) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1206 = %1205(%1202, %1204) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1207 = fn (%p0234: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %546 = power(%p0234, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%546, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1208 = %1207(%1206) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1209 = fn (%p0233: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1164: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p294: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p347: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %540 = add(%p0233, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %541 = rsqrt(%540) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %542 = multiply(%p1164, %541) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %543 = multiply(%542, %p294) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %544 = add(%543, %p347) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %545 = reshape(%544, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%545, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1210 = %1209(%1208, %1206, meta[relay.Constant][131] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][132] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1211 = fn (%p0232: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1163: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0232, %p1163, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1212 = %1211(%1210, meta[relay.Constant][133] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.7/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1213 = fn (%p0231: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1162: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p293: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %530 = reshape(%p0231, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %531 = add(%p1162, %530) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %532 = divide(%531, %p293) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %533 = cast(%532, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %534 = erf(%533) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %535 = cast(%531, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %536 = add(%534, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %537 = multiply(%535, %536) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %538 = multiply(%537, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %539 = reshape(%538, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%539, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1214 = %1213(%1212, meta[relay.Constant][134] /* ty=Tensor[(2048), float16] span=Identity_135:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.7/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1215 = fn (%p0230: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1161: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0230, %p1161, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1216 = %1215(%1214, meta[relay.Constant][135] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.7/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1217 = fn (%p0229: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1160: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p292: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p346: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %526 = reshape(%p0229, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %527 = add(%p1160, %526) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %528 = transpose(%527, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %529 = multiply(%p292, %528) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%529, %p346) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1218 = %1217(%1216, meta[relay.Constant][136] /* ty=Tensor[(512), float16] span=Identity_134:0:0 */, meta[relay.Constant][137] /* ty=Tensor[(512, 1, 1), float16] span=Identity_139:0:0 */, %1196) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1219 = fn (%p0228: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0228, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1220 = %1219(%1218) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1221 = fn (%p0227: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1159: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p291: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %525 = nn.conv2d(%p0227, %p1159, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%525, %p291) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1222 = %1221(%1220, meta[relay.Constant][138] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][139] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1223 = fn (%p0226: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %524 = transpose(%p0226, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%524, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1224 = %1223(%1222) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1225 = fn (%p0398: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0398, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1226 = %1225(%1224) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1227 = fn (%p0225: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1158: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0225, %p1158) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1228 = %1227(%1224, %1226) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1229 = fn (%p0224: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %523 = power(%p0224, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%523, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1230 = %1229(%1228) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1231 = fn (%p0223: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1157: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p290: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p345: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %517 = add(%p0223, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %518 = rsqrt(%517) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %519 = multiply(%p1157, %518) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %520 = multiply(%519, %p290) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %521 = add(%520, %p345) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %522 = reshape(%521, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%522, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1232 = %1231(%1230, %1228, meta[relay.Constant][140] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][141] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1233 = fn (%p0222: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1156: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0222, %p1156, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1234 = %1233(%1232, meta[relay.Constant][142] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.8/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1235 = fn (%p0221: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1155: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p289: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %507 = reshape(%p0221, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %508 = add(%p1155, %507) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %509 = divide(%508, %p289) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %510 = cast(%509, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %511 = erf(%510) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %512 = cast(%508, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %513 = add(%511, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %514 = multiply(%512, %513) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %515 = multiply(%514, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %516 = reshape(%515, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%516, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1236 = %1235(%1234, meta[relay.Constant][143] /* ty=Tensor[(2048), float16] span=Identity_129:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.8/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1237 = fn (%p0220: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1154: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0220, %p1154, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1238 = %1237(%1236, meta[relay.Constant][144] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.8/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1239 = fn (%p0219: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1153: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p288: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p344: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %503 = reshape(%p0219, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %504 = add(%p1153, %503) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %505 = transpose(%504, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %506 = multiply(%p288, %505) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%506, %p344) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1240 = %1239(%1238, meta[relay.Constant][145] /* ty=Tensor[(512), float16] span=Identity_128:0:0 */, meta[relay.Constant][146] /* ty=Tensor[(512, 1, 1), float16] span=Identity_133:0:0 */, %1218) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1241 = fn (%p0218: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0218, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1242 = %1241(%1240) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1243 = fn (%p0217: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1152: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p287: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %502 = nn.conv2d(%p0217, %p1152, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%502, %p287) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1244 = %1243(%1242, meta[relay.Constant][147] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][148] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1245 = fn (%p0216: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %501 = transpose(%p0216, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%501, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1246 = %1245(%1244) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1247 = fn (%p0399: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0399, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1248 = %1247(%1246) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1249 = fn (%p0215: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1151: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0215, %p1151) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1250 = %1249(%1246, %1248) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1251 = fn (%p0214: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %500 = power(%p0214, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%500, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1252 = %1251(%1250) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1253 = fn (%p0213: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1150: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p286: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p343: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %494 = add(%p0213, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %495 = rsqrt(%494) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %496 = multiply(%p1150, %495) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %497 = multiply(%496, %p286) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %498 = add(%497, %p343) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %499 = reshape(%498, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%499, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1254 = %1253(%1252, %1250, meta[relay.Constant][149] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][150] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1255 = fn (%p0212: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1149: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0212, %p1149, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1256 = %1255(%1254, meta[relay.Constant][151] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.9/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1257 = fn (%p0211: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1148: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p285: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %484 = reshape(%p0211, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %485 = add(%p1148, %484) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %486 = divide(%485, %p285) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %487 = cast(%486, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %488 = erf(%487) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %489 = cast(%485, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %490 = add(%488, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %491 = multiply(%489, %490) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %492 = multiply(%491, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %493 = reshape(%492, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%493, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1258 = %1257(%1256, meta[relay.Constant][152] /* ty=Tensor[(2048), float16] span=Identity_123:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.9/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1259 = fn (%p0210: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1147: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0210, %p1147, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1260 = %1259(%1258, meta[relay.Constant][153] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.9/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1261 = fn (%p0209: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1146: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p284: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p342: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %480 = reshape(%p0209, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %481 = add(%p1146, %480) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %482 = transpose(%481, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %483 = multiply(%p284, %482) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%483, %p342) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1262 = %1261(%1260, meta[relay.Constant][154] /* ty=Tensor[(512), float16] span=Identity_122:0:0 */, meta[relay.Constant][155] /* ty=Tensor[(512, 1, 1), float16] span=Identity_127:0:0 */, %1240) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1263 = fn (%p0208: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0208, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1264 = %1263(%1262) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1265 = fn (%p0207: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1145: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p283: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %479 = nn.conv2d(%p0207, %p1145, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%479, %p283) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1266 = %1265(%1264, meta[relay.Constant][156] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][157] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1267 = fn (%p0206: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %478 = transpose(%p0206, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%478, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1268 = %1267(%1266) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1269 = fn (%p0400: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0400, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1270 = %1269(%1268) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1271 = fn (%p0205: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1144: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0205, %p1144) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1272 = %1271(%1268, %1270) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1273 = fn (%p0204: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %477 = power(%p0204, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%477, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1274 = %1273(%1272) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1275 = fn (%p0203: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1143: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p282: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p341: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %471 = add(%p0203, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %472 = rsqrt(%471) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %473 = multiply(%p1143, %472) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %474 = multiply(%473, %p282) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %475 = add(%474, %p341) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %476 = reshape(%475, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%476, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1276 = %1275(%1274, %1272, meta[relay.Constant][158] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][159] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1277 = fn (%p0202: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1142: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0202, %p1142, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1278 = %1277(%1276, meta[relay.Constant][160] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.10/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1279 = fn (%p0201: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1141: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p281: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %461 = reshape(%p0201, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %462 = add(%p1141, %461) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %463 = divide(%462, %p281) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %464 = cast(%463, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %465 = erf(%464) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %466 = cast(%462, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %467 = add(%465, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %468 = multiply(%466, %467) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %469 = multiply(%468, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %470 = reshape(%469, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%470, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1280 = %1279(%1278, meta[relay.Constant][161] /* ty=Tensor[(2048), float16] span=Identity_117:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.10/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1281 = fn (%p0200: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1140: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0200, %p1140, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1282 = %1281(%1280, meta[relay.Constant][162] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.10/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1283 = fn (%p0199: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1139: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p280: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p340: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %457 = reshape(%p0199, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %458 = add(%p1139, %457) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %459 = transpose(%458, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %460 = multiply(%p280, %459) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%460, %p340) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1284 = %1283(%1282, meta[relay.Constant][163] /* ty=Tensor[(512), float16] span=Identity_116:0:0 */, meta[relay.Constant][164] /* ty=Tensor[(512, 1, 1), float16] span=Identity_121:0:0 */, %1262) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1285 = fn (%p0198: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0198, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1286 = %1285(%1284) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1287 = fn (%p0197: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1138: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p279: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %456 = nn.conv2d(%p0197, %p1138, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%456, %p279) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1288 = %1287(%1286, meta[relay.Constant][165] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][166] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1289 = fn (%p0196: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %455 = transpose(%p0196, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%455, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1290 = %1289(%1288) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1291 = fn (%p0401: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0401, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1292 = %1291(%1290) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1293 = fn (%p0195: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1137: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0195, %p1137) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1294 = %1293(%1290, %1292) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1295 = fn (%p0194: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %454 = power(%p0194, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%454, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1296 = %1295(%1294) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1297 = fn (%p0193: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1136: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p278: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p339: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %448 = add(%p0193, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %449 = rsqrt(%448) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %450 = multiply(%p1136, %449) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %451 = multiply(%450, %p278) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %452 = add(%451, %p339) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %453 = reshape(%452, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%453, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1298 = %1297(%1296, %1294, meta[relay.Constant][167] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][168] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1299 = fn (%p0192: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1135: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0192, %p1135, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1300 = %1299(%1298, meta[relay.Constant][169] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.11/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1301 = fn (%p0191: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1134: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p277: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %438 = reshape(%p0191, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %439 = add(%p1134, %438) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %440 = divide(%439, %p277) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %441 = cast(%440, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %442 = erf(%441) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %443 = cast(%439, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %444 = add(%442, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %445 = multiply(%443, %444) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %446 = multiply(%445, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %447 = reshape(%446, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%447, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1302 = %1301(%1300, meta[relay.Constant][170] /* ty=Tensor[(2048), float16] span=Identity_111:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.11/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1303 = fn (%p0190: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1133: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0190, %p1133, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1304 = %1303(%1302, meta[relay.Constant][171] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.11/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1305 = fn (%p0189: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1132: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p276: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p338: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %434 = reshape(%p0189, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %435 = add(%p1132, %434) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %436 = transpose(%435, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %437 = multiply(%p276, %436) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%437, %p338) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1306 = %1305(%1304, meta[relay.Constant][172] /* ty=Tensor[(512), float16] span=Identity_110:0:0 */, meta[relay.Constant][173] /* ty=Tensor[(512, 1, 1), float16] span=Identity_115:0:0 */, %1284) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1307 = fn (%p0188: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0188, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1308 = %1307(%1306) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1309 = fn (%p0187: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1131: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p275: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %433 = nn.conv2d(%p0187, %p1131, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%433, %p275) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1310 = %1309(%1308, meta[relay.Constant][174] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][175] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1311 = fn (%p0186: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %432 = transpose(%p0186, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%432, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1312 = %1311(%1310) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1313 = fn (%p0402: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0402, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1314 = %1313(%1312) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1315 = fn (%p0185: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1130: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0185, %p1130) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1316 = %1315(%1312, %1314) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1317 = fn (%p0184: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %431 = power(%p0184, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%431, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1318 = %1317(%1316) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1319 = fn (%p0183: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1129: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p274: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p337: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %425 = add(%p0183, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %426 = rsqrt(%425) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %427 = multiply(%p1129, %426) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %428 = multiply(%427, %p274) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %429 = add(%428, %p337) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %430 = reshape(%429, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%430, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1320 = %1319(%1318, %1316, meta[relay.Constant][176] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][177] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1321 = fn (%p0182: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1128: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0182, %p1128, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1322 = %1321(%1320, meta[relay.Constant][178] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.12/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1323 = fn (%p0181: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1127: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p273: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %415 = reshape(%p0181, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %416 = add(%p1127, %415) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %417 = divide(%416, %p273) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %418 = cast(%417, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %419 = erf(%418) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %420 = cast(%416, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %421 = add(%419, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %422 = multiply(%420, %421) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %423 = multiply(%422, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %424 = reshape(%423, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%424, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1324 = %1323(%1322, meta[relay.Constant][179] /* ty=Tensor[(2048), float16] span=Identity_105:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.12/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1325 = fn (%p0180: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1126: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0180, %p1126, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1326 = %1325(%1324, meta[relay.Constant][180] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.12/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1327 = fn (%p0179: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1125: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p272: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p336: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %411 = reshape(%p0179, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %412 = add(%p1125, %411) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %413 = transpose(%412, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %414 = multiply(%p272, %413) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%414, %p336) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1328 = %1327(%1326, meta[relay.Constant][181] /* ty=Tensor[(512), float16] span=Identity_104:0:0 */, meta[relay.Constant][182] /* ty=Tensor[(512, 1, 1), float16] span=Identity_109:0:0 */, %1306) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1329 = fn (%p0178: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0178, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1330 = %1329(%1328) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1331 = fn (%p0177: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1124: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p271: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %410 = nn.conv2d(%p0177, %p1124, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%410, %p271) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1332 = %1331(%1330, meta[relay.Constant][183] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][184] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1333 = fn (%p0176: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %409 = transpose(%p0176, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%409, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1334 = %1333(%1332) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1335 = fn (%p0403: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0403, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1336 = %1335(%1334) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1337 = fn (%p0175: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1123: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0175, %p1123) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1338 = %1337(%1334, %1336) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1339 = fn (%p0174: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %408 = power(%p0174, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%408, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1340 = %1339(%1338) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1341 = fn (%p0173: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1122: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p270: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p335: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %402 = add(%p0173, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %403 = rsqrt(%402) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %404 = multiply(%p1122, %403) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %405 = multiply(%404, %p270) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %406 = add(%405, %p335) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %407 = reshape(%406, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%407, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1342 = %1341(%1340, %1338, meta[relay.Constant][185] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][186] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1343 = fn (%p0172: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1121: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0172, %p1121, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1344 = %1343(%1342, meta[relay.Constant][187] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.13/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1345 = fn (%p0171: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1120: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p269: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %392 = reshape(%p0171, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %393 = add(%p1120, %392) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %394 = divide(%393, %p269) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %395 = cast(%394, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %396 = erf(%395) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %397 = cast(%393, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %398 = add(%396, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %399 = multiply(%397, %398) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %400 = multiply(%399, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %401 = reshape(%400, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%401, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1346 = %1345(%1344, meta[relay.Constant][188] /* ty=Tensor[(2048), float16] span=Identity_99:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.13/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1347 = fn (%p0170: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1119: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0170, %p1119, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1348 = %1347(%1346, meta[relay.Constant][189] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.13/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1349 = fn (%p0169: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1118: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p268: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p334: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %388 = reshape(%p0169, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %389 = add(%p1118, %388) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %390 = transpose(%389, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %391 = multiply(%p268, %390) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%391, %p334) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1350 = %1349(%1348, meta[relay.Constant][190] /* ty=Tensor[(512), float16] span=Identity_98:0:0 */, meta[relay.Constant][191] /* ty=Tensor[(512, 1, 1), float16] span=Identity_103:0:0 */, %1328) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1351 = fn (%p0168: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0168, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1352 = %1351(%1350) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1353 = fn (%p0167: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1117: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p267: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %387 = nn.conv2d(%p0167, %p1117, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%387, %p267) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1354 = %1353(%1352, meta[relay.Constant][192] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][193] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1355 = fn (%p0166: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %386 = transpose(%p0166, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%386, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1356 = %1355(%1354) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1357 = fn (%p0404: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0404, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1358 = %1357(%1356) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1359 = fn (%p0165: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1116: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0165, %p1116) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1360 = %1359(%1356, %1358) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1361 = fn (%p0164: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %385 = power(%p0164, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%385, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1362 = %1361(%1360) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1363 = fn (%p0163: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1115: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p266: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p333: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %379 = add(%p0163, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %380 = rsqrt(%379) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %381 = multiply(%p1115, %380) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %382 = multiply(%381, %p266) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %383 = add(%382, %p333) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %384 = reshape(%383, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%384, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1364 = %1363(%1362, %1360, meta[relay.Constant][194] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][195] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1365 = fn (%p0162: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1114: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0162, %p1114, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1366 = %1365(%1364, meta[relay.Constant][196] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.14/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1367 = fn (%p0161: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1113: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p265: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %369 = reshape(%p0161, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %370 = add(%p1113, %369) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %371 = divide(%370, %p265) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %372 = cast(%371, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %373 = erf(%372) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %374 = cast(%370, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %375 = add(%373, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %376 = multiply(%374, %375) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %377 = multiply(%376, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %378 = reshape(%377, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%378, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1368 = %1367(%1366, meta[relay.Constant][197] /* ty=Tensor[(2048), float16] span=Identity_93:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.14/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1369 = fn (%p0160: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1112: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0160, %p1112, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1370 = %1369(%1368, meta[relay.Constant][198] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.14/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1371 = fn (%p0159: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1111: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p264: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p332: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %365 = reshape(%p0159, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %366 = add(%p1111, %365) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %367 = transpose(%366, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %368 = multiply(%p264, %367) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%368, %p332) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1372 = %1371(%1370, meta[relay.Constant][199] /* ty=Tensor[(512), float16] span=Identity_92:0:0 */, meta[relay.Constant][200] /* ty=Tensor[(512, 1, 1), float16] span=Identity_97:0:0 */, %1350) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1373 = fn (%p0158: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0158, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1374 = %1373(%1372) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1375 = fn (%p0157: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1110: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p263: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %364 = nn.conv2d(%p0157, %p1110, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%364, %p263) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1376 = %1375(%1374, meta[relay.Constant][201] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][202] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1377 = fn (%p0156: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %363 = transpose(%p0156, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%363, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1378 = %1377(%1376) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1379 = fn (%p0405: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0405, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1380 = %1379(%1378) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1381 = fn (%p0155: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1109: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0155, %p1109) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1382 = %1381(%1378, %1380) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1383 = fn (%p0154: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %362 = power(%p0154, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%362, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1384 = %1383(%1382) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1385 = fn (%p0153: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1108: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p262: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p331: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %356 = add(%p0153, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %357 = rsqrt(%356) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %358 = multiply(%p1108, %357) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %359 = multiply(%358, %p262) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %360 = add(%359, %p331) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %361 = reshape(%360, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%361, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1386 = %1385(%1384, %1382, meta[relay.Constant][203] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][204] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1387 = fn (%p0152: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1107: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0152, %p1107, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1388 = %1387(%1386, meta[relay.Constant][205] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.15/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1389 = fn (%p0151: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1106: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p261: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %346 = reshape(%p0151, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %347 = add(%p1106, %346) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %348 = divide(%347, %p261) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %349 = cast(%348, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %350 = erf(%349) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %351 = cast(%347, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %352 = add(%350, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %353 = multiply(%351, %352) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %354 = multiply(%353, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %355 = reshape(%354, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%355, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1390 = %1389(%1388, meta[relay.Constant][206] /* ty=Tensor[(2048), float16] span=Identity_87:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.15/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1391 = fn (%p0150: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p1105: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0150, %p1105, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1392 = %1391(%1390, meta[relay.Constant][207] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.15/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1393 = fn (%p0149: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1104: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p260: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p330: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %342 = reshape(%p0149, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %343 = add(%p1104, %342) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %344 = transpose(%343, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %345 = multiply(%p260, %344) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%345, %p330) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1394 = %1393(%1392, meta[relay.Constant][208] /* ty=Tensor[(512), float16] span=Identity_86:0:0 */, meta[relay.Constant][209] /* ty=Tensor[(512, 1, 1), float16] span=Identity_91:0:0 */, %1372) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1395 = fn (%p0148: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0148, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1396 = %1395(%1394) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1397 = fn (%p0147: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p1103: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p259: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %341 = nn.conv2d(%p0147, %p1103, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%341, %p259) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1398 = %1397(%1396, meta[relay.Constant][210] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][211] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1399 = fn (%p0146: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %340 = transpose(%p0146, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%340, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1400 = %1399(%1398) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1401 = fn (%p0406: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0406, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1402 = %1401(%1400) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1403 = fn (%p0145: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p1102: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0145, %p1102) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1404 = %1403(%1400, %1402) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1405 = fn (%p0144: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %339 = power(%p0144, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%339, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1406 = %1405(%1404) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1407 = fn (%p0143: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p1101: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p258: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p329: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %333 = add(%p0143, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %334 = rsqrt(%333) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %335 = multiply(%p1101, %334) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %336 = multiply(%335, %p258) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %337 = add(%336, %p329) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %338 = reshape(%337, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%338, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1408 = %1407(%1406, %1404, meta[relay.Constant][212] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][213] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1409 = fn (%p0142: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p1100: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0142, %p1100, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1410 = %1409(%1408, meta[relay.Constant][214] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.16/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1411 = fn (%p0141: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p199: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p257: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %323 = reshape(%p0141, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %324 = add(%p199, %323) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %325 = divide(%324, %p257) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %326 = cast(%325, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %327 = erf(%326) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %328 = cast(%324, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %329 = add(%327, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %330 = multiply(%328, %329) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %331 = multiply(%330, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %332 = reshape(%331, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%332, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1412 = %1411(%1410, meta[relay.Constant][215] /* ty=Tensor[(2048), float16] span=Identity_81:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.16/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1413 = fn (%p0140: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p198: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0140, %p198, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1414 = %1413(%1412, meta[relay.Constant][216] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.16/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1415 = fn (%p0139: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p197: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p256: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p328: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %319 = reshape(%p0139, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %320 = add(%p197, %319) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %321 = transpose(%320, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %322 = multiply(%p256, %321) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%322, %p328) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1416 = %1415(%1414, meta[relay.Constant][217] /* ty=Tensor[(512), float16] span=Identity_80:0:0 */, meta[relay.Constant][218] /* ty=Tensor[(512, 1, 1), float16] span=Identity_85:0:0 */, %1394) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1417 = fn (%p0138: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0138, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1418 = %1417(%1416) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1419 = fn (%p0137: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p196: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p255: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %318 = nn.conv2d(%p0137, %p196, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%318, %p255) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1420 = %1419(%1418, meta[relay.Constant][219] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][220] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1421 = fn (%p0136: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %317 = transpose(%p0136, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%317, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1422 = %1421(%1420) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1423 = fn (%p0407: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0407, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1424 = %1423(%1422) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1425 = fn (%p0135: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p195: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0135, %p195) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1426 = %1425(%1422, %1424) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1427 = fn (%p0134: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %316 = power(%p0134, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%316, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1428 = %1427(%1426) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1429 = fn (%p0133: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p194: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p254: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p327: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %310 = add(%p0133, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %311 = rsqrt(%310) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %312 = multiply(%p194, %311) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %313 = multiply(%312, %p254) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %314 = add(%313, %p327) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %315 = reshape(%314, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%315, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1430 = %1429(%1428, %1426, meta[relay.Constant][221] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][222] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1431 = fn (%p0132: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p193: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0132, %p193, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1432 = %1431(%1430, meta[relay.Constant][223] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.17/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1433 = fn (%p0131: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p192: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p253: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %300 = reshape(%p0131, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %301 = add(%p192, %300) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %302 = divide(%301, %p253) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %303 = cast(%302, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %304 = erf(%303) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %305 = cast(%301, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %306 = add(%304, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %307 = multiply(%305, %306) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %308 = multiply(%307, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %309 = reshape(%308, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%309, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1434 = %1433(%1432, meta[relay.Constant][224] /* ty=Tensor[(2048), float16] span=Identity_75:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.17/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1435 = fn (%p0130: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p191: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0130, %p191, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1436 = %1435(%1434, meta[relay.Constant][225] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.17/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1437 = fn (%p0129: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p190: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p252: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p326: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %296 = reshape(%p0129, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %297 = add(%p190, %296) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %298 = transpose(%297, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %299 = multiply(%p252, %298) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%299, %p326) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1438 = %1437(%1436, meta[relay.Constant][226] /* ty=Tensor[(512), float16] span=Identity_74:0:0 */, meta[relay.Constant][227] /* ty=Tensor[(512, 1, 1), float16] span=Identity_79:0:0 */, %1416) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1439 = fn (%p0128: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0128, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1440 = %1439(%1438) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1441 = fn (%p0127: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p189: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p251: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %295 = nn.conv2d(%p0127, %p189, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%295, %p251) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1442 = %1441(%1440, meta[relay.Constant][228] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][229] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1443 = fn (%p0126: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %294 = transpose(%p0126, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%294, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1444 = %1443(%1442) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1445 = fn (%p0408: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0408, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1446 = %1445(%1444) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1447 = fn (%p0125: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p188: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0125, %p188) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1448 = %1447(%1444, %1446) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1449 = fn (%p0124: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %293 = power(%p0124, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%293, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1450 = %1449(%1448) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1451 = fn (%p0123: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p187: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p250: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p325: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %287 = add(%p0123, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %288 = rsqrt(%287) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %289 = multiply(%p187, %288) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %290 = multiply(%289, %p250) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %291 = add(%290, %p325) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %292 = reshape(%291, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%292, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1452 = %1451(%1450, %1448, meta[relay.Constant][230] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][231] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1453 = fn (%p0122: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p186: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0122, %p186, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1454 = %1453(%1452, meta[relay.Constant][232] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.18/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1455 = fn (%p0121: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p185: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p249: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %277 = reshape(%p0121, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %278 = add(%p185, %277) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %279 = divide(%278, %p249) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %280 = cast(%279, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %281 = erf(%280) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %282 = cast(%278, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %283 = add(%281, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %284 = multiply(%282, %283) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %285 = multiply(%284, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %286 = reshape(%285, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%286, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1456 = %1455(%1454, meta[relay.Constant][233] /* ty=Tensor[(2048), float16] span=Identity_69:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.18/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1457 = fn (%p0120: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p184: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0120, %p184, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1458 = %1457(%1456, meta[relay.Constant][234] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.18/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1459 = fn (%p0119: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p183: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p248: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p324: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %273 = reshape(%p0119, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %274 = add(%p183, %273) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %275 = transpose(%274, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %276 = multiply(%p248, %275) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%276, %p324) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1460 = %1459(%1458, meta[relay.Constant][235] /* ty=Tensor[(512), float16] span=Identity_68:0:0 */, meta[relay.Constant][236] /* ty=Tensor[(512, 1, 1), float16] span=Identity_73:0:0 */, %1438) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1461 = fn (%p0118: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0118, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1462 = %1461(%1460) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1463 = fn (%p0117: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p182: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p247: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %272 = nn.conv2d(%p0117, %p182, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%272, %p247) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1464 = %1463(%1462, meta[relay.Constant][237] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][238] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1465 = fn (%p0116: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %271 = transpose(%p0116, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%271, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1466 = %1465(%1464) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1467 = fn (%p0409: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0409, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1468 = %1467(%1466) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1469 = fn (%p0115: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p181: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0115, %p181) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1470 = %1469(%1466, %1468) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1471 = fn (%p0114: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %270 = power(%p0114, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%270, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1472 = %1471(%1470) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1473 = fn (%p0113: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p180: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p246: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p323: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %264 = add(%p0113, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %265 = rsqrt(%264) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %266 = multiply(%p180, %265) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %267 = multiply(%266, %p246) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %268 = add(%267, %p323) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %269 = reshape(%268, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%269, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1474 = %1473(%1472, %1470, meta[relay.Constant][239] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][240] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1475 = fn (%p0112: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p179: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0112, %p179, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1476 = %1475(%1474, meta[relay.Constant][241] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.19/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1477 = fn (%p0111: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p178: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p245: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %254 = reshape(%p0111, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %255 = add(%p178, %254) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %256 = divide(%255, %p245) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %257 = cast(%256, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %258 = erf(%257) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %259 = cast(%255, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %260 = add(%258, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %261 = multiply(%259, %260) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %262 = multiply(%261, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %263 = reshape(%262, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%263, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1478 = %1477(%1476, meta[relay.Constant][242] /* ty=Tensor[(2048), float16] span=Identity_63:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.19/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1479 = fn (%p0110: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p177: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0110, %p177, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1480 = %1479(%1478, meta[relay.Constant][243] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.19/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1481 = fn (%p0109: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p176: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p244: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p322: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %250 = reshape(%p0109, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %251 = add(%p176, %250) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %252 = transpose(%251, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %253 = multiply(%p244, %252) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%253, %p322) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1482 = %1481(%1480, meta[relay.Constant][244] /* ty=Tensor[(512), float16] span=Identity_62:0:0 */, meta[relay.Constant][245] /* ty=Tensor[(512, 1, 1), float16] span=Identity_67:0:0 */, %1460) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1483 = fn (%p0108: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p0108, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1484 = %1483(%1482) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1485 = fn (%p0107: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p175: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p243: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %249 = nn.conv2d(%p0107, %p175, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%249, %p243) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1486 = %1485(%1484, meta[relay.Constant][246] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][247] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1487 = fn (%p0106: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %248 = transpose(%p0106, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%248, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1488 = %1487(%1486) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1489 = fn (%p0410: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0410, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1490 = %1489(%1488) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1491 = fn (%p0105: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p174: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p0105, %p174) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1492 = %1491(%1488, %1490) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1493 = fn (%p0104: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %247 = power(%p0104, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%247, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1494 = %1493(%1492) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1495 = fn (%p0103: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p173: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p242: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p321: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %241 = add(%p0103, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %242 = rsqrt(%241) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %243 = multiply(%p173, %242) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %244 = multiply(%243, %p242) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %245 = add(%244, %p321) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %246 = reshape(%245, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%246, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1496 = %1495(%1494, %1492, meta[relay.Constant][248] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][249] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1497 = fn (%p0102: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p172: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p0102, %p172, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1498 = %1497(%1496, meta[relay.Constant][250] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.20/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1499 = fn (%p0101: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p171: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p241: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %231 = reshape(%p0101, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %232 = add(%p171, %231) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %233 = divide(%232, %p241) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %234 = cast(%233, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %235 = erf(%234) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %236 = cast(%232, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %237 = add(%235, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %238 = multiply(%236, %237) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %239 = multiply(%238, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %240 = reshape(%239, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%240, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1500 = %1499(%1498, meta[relay.Constant][251] /* ty=Tensor[(2048), float16] span=Identity_57:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.20/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1501 = fn (%p0100: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p170: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p0100, %p170, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1502 = %1501(%1500, meta[relay.Constant][252] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.20/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1503 = fn (%p099: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p169: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p240: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p320: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %227 = reshape(%p099, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %228 = add(%p169, %227) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %229 = transpose(%228, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %230 = multiply(%p240, %229) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%230, %p320) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1504 = %1503(%1502, meta[relay.Constant][253] /* ty=Tensor[(512), float16] span=Identity_56:0:0 */, meta[relay.Constant][254] /* ty=Tensor[(512, 1, 1), float16] span=Identity_61:0:0 */, %1482) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1505 = fn (%p098: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p098, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1506 = %1505(%1504) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1507 = fn (%p097: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p168: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p239: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %226 = nn.conv2d(%p097, %p168, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%226, %p239) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1508 = %1507(%1506, meta[relay.Constant][255] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][256] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1509 = fn (%p096: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %225 = transpose(%p096, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%225, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1510 = %1509(%1508) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1511 = fn (%p0411: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0411, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1512 = %1511(%1510) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1513 = fn (%p095: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p167: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p095, %p167) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1514 = %1513(%1510, %1512) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1515 = fn (%p094: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %224 = power(%p094, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%224, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1516 = %1515(%1514) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1517 = fn (%p093: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p166: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p238: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p319: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %218 = add(%p093, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %219 = rsqrt(%218) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %220 = multiply(%p166, %219) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %221 = multiply(%220, %p238) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %222 = add(%221, %p319) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %223 = reshape(%222, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%223, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1518 = %1517(%1516, %1514, meta[relay.Constant][257] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][258] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1519 = fn (%p092: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p165: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p092, %p165, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1520 = %1519(%1518, meta[relay.Constant][259] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.21/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1521 = fn (%p091: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p164: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p237: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %208 = reshape(%p091, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %209 = add(%p164, %208) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %210 = divide(%209, %p237) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %211 = cast(%210, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %212 = erf(%211) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %213 = cast(%209, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %214 = add(%212, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %215 = multiply(%213, %214) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %216 = multiply(%215, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %217 = reshape(%216, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%217, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1522 = %1521(%1520, meta[relay.Constant][260] /* ty=Tensor[(2048), float16] span=Identity_51:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.21/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1523 = fn (%p090: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p163: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p090, %p163, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1524 = %1523(%1522, meta[relay.Constant][261] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.21/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1525 = fn (%p089: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p162: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p236: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p318: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %204 = reshape(%p089, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %205 = add(%p162, %204) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %206 = transpose(%205, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %207 = multiply(%p236, %206) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%207, %p318) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1526 = %1525(%1524, meta[relay.Constant][262] /* ty=Tensor[(512), float16] span=Identity_50:0:0 */, meta[relay.Constant][263] /* ty=Tensor[(512, 1, 1), float16] span=Identity_55:0:0 */, %1504) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1527 = fn (%p088: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p088, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1528 = %1527(%1526) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1529 = fn (%p087: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p161: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p235: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %203 = nn.conv2d(%p087, %p161, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%203, %p235) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1530 = %1529(%1528, meta[relay.Constant][264] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][265] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1531 = fn (%p086: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %202 = transpose(%p086, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%202, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1532 = %1531(%1530) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1533 = fn (%p0412: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0412, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1534 = %1533(%1532) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1535 = fn (%p085: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p160: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p085, %p160) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1536 = %1535(%1532, %1534) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1537 = fn (%p084: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %201 = power(%p084, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%201, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1538 = %1537(%1536) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1539 = fn (%p083: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p159: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p234: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p317: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %195 = add(%p083, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %196 = rsqrt(%195) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %197 = multiply(%p159, %196) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %198 = multiply(%197, %p234) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %199 = add(%198, %p317) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %200 = reshape(%199, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%200, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1540 = %1539(%1538, %1536, meta[relay.Constant][266] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][267] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1541 = fn (%p082: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p158: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p082, %p158, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1542 = %1541(%1540, meta[relay.Constant][268] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.22/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1543 = fn (%p081: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p157: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p233: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %185 = reshape(%p081, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %186 = add(%p157, %185) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %187 = divide(%186, %p233) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %188 = cast(%187, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %189 = erf(%188) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %190 = cast(%186, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %191 = add(%189, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %192 = multiply(%190, %191) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %193 = multiply(%192, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %194 = reshape(%193, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%194, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1544 = %1543(%1542, meta[relay.Constant][269] /* ty=Tensor[(2048), float16] span=Identity_45:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.22/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1545 = fn (%p080: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p156: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p080, %p156, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1546 = %1545(%1544, meta[relay.Constant][270] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.22/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1547 = fn (%p079: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p155: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p232: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p316: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %181 = reshape(%p079, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %182 = add(%p155, %181) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %183 = transpose(%182, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %184 = multiply(%p232, %183) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%184, %p316) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1548 = %1547(%1546, meta[relay.Constant][271] /* ty=Tensor[(512), float16] span=Identity_44:0:0 */, meta[relay.Constant][272] /* ty=Tensor[(512, 1, 1), float16] span=Identity_49:0:0 */, %1526) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1549 = fn (%p078: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p078, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1550 = %1549(%1548) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1551 = fn (%p077: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p154: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p231: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %180 = nn.conv2d(%p077, %p154, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%180, %p231) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1552 = %1551(%1550, meta[relay.Constant][273] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][274] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1553 = fn (%p076: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %179 = transpose(%p076, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%179, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1554 = %1553(%1552) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1555 = fn (%p0413: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0413, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1556 = %1555(%1554) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1557 = fn (%p075: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p153: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p075, %p153) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1558 = %1557(%1554, %1556) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1559 = fn (%p074: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %178 = power(%p074, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%178, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1560 = %1559(%1558) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1561 = fn (%p073: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p152: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p230: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p315: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %172 = add(%p073, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %173 = rsqrt(%172) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %174 = multiply(%p152, %173) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %175 = multiply(%174, %p230) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %176 = add(%175, %p315) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %177 = reshape(%176, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%177, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1562 = %1561(%1560, %1558, meta[relay.Constant][275] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][276] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1563 = fn (%p072: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p151: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p072, %p151, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1564 = %1563(%1562, meta[relay.Constant][277] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.23/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1565 = fn (%p071: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p150: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p229: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %162 = reshape(%p071, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %163 = add(%p150, %162) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %164 = divide(%163, %p229) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %165 = cast(%164, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %166 = erf(%165) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %167 = cast(%163, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %168 = add(%166, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %169 = multiply(%167, %168) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %170 = multiply(%169, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %171 = reshape(%170, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%171, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1566 = %1565(%1564, meta[relay.Constant][278] /* ty=Tensor[(2048), float16] span=Identity_39:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.23/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1567 = fn (%p070: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p149: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p070, %p149, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1568 = %1567(%1566, meta[relay.Constant][279] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.23/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1569 = fn (%p069: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p148: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p228: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p314: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %158 = reshape(%p069, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %159 = add(%p148, %158) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %160 = transpose(%159, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %161 = multiply(%p228, %160) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%161, %p314) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1570 = %1569(%1568, meta[relay.Constant][280] /* ty=Tensor[(512), float16] span=Identity_38:0:0 */, meta[relay.Constant][281] /* ty=Tensor[(512, 1, 1), float16] span=Identity_43:0:0 */, %1548) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1571 = fn (%p068: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p068, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1572 = %1571(%1570) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1573 = fn (%p067: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p147: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p227: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %157 = nn.conv2d(%p067, %p147, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%157, %p227) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1574 = %1573(%1572, meta[relay.Constant][282] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][283] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1575 = fn (%p066: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %156 = transpose(%p066, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%156, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1576 = %1575(%1574) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1577 = fn (%p0414: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0414, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1578 = %1577(%1576) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1579 = fn (%p065: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p146: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p065, %p146) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1580 = %1579(%1576, %1578) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1581 = fn (%p064: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %155 = power(%p064, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%155, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1582 = %1581(%1580) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1583 = fn (%p063: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p145: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p226: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p313: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %149 = add(%p063, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %150 = rsqrt(%149) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %151 = multiply(%p145, %150) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %152 = multiply(%151, %p226) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %153 = add(%152, %p313) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %154 = reshape(%153, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%154, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1584 = %1583(%1582, %1580, meta[relay.Constant][284] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][285] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1585 = fn (%p062: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p144: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p062, %p144, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1586 = %1585(%1584, meta[relay.Constant][286] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.24/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1587 = fn (%p061: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p143: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p225: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %139 = reshape(%p061, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %140 = add(%p143, %139) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %141 = divide(%140, %p225) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %142 = cast(%141, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %143 = erf(%142) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %144 = cast(%140, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %145 = add(%143, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %146 = multiply(%144, %145) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %147 = multiply(%146, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %148 = reshape(%147, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%148, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1588 = %1587(%1586, meta[relay.Constant][287] /* ty=Tensor[(2048), float16] span=Identity_33:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.24/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1589 = fn (%p060: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p142: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p060, %p142, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1590 = %1589(%1588, meta[relay.Constant][288] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.24/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1591 = fn (%p059: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p141: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p224: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p312: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %135 = reshape(%p059, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %136 = add(%p141, %135) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %137 = transpose(%136, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %138 = multiply(%p224, %137) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%138, %p312) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1592 = %1591(%1590, meta[relay.Constant][289] /* ty=Tensor[(512), float16] span=Identity_32:0:0 */, meta[relay.Constant][290] /* ty=Tensor[(512, 1, 1), float16] span=Identity_37:0:0 */, %1570) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1593 = fn (%p058: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p058, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1594 = %1593(%1592) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1595 = fn (%p057: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p140: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p223: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %134 = nn.conv2d(%p057, %p140, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%134, %p223) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1596 = %1595(%1594, meta[relay.Constant][291] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][292] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1597 = fn (%p056: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %133 = transpose(%p056, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%133, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1598 = %1597(%1596) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1599 = fn (%p0415: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0415, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1600 = %1599(%1598) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1601 = fn (%p055: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p139: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p055, %p139) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1602 = %1601(%1598, %1600) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1603 = fn (%p054: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %132 = power(%p054, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%132, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1604 = %1603(%1602) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1605 = fn (%p053: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p138: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p222: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p311: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %126 = add(%p053, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %127 = rsqrt(%126) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %128 = multiply(%p138, %127) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %129 = multiply(%128, %p222) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %130 = add(%129, %p311) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %131 = reshape(%130, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%131, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1606 = %1605(%1604, %1602, meta[relay.Constant][293] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][294] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1607 = fn (%p052: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p137: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p052, %p137, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1608 = %1607(%1606, meta[relay.Constant][295] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.25/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1609 = fn (%p051: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p136: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p221: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %116 = reshape(%p051, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %117 = add(%p136, %116) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %118 = divide(%117, %p221) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %119 = cast(%118, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %120 = erf(%119) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %121 = cast(%117, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %122 = add(%120, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %123 = multiply(%121, %122) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %124 = multiply(%123, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %125 = reshape(%124, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%125, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1610 = %1609(%1608, meta[relay.Constant][296] /* ty=Tensor[(2048), float16] span=Identity_27:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.25/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1611 = fn (%p050: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p135: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p050, %p135, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1612 = %1611(%1610, meta[relay.Constant][297] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.25/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1613 = fn (%p049: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p134: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p220: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p310: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 512, 14, 14), float16] {
    %112 = reshape(%p049, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %113 = add(%p134, %112) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %114 = transpose(%113, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %115 = multiply(%p220, %114) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    add(%115, %p310) /* ty=Tensor[(32, 512, 14, 14), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 512, 14, 14), float16] */;
  %1614 = %1613(%1612, meta[relay.Constant][298] /* ty=Tensor[(512), float16] span=Identity_26:0:0 */, meta[relay.Constant][299] /* ty=Tensor[(512, 1, 1), float16] span=Identity_31:0:0 */, %1592) /* ty=Tensor[(32, 512, 14, 14), float16] */;
  %1615 = fn (%p048: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    layout_transform(%p048, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1616 = %1615(%1614) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1617 = fn (%p047: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p133: Tensor[(512, 7, 7, 1), float16] /* ty=Tensor[(512, 7, 7, 1), float16] */, %p219: Tensor[(1, 1, 1, 512), float16] /* ty=Tensor[(1, 1, 1, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %111 = nn.conv2d(%p047, %p133, padding=[3, 3, 3, 3], groups=512, channels=512, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */;
    add(%111, %p219) /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(512, 7, 7, 1), float16], Tensor[(1, 1, 1, 512), float16]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1618 = %1617(%1616, meta[relay.Constant][300] /* ty=Tensor[(512, 7, 7, 1), float16] */, meta[relay.Constant][301] /* ty=Tensor[(1, 1, 1, 512), float16] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1619 = fn (%p046: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %110 = transpose(%p046, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%110, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1620 = %1619(%1618) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1621 = fn (%p0416: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0416, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1622 = %1621(%1620) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1623 = fn (%p045: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p132: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p045, %p132) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1624 = %1623(%1620, %1622) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1625 = fn (%p044: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %109 = power(%p044, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%109, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1626 = %1625(%1624) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1627 = fn (%p043: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p131: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p218: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p39: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    %103 = add(%p043, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %104 = rsqrt(%103) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %105 = multiply(%p131, %104) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %106 = multiply(%105, %p218) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %107 = add(%106, %p39) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %108 = reshape(%107, newshape=[-1, 512]) /* ty=Tensor[(6272, 512), float32] */;
    cast(%108, dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(6272, 512), float16] */;
  %1628 = %1627(%1626, %1624, meta[relay.Constant][302] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][303] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(6272, 512), float16] */;
  %1629 = fn (%p042: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p130: Tensor[(2048, 512), float16] /* ty=Tensor[(2048, 512), float16] */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    nn.dense(%p042, %p130, units=None, out_dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(2048, 512), float16]) -> Tensor[(6272, 2048), float16] */;
  %1630 = %1629(%1628, meta[relay.Constant][304] /* ty=Tensor[(2048, 512), float16] span=/features/features.5/features.5.26/block/block.3/MatMul:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1631 = fn (%p041: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p129: Tensor[(2048), float16] /* ty=Tensor[(2048), float16] */, %p217: float16 /* ty=float16 */, Primitive=1) -> Tensor[(6272, 2048), float16] {
    %93 = reshape(%p041, newshape=[32, 14, 14, 2048]) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %94 = add(%p129, %93) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %95 = divide(%94, %p217) /* ty=Tensor[(32, 14, 14, 2048), float16] */;
    %96 = cast(%95, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %97 = erf(%96) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %98 = cast(%94, dtype="float32") /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %99 = add(%97, 1f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %100 = multiply(%98, %99) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %101 = multiply(%100, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 2048), float32] */;
    %102 = reshape(%101, newshape=[-1, 2048]) /* ty=Tensor[(6272, 2048), float32] */;
    cast(%102, dtype="float16") /* ty=Tensor[(6272, 2048), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(2048), float16], float16) -> Tensor[(6272, 2048), float16] */;
  %1632 = %1631(%1630, meta[relay.Constant][305] /* ty=Tensor[(2048), float16] span=Identity_21:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.5/features.5.26/block/block.4/Constant:0:0 */) /* ty=Tensor[(6272, 2048), float16] */;
  %1633 = fn (%p040: Tensor[(6272, 2048), float16] /* ty=Tensor[(6272, 2048), float16] */, %p128: Tensor[(512, 2048), float16] /* ty=Tensor[(512, 2048), float16] */, Primitive=1) -> Tensor[(6272, 512), float16] {
    nn.dense(%p040, %p128, units=None, out_dtype="float16") /* ty=Tensor[(6272, 512), float16] */
  } /* ty=fn (Tensor[(6272, 2048), float16], Tensor[(512, 2048), float16]) -> Tensor[(6272, 512), float16] */;
  %1634 = %1633(%1632, meta[relay.Constant][306] /* ty=Tensor[(512, 2048), float16] span=/features/features.5/features.5.26/block/block.5/MatMul:0:0 */) /* ty=Tensor[(6272, 512), float16] */;
  %1635 = fn (%p039: Tensor[(6272, 512), float16] /* ty=Tensor[(6272, 512), float16] */, %p127: Tensor[(512), float16] /* ty=Tensor[(512), float16] */, %p216: Tensor[(512, 1, 1), float16] /* ty=Tensor[(512, 1, 1), float16] */, %p38: Tensor[(32, 512, 14, 14), float16] /* ty=Tensor[(32, 512, 14, 14), float16] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    %87 = reshape(%p039, newshape=[32, 14, 14, 512]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %88 = add(%p127, %87) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    %89 = transpose(%88, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %90 = multiply(%p216, %89) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %91 = add(%90, %p38) /* ty=Tensor[(32, 512, 14, 14), float16] */;
    %92 = transpose(%91, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 14, 14, 512), float16] */;
    cast(%92, dtype="float32") /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(6272, 512), float16], Tensor[(512), float16], Tensor[(512, 1, 1), float16], Tensor[(32, 512, 14, 14), float16]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1636 = %1635(%1634, meta[relay.Constant][307] /* ty=Tensor[(512), float16] span=Identity_20:0:0 */, meta[relay.Constant][308] /* ty=Tensor[(512, 1, 1), float16] span=Identity_25:0:0 */, %1614) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1637 = fn (%p0417: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    mean(%p0417, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1638 = %1637(%1636) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1639 = fn (%p038: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p126: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float32] {
    subtract(%p038, %p126) /* ty=Tensor[(32, 14, 14, 512), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32], Tensor[(32, 14, 14, 1), float32]) -> Tensor[(32, 14, 14, 512), float32] */;
  %1640 = %1639(%1636, %1638) /* ty=Tensor[(32, 14, 14, 512), float32] */;
  %1641 = fn (%p037: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 1), float32] {
    %86 = power(%p037, 2f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    mean(%86, axis=[3], keepdims=True) /* ty=Tensor[(32, 14, 14, 1), float32] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float32]) -> Tensor[(32, 14, 14, 1), float32] */;
  %1642 = %1641(%1640) /* ty=Tensor[(32, 14, 14, 1), float32] */;
  %1643 = fn (%p036: Tensor[(32, 14, 14, 1), float32] /* ty=Tensor[(32, 14, 14, 1), float32] */, %p125: Tensor[(32, 14, 14, 512), float32] /* ty=Tensor[(32, 14, 14, 512), float32] */, %p215: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, %p37: Tensor[(1, 1, 1, 512), float32] /* ty=Tensor[(1, 1, 1, 512), float32] */, Primitive=1) -> Tensor[(32, 14, 14, 512), float16] {
    %81 = add(%p036, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %82 = rsqrt(%81) /* ty=Tensor[(32, 14, 14, 1), float32] */;
    %83 = multiply(%p125, %82) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %84 = multiply(%83, %p215) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    %85 = add(%84, %p37) /* ty=Tensor[(32, 14, 14, 512), float32] */;
    cast(%85, dtype="float16") /* ty=Tensor[(32, 14, 14, 512), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 1), float32], Tensor[(32, 14, 14, 512), float32], Tensor[(1, 1, 1, 512), float32], Tensor[(1, 1, 1, 512), float32]) -> Tensor[(32, 14, 14, 512), float16] */;
  %1644 = %1643(%1642, %1640, meta[relay.Constant][309] /* ty=Tensor[(1, 1, 1, 512), float32] */, meta[relay.Constant][310] /* ty=Tensor[(1, 1, 1, 512), float32] */) /* ty=Tensor[(32, 14, 14, 512), float16] */;
  %1645 = fn (%p035: Tensor[(32, 14, 14, 512), float16] /* ty=Tensor[(32, 14, 14, 512), float16] */, %p124: Tensor[(1024, 2, 2, 512), float16] /* ty=Tensor[(1024, 2, 2, 512), float16] */, %p214: Tensor[(1, 1, 1, 1024), float16] /* ty=Tensor[(1, 1, 1, 1024), float16] */, Primitive=1) -> Tensor[(32, 7, 7, 1024), float16] {
    %80 = nn.conv2d(%p035, %p124, strides=[2, 2], padding=[0, 0, 0, 0], channels=1024, kernel_size=[2, 2], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 7, 7, 1024), float16] */;
    add(%80, %p214) /* ty=Tensor[(32, 7, 7, 1024), float16] */
  } /* ty=fn (Tensor[(32, 14, 14, 512), float16], Tensor[(1024, 2, 2, 512), float16], Tensor[(1, 1, 1, 1024), float16]) -> Tensor[(32, 7, 7, 1024), float16] */;
  %1646 = %1645(%1644, meta[relay.Constant][311] /* ty=Tensor[(1024, 2, 2, 512), float16] */, meta[relay.Constant][312] /* ty=Tensor[(1, 1, 1, 1024), float16] */) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
  %1647 = fn (%p034: Tensor[(32, 7, 7, 1024), float16] /* ty=Tensor[(32, 7, 7, 1024), float16] */, %p123: Tensor[(1024, 7, 7, 1), float16] /* ty=Tensor[(1024, 7, 7, 1), float16] */, %p213: Tensor[(1, 1, 1, 1024), float16] /* ty=Tensor[(1, 1, 1, 1024), float16] */, Primitive=1) -> Tensor[(32, 7, 7, 1024), float16] {
    %79 = nn.conv2d(%p034, %p123, padding=[3, 3, 3, 3], groups=1024, channels=1024, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 7, 7, 1024), float16] */;
    add(%79, %p213) /* ty=Tensor[(32, 7, 7, 1024), float16] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float16], Tensor[(1024, 7, 7, 1), float16], Tensor[(1, 1, 1, 1024), float16]) -> Tensor[(32, 7, 7, 1024), float16] */;
  %1648 = %1647(%1646, meta[relay.Constant][313] /* ty=Tensor[(1024, 7, 7, 1), float16] */, meta[relay.Constant][314] /* ty=Tensor[(1, 1, 1, 1024), float16] */) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
  %1649 = fn (%p033: Tensor[(32, 7, 7, 1024), float16] /* ty=Tensor[(32, 7, 7, 1024), float16] */, Primitive=1) -> Tensor[(32, 7, 7, 1024), float32] {
    %78 = transpose(%p033, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
    cast(%78, dtype="float32") /* ty=Tensor[(32, 7, 7, 1024), float32] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float16]) -> Tensor[(32, 7, 7, 1024), float32] */;
  %1650 = %1649(%1648) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
  %1651 = fn (%p0418: Tensor[(32, 7, 7, 1024), float32] /* ty=Tensor[(32, 7, 7, 1024), float32] */, Primitive=1) -> Tensor[(32, 7, 7, 1), float32] {
    mean(%p0418, axis=[3], keepdims=True) /* ty=Tensor[(32, 7, 7, 1), float32] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float32]) -> Tensor[(32, 7, 7, 1), float32] */;
  %1652 = %1651(%1650) /* ty=Tensor[(32, 7, 7, 1), float32] */;
  %1653 = fn (%p032: Tensor[(32, 7, 7, 1024), float32] /* ty=Tensor[(32, 7, 7, 1024), float32] */, %p122: Tensor[(32, 7, 7, 1), float32] /* ty=Tensor[(32, 7, 7, 1), float32] */, Primitive=1) -> Tensor[(32, 7, 7, 1024), float32] {
    subtract(%p032, %p122) /* ty=Tensor[(32, 7, 7, 1024), float32] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float32], Tensor[(32, 7, 7, 1), float32]) -> Tensor[(32, 7, 7, 1024), float32] */;
  %1654 = %1653(%1650, %1652) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
  %1655 = fn (%p031: Tensor[(32, 7, 7, 1024), float32] /* ty=Tensor[(32, 7, 7, 1024), float32] */, Primitive=1) -> Tensor[(32, 7, 7, 1), float32] {
    %77 = power(%p031, 2f /* ty=float32 */) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
    mean(%77, axis=[3], keepdims=True) /* ty=Tensor[(32, 7, 7, 1), float32] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float32]) -> Tensor[(32, 7, 7, 1), float32] */;
  %1656 = %1655(%1654) /* ty=Tensor[(32, 7, 7, 1), float32] */;
  %1657 = fn (%p030: Tensor[(32, 7, 7, 1), float32] /* ty=Tensor[(32, 7, 7, 1), float32] */, %p121: Tensor[(32, 7, 7, 1024), float32] /* ty=Tensor[(32, 7, 7, 1024), float32] */, %p212: Tensor[(1, 1, 1, 1024), float32] /* ty=Tensor[(1, 1, 1, 1024), float32] */, %p36: Tensor[(1, 1, 1, 1024), float32] /* ty=Tensor[(1, 1, 1, 1024), float32] */, Primitive=1) -> Tensor[(1568, 1024), float16] {
    %71 = add(%p030, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 7, 7, 1), float32] */;
    %72 = rsqrt(%71) /* ty=Tensor[(32, 7, 7, 1), float32] */;
    %73 = multiply(%p121, %72) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
    %74 = multiply(%73, %p212) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
    %75 = add(%74, %p36) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
    %76 = reshape(%75, newshape=[-1, 1024]) /* ty=Tensor[(1568, 1024), float32] */;
    cast(%76, dtype="float16") /* ty=Tensor[(1568, 1024), float16] */
  } /* ty=fn (Tensor[(32, 7, 7, 1), float32], Tensor[(32, 7, 7, 1024), float32], Tensor[(1, 1, 1, 1024), float32], Tensor[(1, 1, 1, 1024), float32]) -> Tensor[(1568, 1024), float16] */;
  %1658 = %1657(%1656, %1654, meta[relay.Constant][315] /* ty=Tensor[(1, 1, 1, 1024), float32] */, meta[relay.Constant][316] /* ty=Tensor[(1, 1, 1, 1024), float32] */) /* ty=Tensor[(1568, 1024), float16] */;
  %1659 = fn (%p029: Tensor[(1568, 1024), float16] /* ty=Tensor[(1568, 1024), float16] */, %p120: Tensor[(4096, 1024), float16] /* ty=Tensor[(4096, 1024), float16] */, Primitive=1) -> Tensor[(1568, 4096), float16] {
    nn.dense(%p029, %p120, units=None, out_dtype="float16") /* ty=Tensor[(1568, 4096), float16] */
  } /* ty=fn (Tensor[(1568, 1024), float16], Tensor[(4096, 1024), float16]) -> Tensor[(1568, 4096), float16] */;
  %1660 = %1659(%1658, meta[relay.Constant][317] /* ty=Tensor[(4096, 1024), float16] span=/features/features.7/features.7.0/block/block.3/MatMul:0:0 */) /* ty=Tensor[(1568, 4096), float16] */;
  %1661 = fn (%p028: Tensor[(1568, 4096), float16] /* ty=Tensor[(1568, 4096), float16] */, %p119: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p211: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1568, 4096), float16] {
    %61 = reshape(%p028, newshape=[32, 7, 7, 4096]) /* ty=Tensor[(32, 7, 7, 4096), float16] */;
    %62 = add(%p119, %61) /* ty=Tensor[(32, 7, 7, 4096), float16] */;
    %63 = divide(%62, %p211) /* ty=Tensor[(32, 7, 7, 4096), float16] */;
    %64 = cast(%63, dtype="float32") /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %65 = erf(%64) /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %66 = cast(%62, dtype="float32") /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %67 = add(%65, 1f /* ty=float32 */) /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %68 = multiply(%66, %67) /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %69 = multiply(%68, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %70 = reshape(%69, newshape=[-1, 4096]) /* ty=Tensor[(1568, 4096), float32] */;
    cast(%70, dtype="float16") /* ty=Tensor[(1568, 4096), float16] */
  } /* ty=fn (Tensor[(1568, 4096), float16], Tensor[(4096), float16], float16) -> Tensor[(1568, 4096), float16] */;
  %1662 = %1661(%1660, meta[relay.Constant][318] /* ty=Tensor[(4096), float16] span=Identity_3.features.7.0.block.3.bias:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.7/features.7.0/block/block.4/Constant:0:0 */) /* ty=Tensor[(1568, 4096), float16] */;
  %1663 = fn (%p027: Tensor[(1568, 4096), float16] /* ty=Tensor[(1568, 4096), float16] */, %p118: Tensor[(1024, 4096), float16] /* ty=Tensor[(1024, 4096), float16] */, Primitive=1) -> Tensor[(1568, 1024), float16] {
    nn.dense(%p027, %p118, units=None, out_dtype="float16") /* ty=Tensor[(1568, 1024), float16] */
  } /* ty=fn (Tensor[(1568, 4096), float16], Tensor[(1024, 4096), float16]) -> Tensor[(1568, 1024), float16] */;
  %1664 = %1663(%1662, meta[relay.Constant][319] /* ty=Tensor[(1024, 4096), float16] span=/features/features.7/features.7.0/block/block.5/MatMul:0:0 */) /* ty=Tensor[(1568, 1024), float16] */;
  %1665 = fn (%p026: Tensor[(1568, 1024), float16] /* ty=Tensor[(1568, 1024), float16] */, %p117: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p210: Tensor[(1024, 1, 1), float16] /* ty=Tensor[(1024, 1, 1), float16] */, %p35: Tensor[(32, 7, 7, 1024), float16] /* ty=Tensor[(32, 7, 7, 1024), float16] */, Primitive=1) -> Tensor[(32, 1024, 7, 7), float16] {
    %56 = reshape(%p026, newshape=[32, 7, 7, 1024]) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
    %57 = add(%p117, %56) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
    %58 = transpose(%57, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 1024, 7, 7), float16] */;
    %59 = multiply(%p210, %58) /* ty=Tensor[(32, 1024, 7, 7), float16] */;
    %60 = layout_transform(%p35, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(32, 1024, 7, 7), float16] */;
    add(%59, %60) /* ty=Tensor[(32, 1024, 7, 7), float16] */
  } /* ty=fn (Tensor[(1568, 1024), float16], Tensor[(1024), float16], Tensor[(1024, 1, 1), float16], Tensor[(32, 7, 7, 1024), float16]) -> Tensor[(32, 1024, 7, 7), float16] */;
  %1666 = %1665(%1664, meta[relay.Constant][320] /* ty=Tensor[(1024), float16] span=Identity_14:0:0 */, meta[relay.Constant][321] /* ty=Tensor[(1024, 1, 1), float16] span=Identity_7.features.7.0.layer_scale:0:0 */, %1646) /* ty=Tensor[(32, 1024, 7, 7), float16] */;
  %1667 = fn (%p025: Tensor[(32, 1024, 7, 7), float16] /* ty=Tensor[(32, 1024, 7, 7), float16] */, Primitive=1) -> Tensor[(32, 7, 7, 1024), float16] {
    layout_transform(%p025, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 7, 7, 1024), float16] */
  } /* ty=fn (Tensor[(32, 1024, 7, 7), float16]) -> Tensor[(32, 7, 7, 1024), float16] */;
  %1668 = %1667(%1666) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
  %1669 = fn (%p024: Tensor[(32, 7, 7, 1024), float16] /* ty=Tensor[(32, 7, 7, 1024), float16] */, %p116: Tensor[(1024, 7, 7, 1), float16] /* ty=Tensor[(1024, 7, 7, 1), float16] */, %p29: Tensor[(1, 1, 1, 1024), float16] /* ty=Tensor[(1, 1, 1, 1024), float16] */, Primitive=1) -> Tensor[(32, 7, 7, 1024), float16] {
    %55 = nn.conv2d(%p024, %p116, padding=[3, 3, 3, 3], groups=1024, channels=1024, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 7, 7, 1024), float16] */;
    add(%55, %p29) /* ty=Tensor[(32, 7, 7, 1024), float16] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float16], Tensor[(1024, 7, 7, 1), float16], Tensor[(1, 1, 1, 1024), float16]) -> Tensor[(32, 7, 7, 1024), float16] */;
  %1670 = %1669(%1668, meta[relay.Constant][322] /* ty=Tensor[(1024, 7, 7, 1), float16] */, meta[relay.Constant][323] /* ty=Tensor[(1, 1, 1, 1024), float16] */) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
  %1671 = fn (%p023: Tensor[(32, 7, 7, 1024), float16] /* ty=Tensor[(32, 7, 7, 1024), float16] */, Primitive=1) -> Tensor[(32, 7, 7, 1024), float32] {
    %54 = transpose(%p023, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
    cast(%54, dtype="float32") /* ty=Tensor[(32, 7, 7, 1024), float32] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float16]) -> Tensor[(32, 7, 7, 1024), float32] */;
  %1672 = %1671(%1670) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
  %1673 = fn (%p0419: Tensor[(32, 7, 7, 1024), float32] /* ty=Tensor[(32, 7, 7, 1024), float32] */, Primitive=1) -> Tensor[(32, 7, 7, 1), float32] {
    mean(%p0419, axis=[3], keepdims=True) /* ty=Tensor[(32, 7, 7, 1), float32] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float32]) -> Tensor[(32, 7, 7, 1), float32] */;
  %1674 = %1673(%1672) /* ty=Tensor[(32, 7, 7, 1), float32] */;
  %1675 = fn (%p022: Tensor[(32, 7, 7, 1024), float32] /* ty=Tensor[(32, 7, 7, 1024), float32] */, %p115: Tensor[(32, 7, 7, 1), float32] /* ty=Tensor[(32, 7, 7, 1), float32] */, Primitive=1) -> Tensor[(32, 7, 7, 1024), float32] {
    subtract(%p022, %p115) /* ty=Tensor[(32, 7, 7, 1024), float32] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float32], Tensor[(32, 7, 7, 1), float32]) -> Tensor[(32, 7, 7, 1024), float32] */;
  %1676 = %1675(%1672, %1674) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
  %1677 = fn (%p021: Tensor[(32, 7, 7, 1024), float32] /* ty=Tensor[(32, 7, 7, 1024), float32] */, Primitive=1) -> Tensor[(32, 7, 7, 1), float32] {
    %53 = power(%p021, 2f /* ty=float32 */) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
    mean(%53, axis=[3], keepdims=True) /* ty=Tensor[(32, 7, 7, 1), float32] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float32]) -> Tensor[(32, 7, 7, 1), float32] */;
  %1678 = %1677(%1676) /* ty=Tensor[(32, 7, 7, 1), float32] */;
  %1679 = fn (%p020: Tensor[(32, 7, 7, 1), float32] /* ty=Tensor[(32, 7, 7, 1), float32] */, %p114: Tensor[(32, 7, 7, 1024), float32] /* ty=Tensor[(32, 7, 7, 1024), float32] */, %p28: Tensor[(1, 1, 1, 1024), float32] /* ty=Tensor[(1, 1, 1, 1024), float32] */, %p34: Tensor[(1, 1, 1, 1024), float32] /* ty=Tensor[(1, 1, 1, 1024), float32] */, Primitive=1) -> Tensor[(1568, 1024), float16] {
    %47 = add(%p020, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 7, 7, 1), float32] */;
    %48 = rsqrt(%47) /* ty=Tensor[(32, 7, 7, 1), float32] */;
    %49 = multiply(%p114, %48) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
    %50 = multiply(%49, %p28) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
    %51 = add(%50, %p34) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
    %52 = reshape(%51, newshape=[-1, 1024]) /* ty=Tensor[(1568, 1024), float32] */;
    cast(%52, dtype="float16") /* ty=Tensor[(1568, 1024), float16] */
  } /* ty=fn (Tensor[(32, 7, 7, 1), float32], Tensor[(32, 7, 7, 1024), float32], Tensor[(1, 1, 1, 1024), float32], Tensor[(1, 1, 1, 1024), float32]) -> Tensor[(1568, 1024), float16] */;
  %1680 = %1679(%1678, %1676, meta[relay.Constant][324] /* ty=Tensor[(1, 1, 1, 1024), float32] */, meta[relay.Constant][325] /* ty=Tensor[(1, 1, 1, 1024), float32] */) /* ty=Tensor[(1568, 1024), float16] */;
  %1681 = fn (%p019: Tensor[(1568, 1024), float16] /* ty=Tensor[(1568, 1024), float16] */, %p113: Tensor[(4096, 1024), float16] /* ty=Tensor[(4096, 1024), float16] */, Primitive=1) -> Tensor[(1568, 4096), float16] {
    nn.dense(%p019, %p113, units=None, out_dtype="float16") /* ty=Tensor[(1568, 4096), float16] */
  } /* ty=fn (Tensor[(1568, 1024), float16], Tensor[(4096, 1024), float16]) -> Tensor[(1568, 4096), float16] */;
  %1682 = %1681(%1680, meta[relay.Constant][326] /* ty=Tensor[(4096, 1024), float16] span=/features/features.7/features.7.1/block/block.3/MatMul:0:0 */) /* ty=Tensor[(1568, 4096), float16] */;
  %1683 = fn (%p018: Tensor[(1568, 4096), float16] /* ty=Tensor[(1568, 4096), float16] */, %p112: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p27: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1568, 4096), float16] {
    %37 = reshape(%p018, newshape=[32, 7, 7, 4096]) /* ty=Tensor[(32, 7, 7, 4096), float16] */;
    %38 = add(%p112, %37) /* ty=Tensor[(32, 7, 7, 4096), float16] */;
    %39 = divide(%38, %p27) /* ty=Tensor[(32, 7, 7, 4096), float16] */;
    %40 = cast(%39, dtype="float32") /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %41 = erf(%40) /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %42 = cast(%38, dtype="float32") /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %43 = add(%41, 1f /* ty=float32 */) /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %44 = multiply(%42, %43) /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %45 = multiply(%44, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %46 = reshape(%45, newshape=[-1, 4096]) /* ty=Tensor[(1568, 4096), float32] */;
    cast(%46, dtype="float16") /* ty=Tensor[(1568, 4096), float16] */
  } /* ty=fn (Tensor[(1568, 4096), float16], Tensor[(4096), float16], float16) -> Tensor[(1568, 4096), float16] */;
  %1684 = %1683(%1682, meta[relay.Constant][327] /* ty=Tensor[(4096), float16] span=Identity_9:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.7/features.7.1/block/block.4/Constant:0:0 */) /* ty=Tensor[(1568, 4096), float16] */;
  %1685 = fn (%p017: Tensor[(1568, 4096), float16] /* ty=Tensor[(1568, 4096), float16] */, %p111: Tensor[(1024, 4096), float16] /* ty=Tensor[(1024, 4096), float16] */, Primitive=1) -> Tensor[(1568, 1024), float16] {
    nn.dense(%p017, %p111, units=None, out_dtype="float16") /* ty=Tensor[(1568, 1024), float16] */
  } /* ty=fn (Tensor[(1568, 4096), float16], Tensor[(1024, 4096), float16]) -> Tensor[(1568, 1024), float16] */;
  %1686 = %1685(%1684, meta[relay.Constant][328] /* ty=Tensor[(1024, 4096), float16] span=/features/features.7/features.7.1/block/block.5/MatMul:0:0 */) /* ty=Tensor[(1568, 1024), float16] */;
  %1687 = fn (%p016: Tensor[(1568, 1024), float16] /* ty=Tensor[(1568, 1024), float16] */, %p110: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p26: Tensor[(1024, 1, 1), float16] /* ty=Tensor[(1024, 1, 1), float16] */, %p33: Tensor[(32, 1024, 7, 7), float16] /* ty=Tensor[(32, 1024, 7, 7), float16] */, Primitive=1) -> Tensor[(32, 1024, 7, 7), float16] {
    %33 = reshape(%p016, newshape=[32, 7, 7, 1024]) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
    %34 = add(%p110, %33) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
    %35 = transpose(%34, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 1024, 7, 7), float16] */;
    %36 = multiply(%p26, %35) /* ty=Tensor[(32, 1024, 7, 7), float16] */;
    add(%36, %p33) /* ty=Tensor[(32, 1024, 7, 7), float16] */
  } /* ty=fn (Tensor[(1568, 1024), float16], Tensor[(1024), float16], Tensor[(1024, 1, 1), float16], Tensor[(32, 1024, 7, 7), float16]) -> Tensor[(32, 1024, 7, 7), float16] */;
  %1688 = %1687(%1686, meta[relay.Constant][329] /* ty=Tensor[(1024), float16] span=Identity_8:0:0 */, meta[relay.Constant][330] /* ty=Tensor[(1024, 1, 1), float16] span=Identity_13:0:0 */, %1666) /* ty=Tensor[(32, 1024, 7, 7), float16] */;
  %1689 = fn (%p015: Tensor[(32, 1024, 7, 7), float16] /* ty=Tensor[(32, 1024, 7, 7), float16] */, Primitive=1) -> Tensor[(32, 7, 7, 1024), float16] {
    layout_transform(%p015, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(32, 7, 7, 1024), float16] */
  } /* ty=fn (Tensor[(32, 1024, 7, 7), float16]) -> Tensor[(32, 7, 7, 1024), float16] */;
  %1690 = %1689(%1688) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
  %1691 = fn (%p014: Tensor[(32, 7, 7, 1024), float16] /* ty=Tensor[(32, 7, 7, 1024), float16] */, %p19: Tensor[(1024, 7, 7, 1), float16] /* ty=Tensor[(1024, 7, 7, 1), float16] */, %p25: Tensor[(1, 1, 1, 1024), float16] /* ty=Tensor[(1, 1, 1, 1024), float16] */, Primitive=1) -> Tensor[(32, 7, 7, 1024), float16] {
    %32 = nn.conv2d(%p014, %p19, padding=[3, 3, 3, 3], groups=1024, channels=1024, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(32, 7, 7, 1024), float16] */;
    add(%32, %p25) /* ty=Tensor[(32, 7, 7, 1024), float16] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float16], Tensor[(1024, 7, 7, 1), float16], Tensor[(1, 1, 1, 1024), float16]) -> Tensor[(32, 7, 7, 1024), float16] */;
  %1692 = %1691(%1690, meta[relay.Constant][331] /* ty=Tensor[(1024, 7, 7, 1), float16] */, meta[relay.Constant][332] /* ty=Tensor[(1, 1, 1, 1024), float16] */) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
  %1693 = fn (%p013: Tensor[(32, 7, 7, 1024), float16] /* ty=Tensor[(32, 7, 7, 1024), float16] */, Primitive=1) -> Tensor[(32, 7, 7, 1024), float32] {
    %31 = transpose(%p013, axes=[0, 1, 2, 3]) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
    cast(%31, dtype="float32") /* ty=Tensor[(32, 7, 7, 1024), float32] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float16]) -> Tensor[(32, 7, 7, 1024), float32] */;
  %1694 = %1693(%1692) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
  %1695 = fn (%p0420: Tensor[(32, 7, 7, 1024), float32] /* ty=Tensor[(32, 7, 7, 1024), float32] */, Primitive=1) -> Tensor[(32, 7, 7, 1), float32] {
    mean(%p0420, axis=[3], keepdims=True) /* ty=Tensor[(32, 7, 7, 1), float32] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float32]) -> Tensor[(32, 7, 7, 1), float32] */;
  %1696 = %1695(%1694) /* ty=Tensor[(32, 7, 7, 1), float32] */;
  %1697 = fn (%p012: Tensor[(32, 7, 7, 1024), float32] /* ty=Tensor[(32, 7, 7, 1024), float32] */, %p18: Tensor[(32, 7, 7, 1), float32] /* ty=Tensor[(32, 7, 7, 1), float32] */, Primitive=1) -> Tensor[(32, 7, 7, 1024), float32] {
    subtract(%p012, %p18) /* ty=Tensor[(32, 7, 7, 1024), float32] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float32], Tensor[(32, 7, 7, 1), float32]) -> Tensor[(32, 7, 7, 1024), float32] */;
  %1698 = %1697(%1694, %1696) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
  %1699 = fn (%p011: Tensor[(32, 7, 7, 1024), float32] /* ty=Tensor[(32, 7, 7, 1024), float32] */, Primitive=1) -> Tensor[(32, 7, 7, 1), float32] {
    %30 = power(%p011, 2f /* ty=float32 */) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
    mean(%30, axis=[3], keepdims=True) /* ty=Tensor[(32, 7, 7, 1), float32] */
  } /* ty=fn (Tensor[(32, 7, 7, 1024), float32]) -> Tensor[(32, 7, 7, 1), float32] */;
  %1700 = %1699(%1698) /* ty=Tensor[(32, 7, 7, 1), float32] */;
  %1701 = fn (%p010: Tensor[(32, 7, 7, 1), float32] /* ty=Tensor[(32, 7, 7, 1), float32] */, %p17: Tensor[(32, 7, 7, 1024), float32] /* ty=Tensor[(32, 7, 7, 1024), float32] */, %p24: Tensor[(1, 1, 1, 1024), float32] /* ty=Tensor[(1, 1, 1, 1024), float32] */, %p32: Tensor[(1, 1, 1, 1024), float32] /* ty=Tensor[(1, 1, 1, 1024), float32] */, Primitive=1) -> Tensor[(1568, 1024), float16] {
    %24 = add(%p010, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 7, 7, 1), float32] */;
    %25 = rsqrt(%24) /* ty=Tensor[(32, 7, 7, 1), float32] */;
    %26 = multiply(%p17, %25) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
    %27 = multiply(%26, %p24) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
    %28 = add(%27, %p32) /* ty=Tensor[(32, 7, 7, 1024), float32] */;
    %29 = reshape(%28, newshape=[-1, 1024]) /* ty=Tensor[(1568, 1024), float32] */;
    cast(%29, dtype="float16") /* ty=Tensor[(1568, 1024), float16] */
  } /* ty=fn (Tensor[(32, 7, 7, 1), float32], Tensor[(32, 7, 7, 1024), float32], Tensor[(1, 1, 1, 1024), float32], Tensor[(1, 1, 1, 1024), float32]) -> Tensor[(1568, 1024), float16] */;
  %1702 = %1701(%1700, %1698, meta[relay.Constant][333] /* ty=Tensor[(1, 1, 1, 1024), float32] */, meta[relay.Constant][334] /* ty=Tensor[(1, 1, 1, 1024), float32] */) /* ty=Tensor[(1568, 1024), float16] */;
  %1703 = fn (%p09: Tensor[(1568, 1024), float16] /* ty=Tensor[(1568, 1024), float16] */, %p16: Tensor[(4096, 1024), float16] /* ty=Tensor[(4096, 1024), float16] */, Primitive=1) -> Tensor[(1568, 4096), float16] {
    nn.dense(%p09, %p16, units=None, out_dtype="float16") /* ty=Tensor[(1568, 4096), float16] */
  } /* ty=fn (Tensor[(1568, 1024), float16], Tensor[(4096, 1024), float16]) -> Tensor[(1568, 4096), float16] */;
  %1704 = %1703(%1702, meta[relay.Constant][335] /* ty=Tensor[(4096, 1024), float16] span=/features/features.7/features.7.2/block/block.3/MatMul:0:0 */) /* ty=Tensor[(1568, 4096), float16] */;
  %1705 = fn (%p08: Tensor[(1568, 4096), float16] /* ty=Tensor[(1568, 4096), float16] */, %p15: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p23: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1568, 4096), float16] {
    %14 = reshape(%p08, newshape=[32, 7, 7, 4096]) /* ty=Tensor[(32, 7, 7, 4096), float16] */;
    %15 = add(%p15, %14) /* ty=Tensor[(32, 7, 7, 4096), float16] */;
    %16 = divide(%15, %p23) /* ty=Tensor[(32, 7, 7, 4096), float16] */;
    %17 = cast(%16, dtype="float32") /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %18 = erf(%17) /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %19 = cast(%15, dtype="float32") /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %20 = add(%18, 1f /* ty=float32 */) /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %21 = multiply(%19, %20) /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %22 = multiply(%21, 0.5f /* ty=float32 */) /* ty=Tensor[(32, 7, 7, 4096), float32] */;
    %23 = reshape(%22, newshape=[-1, 4096]) /* ty=Tensor[(1568, 4096), float32] */;
    cast(%23, dtype="float16") /* ty=Tensor[(1568, 4096), float16] */
  } /* ty=fn (Tensor[(1568, 4096), float16], Tensor[(4096), float16], float16) -> Tensor[(1568, 4096), float16] */;
  %1706 = %1705(%1704, meta[relay.Constant][336] /* ty=Tensor[(4096), float16] span=Identity_3:0:0 */, 1.41406f16 /* ty=float16 span=/features/features.7/features.7.2/block/block.4/Constant:0:0 */) /* ty=Tensor[(1568, 4096), float16] */;
  %1707 = fn (%p07: Tensor[(1568, 4096), float16] /* ty=Tensor[(1568, 4096), float16] */, %p14: Tensor[(1024, 4096), float16] /* ty=Tensor[(1024, 4096), float16] */, Primitive=1) -> Tensor[(1568, 1024), float16] {
    nn.dense(%p07, %p14, units=None, out_dtype="float16") /* ty=Tensor[(1568, 1024), float16] */
  } /* ty=fn (Tensor[(1568, 4096), float16], Tensor[(1024, 4096), float16]) -> Tensor[(1568, 1024), float16] */;
  %1708 = %1707(%1706, meta[relay.Constant][337] /* ty=Tensor[(1024, 4096), float16] span=/features/features.7/features.7.2/block/block.5/MatMul:0:0 */) /* ty=Tensor[(1568, 1024), float16] */;
  %1709 = fn (%p06: Tensor[(1568, 1024), float16] /* ty=Tensor[(1568, 1024), float16] */, %p13: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p22: Tensor[(1024, 1, 1), float16] /* ty=Tensor[(1024, 1, 1), float16] */, %p31: Tensor[(32, 1024, 7, 7), float16] /* ty=Tensor[(32, 1024, 7, 7), float16] */, Primitive=1) -> Tensor[(32, 1024, 7, 7), float32] {
    %9 = reshape(%p06, newshape=[32, 7, 7, 1024]) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
    %10 = add(%p13, %9) /* ty=Tensor[(32, 7, 7, 1024), float16] */;
    %11 = transpose(%10, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 1024, 7, 7), float16] */;
    %12 = multiply(%p22, %11) /* ty=Tensor[(32, 1024, 7, 7), float16] */;
    %13 = add(%12, %p31) /* ty=Tensor[(32, 1024, 7, 7), float16] */;
    cast(%13, dtype="float32") /* ty=Tensor[(32, 1024, 7, 7), float32] */
  } /* ty=fn (Tensor[(1568, 1024), float16], Tensor[(1024), float16], Tensor[(1024, 1, 1), float16], Tensor[(32, 1024, 7, 7), float16]) -> Tensor[(32, 1024, 7, 7), float32] */;
  %1710 = %1709(%1708, meta[relay.Constant][338] /* ty=Tensor[(1024), float16] span=Identity_2:0:0 */, meta[relay.Constant][339] /* ty=Tensor[(1024, 1, 1), float16] span=Identity_7:0:0 */, %1688) /* ty=Tensor[(32, 1024, 7, 7), float32] */;
  %1711 = fn (%p05: Tensor[(32, 1024, 7, 7), float32] /* ty=Tensor[(32, 1024, 7, 7), float32] */, Primitive=1) -> Tensor[(32, 1024, 1, 1), float32] {
    nn.global_avg_pool2d(%p05) /* ty=Tensor[(32, 1024, 1, 1), float32] */
  } /* ty=fn (Tensor[(32, 1024, 7, 7), float32]) -> Tensor[(32, 1024, 1, 1), float32] */;
  %1712 = %1711(%1710) /* ty=Tensor[(32, 1024, 1, 1), float32] */;
  %1713 = fn (%p04: Tensor[(32, 1024, 1, 1), float32] /* ty=Tensor[(32, 1024, 1, 1), float32] */, Primitive=1) -> Tensor[(32, 1, 1, 1024), float32] {
    transpose(%p04, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 1, 1, 1024), float32] */
  } /* ty=fn (Tensor[(32, 1024, 1, 1), float32]) -> Tensor[(32, 1, 1, 1024), float32] */;
  %1714 = %1713(%1712) /* ty=Tensor[(32, 1, 1, 1024), float32] */;
  %1715 = fn (%p0421: Tensor[(32, 1, 1, 1024), float32] /* ty=Tensor[(32, 1, 1, 1024), float32] */, Primitive=1) -> Tensor[(32, 1, 1, 1), float32] {
    mean(%p0421, axis=[3], keepdims=True) /* ty=Tensor[(32, 1, 1, 1), float32] */
  } /* ty=fn (Tensor[(32, 1, 1, 1024), float32]) -> Tensor[(32, 1, 1, 1), float32] */;
  %1716 = %1715(%1714) /* ty=Tensor[(32, 1, 1, 1), float32] */;
  %1717 = fn (%p03: Tensor[(32, 1, 1, 1024), float32] /* ty=Tensor[(32, 1, 1, 1024), float32] */, %p12: Tensor[(32, 1, 1, 1), float32] /* ty=Tensor[(32, 1, 1, 1), float32] */, Primitive=1) -> Tensor[(32, 1, 1, 1024), float32] {
    subtract(%p03, %p12) /* ty=Tensor[(32, 1, 1, 1024), float32] */
  } /* ty=fn (Tensor[(32, 1, 1, 1024), float32], Tensor[(32, 1, 1, 1), float32]) -> Tensor[(32, 1, 1, 1024), float32] */;
  %1718 = %1717(%1714, %1716) /* ty=Tensor[(32, 1, 1, 1024), float32] */;
  %1719 = fn (%p02: Tensor[(32, 1, 1, 1024), float32] /* ty=Tensor[(32, 1, 1, 1024), float32] */, Primitive=1) -> Tensor[(32, 1, 1, 1), float32] {
    %8 = power(%p02, 2f /* ty=float32 */) /* ty=Tensor[(32, 1, 1, 1024), float32] */;
    mean(%8, axis=[3], keepdims=True) /* ty=Tensor[(32, 1, 1, 1), float32] */
  } /* ty=fn (Tensor[(32, 1, 1, 1024), float32]) -> Tensor[(32, 1, 1, 1), float32] */;
  %1720 = %1719(%1718) /* ty=Tensor[(32, 1, 1, 1), float32] */;
  %1721 = fn (%p01: Tensor[(32, 1, 1, 1), float32] /* ty=Tensor[(32, 1, 1, 1), float32] */, %p11: Tensor[(32, 1, 1, 1024), float32] /* ty=Tensor[(32, 1, 1, 1024), float32] */, %p21: Tensor[(1, 1, 1, 1024), float32] /* ty=Tensor[(1, 1, 1, 1024), float32] */, %p3: Tensor[(1, 1, 1, 1024), float32] /* ty=Tensor[(1, 1, 1, 1024), float32] */, Primitive=1) -> Tensor[(32, 1024), float16] {
    %1 = add(%p01, 1.01328e-06f /* ty=float32 */) /* ty=Tensor[(32, 1, 1, 1), float32] */;
    %2 = rsqrt(%1) /* ty=Tensor[(32, 1, 1, 1), float32] */;
    %3 = multiply(%p11, %2) /* ty=Tensor[(32, 1, 1, 1024), float32] */;
    %4 = multiply(%3, %p21) /* ty=Tensor[(32, 1, 1, 1024), float32] */;
    %5 = add(%4, %p3) /* ty=Tensor[(32, 1, 1, 1024), float32] */;
    %6 = transpose(%5, axes=[0, 3, 1, 2]) /* ty=Tensor[(32, 1024, 1, 1), float32] */;
    %7 = nn.batch_flatten(%6) /* ty=Tensor[(32, 1024), float32] */;
    cast(%7, dtype="float16") /* ty=Tensor[(32, 1024), float16] */
  } /* ty=fn (Tensor[(32, 1, 1, 1), float32], Tensor[(32, 1, 1, 1024), float32], Tensor[(1, 1, 1, 1024), float32], Tensor[(1, 1, 1, 1024), float32]) -> Tensor[(32, 1024), float16] */;
  %1722 = %1721(%1720, %1718, meta[relay.Constant][340] /* ty=Tensor[(1, 1, 1, 1024), float32] */, meta[relay.Constant][341] /* ty=Tensor[(1, 1, 1, 1024), float32] */) /* ty=Tensor[(32, 1024), float16] */;
  %1723 = fn (%p0: Tensor[(32, 1024), float16] /* ty=Tensor[(32, 1024), float16] */, %p1: Tensor[(1000, 1024), float16] /* ty=Tensor[(1000, 1024), float16] */, %p2: Tensor[(1, 1000), float16] /* ty=Tensor[(1, 1000), float16] */, Primitive=1) -> Tensor[(32, 1000), float16] {
    %0 = nn.dense(%p0, %p1, units=1000, out_dtype="float16") /* ty=Tensor[(32, 1000), float16] */;
    add(%0, %p2) /* ty=Tensor[(32, 1000), float16] */
  } /* ty=fn (Tensor[(32, 1024), float16], Tensor[(1000, 1024), float16], Tensor[(1, 1000), float16]) -> Tensor[(32, 1000), float16] */;
  %1723(%1722, meta[relay.Constant][342] /* ty=Tensor[(1000, 1024), float16] span=/classifier/classifier.2/Gemm.classifier.2.weight:0:0 */, meta[relay.Constant][343] /* ty=Tensor[(1, 1000), float16] */) /* ty=Tensor[(32, 1000), float16] */
}


