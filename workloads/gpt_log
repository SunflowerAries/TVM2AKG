type List[A] {
  Cons(A, List[A]),
  Nil,
}

type Option[A] {
  Some(A),
  None,
}

type Tree[A] {
  Rose(A, List[Tree[A]]),
}

type tensor_float16_t {
  tensor_nil_float16,
  tensor0_float16(float16),
  tensor1_float16(Tensor[(?), float16]),
  tensor2_float16(Tensor[(?, ?), float16]),
  tensor3_float16(Tensor[(?, ?, ?), float16]),
  tensor4_float16(Tensor[(?, ?, ?, ?), float16]),
  tensor5_float16(Tensor[(?, ?, ?, ?, ?), float16]),
  tensor6_float16(Tensor[(?, ?, ?, ?, ?, ?), float16]),
}

type tensor_float32_t {
  tensor_nil_float32,
  tensor0_float32(float32),
  tensor1_float32(Tensor[(?), float32]),
  tensor2_float32(Tensor[(?, ?), float32]),
  tensor3_float32(Tensor[(?, ?, ?), float32]),
  tensor4_float32(Tensor[(?, ?, ?, ?), float32]),
  tensor5_float32(Tensor[(?, ?, ?, ?, ?), float32]),
  tensor6_float32(Tensor[(?, ?, ?, ?, ?, ?), float32]),
}

type tensor_float64_t {
  tensor_nil_float64,
  tensor0_float64(float64),
  tensor1_float64(Tensor[(?), float64]),
  tensor2_float64(Tensor[(?, ?), float64]),
  tensor3_float64(Tensor[(?, ?, ?), float64]),
  tensor4_float64(Tensor[(?, ?, ?, ?), float64]),
  tensor5_float64(Tensor[(?, ?, ?, ?, ?), float64]),
  tensor6_float64(Tensor[(?, ?, ?, ?, ?, ?), float64]),
}

type tensor_int16_t {
  tensor_nil_int16,
  tensor0_int16(int16),
  tensor1_int16(Tensor[(?), int16]),
  tensor2_int16(Tensor[(?, ?), int16]),
  tensor3_int16(Tensor[(?, ?, ?), int16]),
  tensor4_int16(Tensor[(?, ?, ?, ?), int16]),
  tensor5_int16(Tensor[(?, ?, ?, ?, ?), int16]),
  tensor6_int16(Tensor[(?, ?, ?, ?, ?, ?), int16]),
}

type tensor_int32_t {
  tensor_nil_int32,
  tensor0_int32(int32),
  tensor1_int32(Tensor[(?), int32]),
  tensor2_int32(Tensor[(?, ?), int32]),
  tensor3_int32(Tensor[(?, ?, ?), int32]),
  tensor4_int32(Tensor[(?, ?, ?, ?), int32]),
  tensor5_int32(Tensor[(?, ?, ?, ?, ?), int32]),
  tensor6_int32(Tensor[(?, ?, ?, ?, ?, ?), int32]),
}

type tensor_int64_t {
  tensor_nil_int64,
  tensor0_int64(int64),
  tensor1_int64(Tensor[(?), int64]),
  tensor2_int64(Tensor[(?, ?), int64]),
  tensor3_int64(Tensor[(?, ?, ?), int64]),
  tensor4_int64(Tensor[(?, ?, ?, ?), int64]),
  tensor5_int64(Tensor[(?, ?, ?, ?, ?), int64]),
  tensor6_int64(Tensor[(?, ?, ?, ?, ?, ?), int64]),
}

type tensor_int8_t {
  tensor_nil_int8,
  tensor0_int8(int8),
  tensor1_int8(Tensor[(?), int8]),
  tensor2_int8(Tensor[(?, ?), int8]),
  tensor3_int8(Tensor[(?, ?, ?), int8]),
  tensor4_int8(Tensor[(?, ?, ?, ?), int8]),
  tensor5_int8(Tensor[(?, ?, ?, ?, ?), int8]),
  tensor6_int8(Tensor[(?, ?, ?, ?, ?, ?), int8]),
}

type tensor_uint16_t {
  tensor_nil_uint16,
  tensor0_uint16(uint16),
  tensor1_uint16(Tensor[(?), uint16]),
  tensor2_uint16(Tensor[(?, ?), uint16]),
  tensor3_uint16(Tensor[(?, ?, ?), uint16]),
  tensor4_uint16(Tensor[(?, ?, ?, ?), uint16]),
  tensor5_uint16(Tensor[(?, ?, ?, ?, ?), uint16]),
  tensor6_uint16(Tensor[(?, ?, ?, ?, ?, ?), uint16]),
}

type tensor_uint8_t {
  tensor_nil_uint8,
  tensor0_uint8(uint8),
  tensor1_uint8(Tensor[(?), uint8]),
  tensor2_uint8(Tensor[(?, ?), uint8]),
  tensor3_uint8(Tensor[(?, ?, ?), uint8]),
  tensor4_uint8(Tensor[(?, ?, ?, ?), uint8]),
  tensor5_uint8(Tensor[(?, ?, ?, ?, ?), uint8]),
  tensor6_uint8(Tensor[(?, ?, ?, ?, ?, ?), uint8]),
}

def @main(%input_ids: Tensor[(32, 256), int64] /* ty=Tensor[(32, 256), int64] span=aten::size_0.input_ids:0:0 */) -> (Tensor[(32, 256, 50304), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16]) {
  %542 = fn (%p0231: Tensor[(32, 256), int64] /* ty=Tensor[(32, 256), int64] */, %p1146: Tensor[(50304, 768), float16] /* ty=Tensor[(50304, 768), float16] */, %p285: Tensor[(1, 256, 768), float16] /* ty=Tensor[(1, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %539 = reshape(%p0231, newshape=[-1, 256]) /* ty=Tensor[(32, 256), int64] */;
    %540 = cast(%539, dtype="int32") /* ty=Tensor[(32, 256), int32] */;
    %541 = take(%p1146, %540, axis=0) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%541, %p285) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(32, 256), int64], Tensor[(50304, 768), float16], Tensor[(1, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %543 = %542(%input_ids, meta[relay.Constant][0] /* ty=Tensor[(50304, 768), float16] */, meta[relay.Constant][1] /* ty=Tensor[(1, 256, 768), float16] */) /* ty=Tensor[(32, 256, 768), float16] */;
  %544 = fn (%p0230: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0230, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %545 = %544(%543) /* ty=Tensor[(32, 256, 768), float32] */;
  %546 = fn (%p0232: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0232, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %547 = %546(%545) /* ty=Tensor[(32, 256, 1), float32] */;
  %548 = fn (%p0233: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1147: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0233, %p1147, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %549 = %548(%545, %547) /* ty=Tensor[(32, 256, 1), float32] */;
  %550 = fn (%p0229: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1145: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p284: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p336: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p424: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %532 = add(%p284, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %533 = subtract(%p0229, %p1145) /* ty=Tensor[(32, 256, 768), float32] */;
    %534 = rsqrt(%532) /* ty=Tensor[(32, 256, 1), float32] */;
    %535 = multiply(%533, %534) /* ty=Tensor[(32, 256, 768), float32] */;
    %536 = multiply(%535, %p336) /* ty=Tensor[(32, 256, 768), float32] */;
    %537 = add(%536, %p424) /* ty=Tensor[(32, 256, 768), float32] */;
    %538 = reshape(%537, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%538, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %551 = %550(%545, %547, %549, meta[relay.Constant][2] /* ty=Tensor[(768), float32] */, meta[relay.Constant][3] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %552 = fn (%p0228: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1144: Tensor[(2304, 768), float16] /* ty=Tensor[(2304, 768), float16] */, %p283: Tensor[(1, 2304), float16] /* ty=Tensor[(1, 2304), float16] */, Primitive=1) -> Tensor[(8192, 2304), float16] {
    %531 = nn.dense(%p0228, %p1144, units=2304, out_dtype="float16") /* ty=Tensor[(8192, 2304), float16] */;
    add(%531, %p283) /* ty=Tensor[(8192, 2304), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(2304, 768), float16], Tensor[(1, 2304), float16]) -> Tensor[(8192, 2304), float16] */;
  %553 = %552(%551, meta[relay.Constant][4] /* ty=Tensor[(2304, 768), float16] */, meta[relay.Constant][5] /* ty=Tensor[(1, 2304), float16] */) /* ty=Tensor[(8192, 2304), float16] */;
  %554 = fn (%p0227: Tensor[(8192, 2304), float16] /* ty=Tensor[(8192, 2304), float16] */, Primitive=1) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) {
    %530 = reshape(%p0227, newshape=[32, 256, 2304]) /* ty=Tensor[(32, 256, 2304), float16] */;
    split(%530, indices_or_sections=[768, 1536], axis=2) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */
  } /* ty=fn (Tensor[(8192, 2304), float16]) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %555 = %554(%553) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %556 = fn (%p0226: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %526 = %p0226.0 /* ty=Tensor[(32, 256, 768), float16] */;
    %527 = reshape(%526, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    %528 = transpose(%527, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %529 = broadcast_to(%528, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%529, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(384, 256, 64), float16] */;
  %561 = fn (%p0235: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %559 = %p0235.1 /* ty=Tensor[(32, 256, 768), float16] */;
    %560 = reshape(%559, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%560, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %562 = %561(%555) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %563 = fn (%p0234: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 64, 256), float16] {
    %557 = transpose(%p0234, axes=[0, 1, 3, 2]) /* ty=Tensor[(32, 12, 64, 256), float16] */;
    %558 = broadcast_to(%557, shape=[32, 12, 64, 256], dtype="float16") /* ty=Tensor[(32, 12, 64, 256), float16] */;
    reshape(%558, newshape=[-1, 64, 256]) /* ty=Tensor[(384, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 64, 256), float16] */;
  %564 = %556(%555) /* ty=Tensor[(384, 256, 64), float16] */;
  %565 = %563(%562) /* ty=Tensor[(384, 64, 256), float16] */;
  %566 = fn (%p0225: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, %p1143: Tensor[(384, 64, 256), float16] /* ty=Tensor[(384, 64, 256), float16] */, Primitive=1) -> Tensor[(384, 256, 256), float16] {
    nn.batch_matmul(%p0225, %p1143, out_dtype="float16") /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16], Tensor[(384, 64, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %567 = %566(%564, %565) /* ty=Tensor[(384, 256, 256), float16] */;
  %568 = fn (%p0224: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p1142: float16 /* ty=float16 */, %p282: Tensor[(1, 1, 256, 256), bool] /* ty=Tensor[(1, 1, 256, 256), bool] */, %p335: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %523 = reshape(%p0224, newshape=[32, 12, 256, 256]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %524 = squeeze(%523, axis=[]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %525 = divide(%524, %p1142) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    where(%p282, %525, %p335) /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], float16, Tensor[(1, 1, 256, 256), bool], float16) -> Tensor[(32, 12, 256, 256), float16] */;
  %569 = %568(%567, 8f16 /* ty=float16 */, meta[relay.Constant][6] /* ty=Tensor[(1, 1, 256, 256), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %570 = fn (%p0223: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %522 = nn.fast_softmax(%p0223) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    broadcast_to(%522, shape=[32, 12, 256, 256], dtype="float16") /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(32, 12, 256, 256), float16] */;
  %571 = %570(%569) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %572 = fn (%p0222: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 256, 256), float16] {
    reshape(%p0222, newshape=[-1, 256, 256]) /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %576 = fn (%p0237: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %574 = %p0237.2 /* ty=Tensor[(32, 256, 768), float16] */;
    %575 = reshape(%574, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%575, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %577 = %576(%555) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %578 = fn (%p0236: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %573 = broadcast_to(%p0236, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%573, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %579 = %572(%571) /* ty=Tensor[(384, 256, 256), float16] */;
  %580 = %578(%577) /* ty=Tensor[(384, 256, 64), float16] */;
  %581 = fn (%p0221: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p1141: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    nn.batch_matmul(%p0221, %p1141, out_dtype="float16") /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], Tensor[(384, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %582 = %581(%579, %580) /* ty=Tensor[(384, 256, 64), float16] */;
  %583 = fn (%p0220: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %519 = reshape(%p0220, newshape=[32, 12, 256, 64]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %520 = squeeze(%519, axis=[]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %521 = transpose(%520, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    reshape(%521, newshape=[8192, 768]) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16]) -> Tensor[(8192, 768), float16] */;
  %584 = %583(%582) /* ty=Tensor[(8192, 768), float16] */;
  %585 = fn (%p0219: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1140: Tensor[(768, 768), float16] /* ty=Tensor[(768, 768), float16] */, %p281: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %518 = nn.dense(%p0219, %p1140, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%518, %p281) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(768, 768), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %586 = %585(%584, meta[relay.Constant][7] /* ty=Tensor[(768, 768), float16] */, meta[relay.Constant][8] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %587 = fn (%p0218: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1139: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %517 = reshape(%p0218, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%517, %p1139) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %588 = %587(%586, %543) /* ty=Tensor[(32, 256, 768), float16] */;
  %589 = fn (%p0217: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0217, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %590 = %589(%588) /* ty=Tensor[(32, 256, 768), float32] */;
  %591 = fn (%p0238: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0238, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %592 = %591(%590) /* ty=Tensor[(32, 256, 1), float32] */;
  %593 = fn (%p0239: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1148: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0239, %p1148, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %594 = %593(%590, %592) /* ty=Tensor[(32, 256, 1), float32] */;
  %595 = fn (%p0216: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1138: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p280: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p334: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p423: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %510 = add(%p280, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %511 = subtract(%p0216, %p1138) /* ty=Tensor[(32, 256, 768), float32] */;
    %512 = rsqrt(%510) /* ty=Tensor[(32, 256, 1), float32] */;
    %513 = multiply(%511, %512) /* ty=Tensor[(32, 256, 768), float32] */;
    %514 = multiply(%513, %p334) /* ty=Tensor[(32, 256, 768), float32] */;
    %515 = add(%514, %p423) /* ty=Tensor[(32, 256, 768), float32] */;
    %516 = reshape(%515, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%516, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %596 = %595(%590, %592, %594, meta[relay.Constant][9] /* ty=Tensor[(768), float32] */, meta[relay.Constant][10] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %597 = fn (%p0215: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1137: Tensor[(3072, 768), float16] /* ty=Tensor[(3072, 768), float16] */, %p279: Tensor[(1, 3072), float16] /* ty=Tensor[(1, 3072), float16] */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %509 = nn.dense(%p0215, %p1137, units=3072, out_dtype="float16") /* ty=Tensor[(8192, 3072), float16] */;
    add(%509, %p279) /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(3072, 768), float16], Tensor[(1, 3072), float16]) -> Tensor[(8192, 3072), float16] */;
  %598 = %597(%596, meta[relay.Constant][11] /* ty=Tensor[(3072, 768), float16] */, meta[relay.Constant][12] /* ty=Tensor[(1, 3072), float16] */) /* ty=Tensor[(8192, 3072), float16] */;
  %599 = fn (%p0214: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p1136: float16 /* ty=float16 */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %497 = reshape(%p0214, newshape=[32, 256, 3072]) /* ty=Tensor[(32, 256, 3072), float16] */;
    %498 = multiply(%497, %p1136) /* ty=Tensor[(32, 256, 3072), float16] */;
    %499 = cast(%497, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %500 = power(%499, 3f /* ty=float32 span=aten::pow_1:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %501 = multiply(%500, 0.044715f /* ty=float32 span=aten::mul_1:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %502 = add(%499, %501) /* ty=Tensor[(32, 256, 3072), float32] */;
    %503 = multiply(%502, 0.797885f /* ty=float32 span=aten::mul_2:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %504 = fast_tanh(%503) /* ty=Tensor[(32, 256, 3072), float32] */;
    %505 = cast(%498, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %506 = add(%504, 1f /* ty=float32 span=aten::add_4:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %507 = multiply(%505, %506) /* ty=Tensor[(32, 256, 3072), float32] */;
    %508 = reshape(%507, newshape=[-1, 3072]) /* ty=Tensor[(8192, 3072), float32] */;
    cast(%508, dtype="float16") /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], float16) -> Tensor[(8192, 3072), float16] */;
  %600 = %599(%598, 0.5f16 /* ty=float16 */) /* ty=Tensor[(8192, 3072), float16] */;
  %601 = fn (%p0213: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p1135: Tensor[(768, 3072), float16] /* ty=Tensor[(768, 3072), float16] */, %p278: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %496 = nn.dense(%p0213, %p1135, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%496, %p278) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], Tensor[(768, 3072), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %602 = %601(%600, meta[relay.Constant][13] /* ty=Tensor[(768, 3072), float16] */, meta[relay.Constant][14] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %603 = fn (%p0212: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1134: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %495 = reshape(%p0212, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%p1134, %495) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %604 = %603(%602, %588) /* ty=Tensor[(32, 256, 768), float16] */;
  %605 = fn (%p0211: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0211, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %606 = %605(%604) /* ty=Tensor[(32, 256, 768), float32] */;
  %607 = fn (%p0240: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0240, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %608 = %607(%606) /* ty=Tensor[(32, 256, 1), float32] */;
  %609 = fn (%p0241: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1149: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0241, %p1149, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %610 = %609(%606, %608) /* ty=Tensor[(32, 256, 1), float32] */;
  %611 = fn (%p0210: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1133: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p277: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p333: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p422: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %488 = add(%p277, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %489 = subtract(%p0210, %p1133) /* ty=Tensor[(32, 256, 768), float32] */;
    %490 = rsqrt(%488) /* ty=Tensor[(32, 256, 1), float32] */;
    %491 = multiply(%489, %490) /* ty=Tensor[(32, 256, 768), float32] */;
    %492 = multiply(%491, %p333) /* ty=Tensor[(32, 256, 768), float32] */;
    %493 = add(%492, %p422) /* ty=Tensor[(32, 256, 768), float32] */;
    %494 = reshape(%493, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%494, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %612 = %611(%606, %608, %610, meta[relay.Constant][15] /* ty=Tensor[(768), float32] */, meta[relay.Constant][16] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %613 = fn (%p0209: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1132: Tensor[(2304, 768), float16] /* ty=Tensor[(2304, 768), float16] */, %p276: Tensor[(1, 2304), float16] /* ty=Tensor[(1, 2304), float16] */, Primitive=1) -> Tensor[(8192, 2304), float16] {
    %487 = nn.dense(%p0209, %p1132, units=2304, out_dtype="float16") /* ty=Tensor[(8192, 2304), float16] */;
    add(%487, %p276) /* ty=Tensor[(8192, 2304), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(2304, 768), float16], Tensor[(1, 2304), float16]) -> Tensor[(8192, 2304), float16] */;
  %614 = %613(%612, meta[relay.Constant][17] /* ty=Tensor[(2304, 768), float16] */, meta[relay.Constant][18] /* ty=Tensor[(1, 2304), float16] */) /* ty=Tensor[(8192, 2304), float16] */;
  %615 = fn (%p0208: Tensor[(8192, 2304), float16] /* ty=Tensor[(8192, 2304), float16] */, Primitive=1) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) {
    %486 = reshape(%p0208, newshape=[32, 256, 2304]) /* ty=Tensor[(32, 256, 2304), float16] */;
    split(%486, indices_or_sections=[768, 1536], axis=2) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */
  } /* ty=fn (Tensor[(8192, 2304), float16]) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %616 = %615(%614) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %617 = fn (%p0207: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %482 = %p0207.0 /* ty=Tensor[(32, 256, 768), float16] */;
    %483 = reshape(%482, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    %484 = transpose(%483, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %485 = broadcast_to(%484, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%485, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(384, 256, 64), float16] */;
  %622 = fn (%p0243: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %620 = %p0243.1 /* ty=Tensor[(32, 256, 768), float16] */;
    %621 = reshape(%620, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%621, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %623 = %622(%616) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %624 = fn (%p0242: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 64, 256), float16] {
    %618 = transpose(%p0242, axes=[0, 1, 3, 2]) /* ty=Tensor[(32, 12, 64, 256), float16] */;
    %619 = broadcast_to(%618, shape=[32, 12, 64, 256], dtype="float16") /* ty=Tensor[(32, 12, 64, 256), float16] */;
    reshape(%619, newshape=[-1, 64, 256]) /* ty=Tensor[(384, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 64, 256), float16] */;
  %625 = %617(%616) /* ty=Tensor[(384, 256, 64), float16] */;
  %626 = %624(%623) /* ty=Tensor[(384, 64, 256), float16] */;
  %627 = fn (%p0206: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, %p1131: Tensor[(384, 64, 256), float16] /* ty=Tensor[(384, 64, 256), float16] */, Primitive=1) -> Tensor[(384, 256, 256), float16] {
    nn.batch_matmul(%p0206, %p1131, out_dtype="float16") /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16], Tensor[(384, 64, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %628 = %627(%625, %626) /* ty=Tensor[(384, 256, 256), float16] */;
  %629 = fn (%p0205: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p1130: float16 /* ty=float16 */, %p275: Tensor[(1, 1, 256, 256), bool] /* ty=Tensor[(1, 1, 256, 256), bool] */, %p332: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %479 = reshape(%p0205, newshape=[32, 12, 256, 256]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %480 = squeeze(%479, axis=[]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %481 = divide(%480, %p1130) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    where(%p275, %481, %p332) /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], float16, Tensor[(1, 1, 256, 256), bool], float16) -> Tensor[(32, 12, 256, 256), float16] */;
  %630 = %629(%628, 8f16 /* ty=float16 */, meta[relay.Constant][19] /* ty=Tensor[(1, 1, 256, 256), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %631 = fn (%p0204: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %478 = nn.fast_softmax(%p0204) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    broadcast_to(%478, shape=[32, 12, 256, 256], dtype="float16") /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(32, 12, 256, 256), float16] */;
  %632 = %631(%630) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %633 = fn (%p0203: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 256, 256), float16] {
    reshape(%p0203, newshape=[-1, 256, 256]) /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %637 = fn (%p0245: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %635 = %p0245.2 /* ty=Tensor[(32, 256, 768), float16] */;
    %636 = reshape(%635, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%636, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %638 = %637(%616) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %639 = fn (%p0244: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %634 = broadcast_to(%p0244, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%634, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %640 = %633(%632) /* ty=Tensor[(384, 256, 256), float16] */;
  %641 = %639(%638) /* ty=Tensor[(384, 256, 64), float16] */;
  %642 = fn (%p0202: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p1129: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    nn.batch_matmul(%p0202, %p1129, out_dtype="float16") /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], Tensor[(384, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %643 = %642(%640, %641) /* ty=Tensor[(384, 256, 64), float16] */;
  %644 = fn (%p0201: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %475 = reshape(%p0201, newshape=[32, 12, 256, 64]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %476 = squeeze(%475, axis=[]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %477 = transpose(%476, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    reshape(%477, newshape=[8192, 768]) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16]) -> Tensor[(8192, 768), float16] */;
  %645 = %644(%643) /* ty=Tensor[(8192, 768), float16] */;
  %646 = fn (%p0200: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1128: Tensor[(768, 768), float16] /* ty=Tensor[(768, 768), float16] */, %p274: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %474 = nn.dense(%p0200, %p1128, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%474, %p274) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(768, 768), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %647 = %646(%645, meta[relay.Constant][20] /* ty=Tensor[(768, 768), float16] */, meta[relay.Constant][21] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %648 = fn (%p0199: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1127: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %473 = reshape(%p0199, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%473, %p1127) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %649 = %648(%647, %604) /* ty=Tensor[(32, 256, 768), float16] */;
  %650 = fn (%p0198: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0198, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %651 = %650(%649) /* ty=Tensor[(32, 256, 768), float32] */;
  %652 = fn (%p0246: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0246, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %653 = %652(%651) /* ty=Tensor[(32, 256, 1), float32] */;
  %654 = fn (%p0247: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1150: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0247, %p1150, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %655 = %654(%651, %653) /* ty=Tensor[(32, 256, 1), float32] */;
  %656 = fn (%p0197: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1126: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p273: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p331: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p421: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %466 = add(%p273, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %467 = subtract(%p0197, %p1126) /* ty=Tensor[(32, 256, 768), float32] */;
    %468 = rsqrt(%466) /* ty=Tensor[(32, 256, 1), float32] */;
    %469 = multiply(%467, %468) /* ty=Tensor[(32, 256, 768), float32] */;
    %470 = multiply(%469, %p331) /* ty=Tensor[(32, 256, 768), float32] */;
    %471 = add(%470, %p421) /* ty=Tensor[(32, 256, 768), float32] */;
    %472 = reshape(%471, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%472, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %657 = %656(%651, %653, %655, meta[relay.Constant][22] /* ty=Tensor[(768), float32] */, meta[relay.Constant][23] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %658 = fn (%p0196: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1125: Tensor[(3072, 768), float16] /* ty=Tensor[(3072, 768), float16] */, %p272: Tensor[(1, 3072), float16] /* ty=Tensor[(1, 3072), float16] */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %465 = nn.dense(%p0196, %p1125, units=3072, out_dtype="float16") /* ty=Tensor[(8192, 3072), float16] */;
    add(%465, %p272) /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(3072, 768), float16], Tensor[(1, 3072), float16]) -> Tensor[(8192, 3072), float16] */;
  %659 = %658(%657, meta[relay.Constant][24] /* ty=Tensor[(3072, 768), float16] */, meta[relay.Constant][25] /* ty=Tensor[(1, 3072), float16] */) /* ty=Tensor[(8192, 3072), float16] */;
  %660 = fn (%p0195: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p1124: float16 /* ty=float16 */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %453 = reshape(%p0195, newshape=[32, 256, 3072]) /* ty=Tensor[(32, 256, 3072), float16] */;
    %454 = multiply(%453, %p1124) /* ty=Tensor[(32, 256, 3072), float16] */;
    %455 = cast(%453, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %456 = power(%455, 3f /* ty=float32 span=aten::pow_3:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %457 = multiply(%456, 0.044715f /* ty=float32 span=aten::mul_5:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %458 = add(%455, %457) /* ty=Tensor[(32, 256, 3072), float32] */;
    %459 = multiply(%458, 0.797885f /* ty=float32 span=aten::mul_6:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %460 = fast_tanh(%459) /* ty=Tensor[(32, 256, 3072), float32] */;
    %461 = cast(%454, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %462 = add(%460, 1f /* ty=float32 span=aten::add_8:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %463 = multiply(%461, %462) /* ty=Tensor[(32, 256, 3072), float32] */;
    %464 = reshape(%463, newshape=[-1, 3072]) /* ty=Tensor[(8192, 3072), float32] */;
    cast(%464, dtype="float16") /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], float16) -> Tensor[(8192, 3072), float16] */;
  %661 = %660(%659, 0.5f16 /* ty=float16 */) /* ty=Tensor[(8192, 3072), float16] */;
  %662 = fn (%p0194: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p1123: Tensor[(768, 3072), float16] /* ty=Tensor[(768, 3072), float16] */, %p271: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %452 = nn.dense(%p0194, %p1123, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%452, %p271) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], Tensor[(768, 3072), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %663 = %662(%661, meta[relay.Constant][26] /* ty=Tensor[(768, 3072), float16] */, meta[relay.Constant][27] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %664 = fn (%p0193: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1122: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %451 = reshape(%p0193, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%p1122, %451) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %665 = %664(%663, %649) /* ty=Tensor[(32, 256, 768), float16] */;
  %666 = fn (%p0192: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0192, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %667 = %666(%665) /* ty=Tensor[(32, 256, 768), float32] */;
  %668 = fn (%p0248: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0248, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %669 = %668(%667) /* ty=Tensor[(32, 256, 1), float32] */;
  %670 = fn (%p0249: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1151: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0249, %p1151, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %671 = %670(%667, %669) /* ty=Tensor[(32, 256, 1), float32] */;
  %672 = fn (%p0191: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1121: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p270: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p330: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p420: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %444 = add(%p270, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %445 = subtract(%p0191, %p1121) /* ty=Tensor[(32, 256, 768), float32] */;
    %446 = rsqrt(%444) /* ty=Tensor[(32, 256, 1), float32] */;
    %447 = multiply(%445, %446) /* ty=Tensor[(32, 256, 768), float32] */;
    %448 = multiply(%447, %p330) /* ty=Tensor[(32, 256, 768), float32] */;
    %449 = add(%448, %p420) /* ty=Tensor[(32, 256, 768), float32] */;
    %450 = reshape(%449, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%450, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %673 = %672(%667, %669, %671, meta[relay.Constant][28] /* ty=Tensor[(768), float32] */, meta[relay.Constant][29] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %674 = fn (%p0190: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1120: Tensor[(2304, 768), float16] /* ty=Tensor[(2304, 768), float16] */, %p269: Tensor[(1, 2304), float16] /* ty=Tensor[(1, 2304), float16] */, Primitive=1) -> Tensor[(8192, 2304), float16] {
    %443 = nn.dense(%p0190, %p1120, units=2304, out_dtype="float16") /* ty=Tensor[(8192, 2304), float16] */;
    add(%443, %p269) /* ty=Tensor[(8192, 2304), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(2304, 768), float16], Tensor[(1, 2304), float16]) -> Tensor[(8192, 2304), float16] */;
  %675 = %674(%673, meta[relay.Constant][30] /* ty=Tensor[(2304, 768), float16] */, meta[relay.Constant][31] /* ty=Tensor[(1, 2304), float16] */) /* ty=Tensor[(8192, 2304), float16] */;
  %676 = fn (%p0189: Tensor[(8192, 2304), float16] /* ty=Tensor[(8192, 2304), float16] */, Primitive=1) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) {
    %442 = reshape(%p0189, newshape=[32, 256, 2304]) /* ty=Tensor[(32, 256, 2304), float16] */;
    split(%442, indices_or_sections=[768, 1536], axis=2) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */
  } /* ty=fn (Tensor[(8192, 2304), float16]) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %677 = %676(%675) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %678 = fn (%p0188: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %438 = %p0188.0 /* ty=Tensor[(32, 256, 768), float16] */;
    %439 = reshape(%438, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    %440 = transpose(%439, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %441 = broadcast_to(%440, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%441, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(384, 256, 64), float16] */;
  %683 = fn (%p0251: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %681 = %p0251.1 /* ty=Tensor[(32, 256, 768), float16] */;
    %682 = reshape(%681, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%682, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %684 = %683(%677) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %685 = fn (%p0250: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 64, 256), float16] {
    %679 = transpose(%p0250, axes=[0, 1, 3, 2]) /* ty=Tensor[(32, 12, 64, 256), float16] */;
    %680 = broadcast_to(%679, shape=[32, 12, 64, 256], dtype="float16") /* ty=Tensor[(32, 12, 64, 256), float16] */;
    reshape(%680, newshape=[-1, 64, 256]) /* ty=Tensor[(384, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 64, 256), float16] */;
  %686 = %678(%677) /* ty=Tensor[(384, 256, 64), float16] */;
  %687 = %685(%684) /* ty=Tensor[(384, 64, 256), float16] */;
  %688 = fn (%p0187: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, %p1119: Tensor[(384, 64, 256), float16] /* ty=Tensor[(384, 64, 256), float16] */, Primitive=1) -> Tensor[(384, 256, 256), float16] {
    nn.batch_matmul(%p0187, %p1119, out_dtype="float16") /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16], Tensor[(384, 64, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %689 = %688(%686, %687) /* ty=Tensor[(384, 256, 256), float16] */;
  %690 = fn (%p0186: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p1118: float16 /* ty=float16 */, %p268: Tensor[(1, 1, 256, 256), bool] /* ty=Tensor[(1, 1, 256, 256), bool] */, %p329: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %435 = reshape(%p0186, newshape=[32, 12, 256, 256]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %436 = squeeze(%435, axis=[]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %437 = divide(%436, %p1118) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    where(%p268, %437, %p329) /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], float16, Tensor[(1, 1, 256, 256), bool], float16) -> Tensor[(32, 12, 256, 256), float16] */;
  %691 = %690(%689, 8f16 /* ty=float16 */, meta[relay.Constant][32] /* ty=Tensor[(1, 1, 256, 256), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %692 = fn (%p0185: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %434 = nn.fast_softmax(%p0185) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    broadcast_to(%434, shape=[32, 12, 256, 256], dtype="float16") /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(32, 12, 256, 256), float16] */;
  %693 = %692(%691) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %694 = fn (%p0184: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 256, 256), float16] {
    reshape(%p0184, newshape=[-1, 256, 256]) /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %698 = fn (%p0253: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %696 = %p0253.2 /* ty=Tensor[(32, 256, 768), float16] */;
    %697 = reshape(%696, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%697, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %699 = %698(%677) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %700 = fn (%p0252: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %695 = broadcast_to(%p0252, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%695, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %701 = %694(%693) /* ty=Tensor[(384, 256, 256), float16] */;
  %702 = %700(%699) /* ty=Tensor[(384, 256, 64), float16] */;
  %703 = fn (%p0183: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p1117: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    nn.batch_matmul(%p0183, %p1117, out_dtype="float16") /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], Tensor[(384, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %704 = %703(%701, %702) /* ty=Tensor[(384, 256, 64), float16] */;
  %705 = fn (%p0182: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %431 = reshape(%p0182, newshape=[32, 12, 256, 64]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %432 = squeeze(%431, axis=[]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %433 = transpose(%432, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    reshape(%433, newshape=[8192, 768]) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16]) -> Tensor[(8192, 768), float16] */;
  %706 = %705(%704) /* ty=Tensor[(8192, 768), float16] */;
  %707 = fn (%p0181: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1116: Tensor[(768, 768), float16] /* ty=Tensor[(768, 768), float16] */, %p267: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %430 = nn.dense(%p0181, %p1116, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%430, %p267) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(768, 768), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %708 = %707(%706, meta[relay.Constant][33] /* ty=Tensor[(768, 768), float16] */, meta[relay.Constant][34] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %709 = fn (%p0180: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1115: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %429 = reshape(%p0180, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%429, %p1115) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %710 = %709(%708, %665) /* ty=Tensor[(32, 256, 768), float16] */;
  %711 = fn (%p0179: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0179, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %712 = %711(%710) /* ty=Tensor[(32, 256, 768), float32] */;
  %713 = fn (%p0254: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0254, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %714 = %713(%712) /* ty=Tensor[(32, 256, 1), float32] */;
  %715 = fn (%p0255: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1152: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0255, %p1152, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %716 = %715(%712, %714) /* ty=Tensor[(32, 256, 1), float32] */;
  %717 = fn (%p0178: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1114: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p266: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p328: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p419: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %422 = add(%p266, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %423 = subtract(%p0178, %p1114) /* ty=Tensor[(32, 256, 768), float32] */;
    %424 = rsqrt(%422) /* ty=Tensor[(32, 256, 1), float32] */;
    %425 = multiply(%423, %424) /* ty=Tensor[(32, 256, 768), float32] */;
    %426 = multiply(%425, %p328) /* ty=Tensor[(32, 256, 768), float32] */;
    %427 = add(%426, %p419) /* ty=Tensor[(32, 256, 768), float32] */;
    %428 = reshape(%427, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%428, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %718 = %717(%712, %714, %716, meta[relay.Constant][35] /* ty=Tensor[(768), float32] */, meta[relay.Constant][36] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %719 = fn (%p0177: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1113: Tensor[(3072, 768), float16] /* ty=Tensor[(3072, 768), float16] */, %p265: Tensor[(1, 3072), float16] /* ty=Tensor[(1, 3072), float16] */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %421 = nn.dense(%p0177, %p1113, units=3072, out_dtype="float16") /* ty=Tensor[(8192, 3072), float16] */;
    add(%421, %p265) /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(3072, 768), float16], Tensor[(1, 3072), float16]) -> Tensor[(8192, 3072), float16] */;
  %720 = %719(%718, meta[relay.Constant][37] /* ty=Tensor[(3072, 768), float16] */, meta[relay.Constant][38] /* ty=Tensor[(1, 3072), float16] */) /* ty=Tensor[(8192, 3072), float16] */;
  %721 = fn (%p0176: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p1112: float16 /* ty=float16 */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %409 = reshape(%p0176, newshape=[32, 256, 3072]) /* ty=Tensor[(32, 256, 3072), float16] */;
    %410 = multiply(%409, %p1112) /* ty=Tensor[(32, 256, 3072), float16] */;
    %411 = cast(%409, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %412 = power(%411, 3f /* ty=float32 span=aten::pow_5:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %413 = multiply(%412, 0.044715f /* ty=float32 span=aten::mul_9:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %414 = add(%411, %413) /* ty=Tensor[(32, 256, 3072), float32] */;
    %415 = multiply(%414, 0.797885f /* ty=float32 span=aten::mul_10:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %416 = fast_tanh(%415) /* ty=Tensor[(32, 256, 3072), float32] */;
    %417 = cast(%410, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %418 = add(%416, 1f /* ty=float32 span=aten::add_12:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %419 = multiply(%417, %418) /* ty=Tensor[(32, 256, 3072), float32] */;
    %420 = reshape(%419, newshape=[-1, 3072]) /* ty=Tensor[(8192, 3072), float32] */;
    cast(%420, dtype="float16") /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], float16) -> Tensor[(8192, 3072), float16] */;
  %722 = %721(%720, 0.5f16 /* ty=float16 */) /* ty=Tensor[(8192, 3072), float16] */;
  %723 = fn (%p0175: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p1111: Tensor[(768, 3072), float16] /* ty=Tensor[(768, 3072), float16] */, %p264: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %408 = nn.dense(%p0175, %p1111, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%408, %p264) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], Tensor[(768, 3072), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %724 = %723(%722, meta[relay.Constant][39] /* ty=Tensor[(768, 3072), float16] */, meta[relay.Constant][40] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %725 = fn (%p0174: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1110: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %407 = reshape(%p0174, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%p1110, %407) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %726 = %725(%724, %710) /* ty=Tensor[(32, 256, 768), float16] */;
  %727 = fn (%p0173: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0173, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %728 = %727(%726) /* ty=Tensor[(32, 256, 768), float32] */;
  %729 = fn (%p0256: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0256, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %730 = %729(%728) /* ty=Tensor[(32, 256, 1), float32] */;
  %731 = fn (%p0257: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1153: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0257, %p1153, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %732 = %731(%728, %730) /* ty=Tensor[(32, 256, 1), float32] */;
  %733 = fn (%p0172: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1109: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p263: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p327: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p418: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %400 = add(%p263, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %401 = subtract(%p0172, %p1109) /* ty=Tensor[(32, 256, 768), float32] */;
    %402 = rsqrt(%400) /* ty=Tensor[(32, 256, 1), float32] */;
    %403 = multiply(%401, %402) /* ty=Tensor[(32, 256, 768), float32] */;
    %404 = multiply(%403, %p327) /* ty=Tensor[(32, 256, 768), float32] */;
    %405 = add(%404, %p418) /* ty=Tensor[(32, 256, 768), float32] */;
    %406 = reshape(%405, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%406, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %734 = %733(%728, %730, %732, meta[relay.Constant][41] /* ty=Tensor[(768), float32] */, meta[relay.Constant][42] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %735 = fn (%p0171: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1108: Tensor[(2304, 768), float16] /* ty=Tensor[(2304, 768), float16] */, %p262: Tensor[(1, 2304), float16] /* ty=Tensor[(1, 2304), float16] */, Primitive=1) -> Tensor[(8192, 2304), float16] {
    %399 = nn.dense(%p0171, %p1108, units=2304, out_dtype="float16") /* ty=Tensor[(8192, 2304), float16] */;
    add(%399, %p262) /* ty=Tensor[(8192, 2304), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(2304, 768), float16], Tensor[(1, 2304), float16]) -> Tensor[(8192, 2304), float16] */;
  %736 = %735(%734, meta[relay.Constant][43] /* ty=Tensor[(2304, 768), float16] */, meta[relay.Constant][44] /* ty=Tensor[(1, 2304), float16] */) /* ty=Tensor[(8192, 2304), float16] */;
  %737 = fn (%p0170: Tensor[(8192, 2304), float16] /* ty=Tensor[(8192, 2304), float16] */, Primitive=1) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) {
    %398 = reshape(%p0170, newshape=[32, 256, 2304]) /* ty=Tensor[(32, 256, 2304), float16] */;
    split(%398, indices_or_sections=[768, 1536], axis=2) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */
  } /* ty=fn (Tensor[(8192, 2304), float16]) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %738 = %737(%736) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %739 = fn (%p0169: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %394 = %p0169.0 /* ty=Tensor[(32, 256, 768), float16] */;
    %395 = reshape(%394, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    %396 = transpose(%395, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %397 = broadcast_to(%396, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%397, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(384, 256, 64), float16] */;
  %744 = fn (%p0259: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %742 = %p0259.1 /* ty=Tensor[(32, 256, 768), float16] */;
    %743 = reshape(%742, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%743, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %745 = %744(%738) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %746 = fn (%p0258: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 64, 256), float16] {
    %740 = transpose(%p0258, axes=[0, 1, 3, 2]) /* ty=Tensor[(32, 12, 64, 256), float16] */;
    %741 = broadcast_to(%740, shape=[32, 12, 64, 256], dtype="float16") /* ty=Tensor[(32, 12, 64, 256), float16] */;
    reshape(%741, newshape=[-1, 64, 256]) /* ty=Tensor[(384, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 64, 256), float16] */;
  %747 = %739(%738) /* ty=Tensor[(384, 256, 64), float16] */;
  %748 = %746(%745) /* ty=Tensor[(384, 64, 256), float16] */;
  %749 = fn (%p0168: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, %p1107: Tensor[(384, 64, 256), float16] /* ty=Tensor[(384, 64, 256), float16] */, Primitive=1) -> Tensor[(384, 256, 256), float16] {
    nn.batch_matmul(%p0168, %p1107, out_dtype="float16") /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16], Tensor[(384, 64, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %750 = %749(%747, %748) /* ty=Tensor[(384, 256, 256), float16] */;
  %751 = fn (%p0167: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p1106: float16 /* ty=float16 */, %p261: Tensor[(1, 1, 256, 256), bool] /* ty=Tensor[(1, 1, 256, 256), bool] */, %p326: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %391 = reshape(%p0167, newshape=[32, 12, 256, 256]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %392 = squeeze(%391, axis=[]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %393 = divide(%392, %p1106) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    where(%p261, %393, %p326) /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], float16, Tensor[(1, 1, 256, 256), bool], float16) -> Tensor[(32, 12, 256, 256), float16] */;
  %752 = %751(%750, 8f16 /* ty=float16 */, meta[relay.Constant][45] /* ty=Tensor[(1, 1, 256, 256), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %753 = fn (%p0166: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %390 = nn.fast_softmax(%p0166) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    broadcast_to(%390, shape=[32, 12, 256, 256], dtype="float16") /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(32, 12, 256, 256), float16] */;
  %754 = %753(%752) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %755 = fn (%p0165: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 256, 256), float16] {
    reshape(%p0165, newshape=[-1, 256, 256]) /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %759 = fn (%p0261: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %757 = %p0261.2 /* ty=Tensor[(32, 256, 768), float16] */;
    %758 = reshape(%757, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%758, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %760 = %759(%738) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %761 = fn (%p0260: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %756 = broadcast_to(%p0260, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%756, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %762 = %755(%754) /* ty=Tensor[(384, 256, 256), float16] */;
  %763 = %761(%760) /* ty=Tensor[(384, 256, 64), float16] */;
  %764 = fn (%p0164: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p1105: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    nn.batch_matmul(%p0164, %p1105, out_dtype="float16") /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], Tensor[(384, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %765 = %764(%762, %763) /* ty=Tensor[(384, 256, 64), float16] */;
  %766 = fn (%p0163: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %387 = reshape(%p0163, newshape=[32, 12, 256, 64]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %388 = squeeze(%387, axis=[]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %389 = transpose(%388, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    reshape(%389, newshape=[8192, 768]) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16]) -> Tensor[(8192, 768), float16] */;
  %767 = %766(%765) /* ty=Tensor[(8192, 768), float16] */;
  %768 = fn (%p0162: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1104: Tensor[(768, 768), float16] /* ty=Tensor[(768, 768), float16] */, %p260: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %386 = nn.dense(%p0162, %p1104, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%386, %p260) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(768, 768), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %769 = %768(%767, meta[relay.Constant][46] /* ty=Tensor[(768, 768), float16] */, meta[relay.Constant][47] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %770 = fn (%p0161: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1103: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %385 = reshape(%p0161, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%385, %p1103) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %771 = %770(%769, %726) /* ty=Tensor[(32, 256, 768), float16] */;
  %772 = fn (%p0160: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0160, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %773 = %772(%771) /* ty=Tensor[(32, 256, 768), float32] */;
  %774 = fn (%p0262: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0262, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %775 = %774(%773) /* ty=Tensor[(32, 256, 1), float32] */;
  %776 = fn (%p0263: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1154: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0263, %p1154, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %777 = %776(%773, %775) /* ty=Tensor[(32, 256, 1), float32] */;
  %778 = fn (%p0159: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1102: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p259: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p325: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p417: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %378 = add(%p259, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %379 = subtract(%p0159, %p1102) /* ty=Tensor[(32, 256, 768), float32] */;
    %380 = rsqrt(%378) /* ty=Tensor[(32, 256, 1), float32] */;
    %381 = multiply(%379, %380) /* ty=Tensor[(32, 256, 768), float32] */;
    %382 = multiply(%381, %p325) /* ty=Tensor[(32, 256, 768), float32] */;
    %383 = add(%382, %p417) /* ty=Tensor[(32, 256, 768), float32] */;
    %384 = reshape(%383, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%384, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %779 = %778(%773, %775, %777, meta[relay.Constant][48] /* ty=Tensor[(768), float32] */, meta[relay.Constant][49] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %780 = fn (%p0158: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p1101: Tensor[(3072, 768), float16] /* ty=Tensor[(3072, 768), float16] */, %p258: Tensor[(1, 3072), float16] /* ty=Tensor[(1, 3072), float16] */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %377 = nn.dense(%p0158, %p1101, units=3072, out_dtype="float16") /* ty=Tensor[(8192, 3072), float16] */;
    add(%377, %p258) /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(3072, 768), float16], Tensor[(1, 3072), float16]) -> Tensor[(8192, 3072), float16] */;
  %781 = %780(%779, meta[relay.Constant][50] /* ty=Tensor[(3072, 768), float16] */, meta[relay.Constant][51] /* ty=Tensor[(1, 3072), float16] */) /* ty=Tensor[(8192, 3072), float16] */;
  %782 = fn (%p0157: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p1100: float16 /* ty=float16 */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %365 = reshape(%p0157, newshape=[32, 256, 3072]) /* ty=Tensor[(32, 256, 3072), float16] */;
    %366 = multiply(%365, %p1100) /* ty=Tensor[(32, 256, 3072), float16] */;
    %367 = cast(%365, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %368 = power(%367, 3f /* ty=float32 span=aten::pow_7:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %369 = multiply(%368, 0.044715f /* ty=float32 span=aten::mul_13:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %370 = add(%367, %369) /* ty=Tensor[(32, 256, 3072), float32] */;
    %371 = multiply(%370, 0.797885f /* ty=float32 span=aten::mul_14:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %372 = fast_tanh(%371) /* ty=Tensor[(32, 256, 3072), float32] */;
    %373 = cast(%366, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %374 = add(%372, 1f /* ty=float32 span=aten::add_16:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %375 = multiply(%373, %374) /* ty=Tensor[(32, 256, 3072), float32] */;
    %376 = reshape(%375, newshape=[-1, 3072]) /* ty=Tensor[(8192, 3072), float32] */;
    cast(%376, dtype="float16") /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], float16) -> Tensor[(8192, 3072), float16] */;
  %783 = %782(%781, 0.5f16 /* ty=float16 */) /* ty=Tensor[(8192, 3072), float16] */;
  %784 = fn (%p0156: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p199: Tensor[(768, 3072), float16] /* ty=Tensor[(768, 3072), float16] */, %p257: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %364 = nn.dense(%p0156, %p199, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%364, %p257) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], Tensor[(768, 3072), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %785 = %784(%783, meta[relay.Constant][52] /* ty=Tensor[(768, 3072), float16] */, meta[relay.Constant][53] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %786 = fn (%p0155: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p198: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %363 = reshape(%p0155, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%p198, %363) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %787 = %786(%785, %771) /* ty=Tensor[(32, 256, 768), float16] */;
  %788 = fn (%p0154: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0154, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %789 = %788(%787) /* ty=Tensor[(32, 256, 768), float32] */;
  %790 = fn (%p0264: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0264, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %791 = %790(%789) /* ty=Tensor[(32, 256, 1), float32] */;
  %792 = fn (%p0265: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1155: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0265, %p1155, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %793 = %792(%789, %791) /* ty=Tensor[(32, 256, 1), float32] */;
  %794 = fn (%p0153: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p197: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p256: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p324: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p416: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %356 = add(%p256, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %357 = subtract(%p0153, %p197) /* ty=Tensor[(32, 256, 768), float32] */;
    %358 = rsqrt(%356) /* ty=Tensor[(32, 256, 1), float32] */;
    %359 = multiply(%357, %358) /* ty=Tensor[(32, 256, 768), float32] */;
    %360 = multiply(%359, %p324) /* ty=Tensor[(32, 256, 768), float32] */;
    %361 = add(%360, %p416) /* ty=Tensor[(32, 256, 768), float32] */;
    %362 = reshape(%361, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%362, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %795 = %794(%789, %791, %793, meta[relay.Constant][54] /* ty=Tensor[(768), float32] */, meta[relay.Constant][55] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %796 = fn (%p0152: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p196: Tensor[(2304, 768), float16] /* ty=Tensor[(2304, 768), float16] */, %p255: Tensor[(1, 2304), float16] /* ty=Tensor[(1, 2304), float16] */, Primitive=1) -> Tensor[(8192, 2304), float16] {
    %355 = nn.dense(%p0152, %p196, units=2304, out_dtype="float16") /* ty=Tensor[(8192, 2304), float16] */;
    add(%355, %p255) /* ty=Tensor[(8192, 2304), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(2304, 768), float16], Tensor[(1, 2304), float16]) -> Tensor[(8192, 2304), float16] */;
  %797 = %796(%795, meta[relay.Constant][56] /* ty=Tensor[(2304, 768), float16] */, meta[relay.Constant][57] /* ty=Tensor[(1, 2304), float16] */) /* ty=Tensor[(8192, 2304), float16] */;
  %798 = fn (%p0151: Tensor[(8192, 2304), float16] /* ty=Tensor[(8192, 2304), float16] */, Primitive=1) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) {
    %354 = reshape(%p0151, newshape=[32, 256, 2304]) /* ty=Tensor[(32, 256, 2304), float16] */;
    split(%354, indices_or_sections=[768, 1536], axis=2) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */
  } /* ty=fn (Tensor[(8192, 2304), float16]) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %799 = %798(%797) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %800 = fn (%p0150: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %350 = %p0150.0 /* ty=Tensor[(32, 256, 768), float16] */;
    %351 = reshape(%350, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    %352 = transpose(%351, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %353 = broadcast_to(%352, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%353, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(384, 256, 64), float16] */;
  %805 = fn (%p0267: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %803 = %p0267.1 /* ty=Tensor[(32, 256, 768), float16] */;
    %804 = reshape(%803, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%804, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %806 = %805(%799) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %807 = fn (%p0266: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 64, 256), float16] {
    %801 = transpose(%p0266, axes=[0, 1, 3, 2]) /* ty=Tensor[(32, 12, 64, 256), float16] */;
    %802 = broadcast_to(%801, shape=[32, 12, 64, 256], dtype="float16") /* ty=Tensor[(32, 12, 64, 256), float16] */;
    reshape(%802, newshape=[-1, 64, 256]) /* ty=Tensor[(384, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 64, 256), float16] */;
  %808 = %800(%799) /* ty=Tensor[(384, 256, 64), float16] */;
  %809 = %807(%806) /* ty=Tensor[(384, 64, 256), float16] */;
  %810 = fn (%p0149: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, %p195: Tensor[(384, 64, 256), float16] /* ty=Tensor[(384, 64, 256), float16] */, Primitive=1) -> Tensor[(384, 256, 256), float16] {
    nn.batch_matmul(%p0149, %p195, out_dtype="float16") /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16], Tensor[(384, 64, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %811 = %810(%808, %809) /* ty=Tensor[(384, 256, 256), float16] */;
  %812 = fn (%p0148: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p194: float16 /* ty=float16 */, %p254: Tensor[(1, 1, 256, 256), bool] /* ty=Tensor[(1, 1, 256, 256), bool] */, %p323: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %347 = reshape(%p0148, newshape=[32, 12, 256, 256]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %348 = squeeze(%347, axis=[]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %349 = divide(%348, %p194) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    where(%p254, %349, %p323) /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], float16, Tensor[(1, 1, 256, 256), bool], float16) -> Tensor[(32, 12, 256, 256), float16] */;
  %813 = %812(%811, 8f16 /* ty=float16 */, meta[relay.Constant][58] /* ty=Tensor[(1, 1, 256, 256), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %814 = fn (%p0147: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %346 = nn.fast_softmax(%p0147) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    broadcast_to(%346, shape=[32, 12, 256, 256], dtype="float16") /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(32, 12, 256, 256), float16] */;
  %815 = %814(%813) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %816 = fn (%p0146: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 256, 256), float16] {
    reshape(%p0146, newshape=[-1, 256, 256]) /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %820 = fn (%p0269: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %818 = %p0269.2 /* ty=Tensor[(32, 256, 768), float16] */;
    %819 = reshape(%818, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%819, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %821 = %820(%799) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %822 = fn (%p0268: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %817 = broadcast_to(%p0268, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%817, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %823 = %816(%815) /* ty=Tensor[(384, 256, 256), float16] */;
  %824 = %822(%821) /* ty=Tensor[(384, 256, 64), float16] */;
  %825 = fn (%p0145: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p193: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    nn.batch_matmul(%p0145, %p193, out_dtype="float16") /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], Tensor[(384, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %826 = %825(%823, %824) /* ty=Tensor[(384, 256, 64), float16] */;
  %827 = fn (%p0144: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %343 = reshape(%p0144, newshape=[32, 12, 256, 64]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %344 = squeeze(%343, axis=[]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %345 = transpose(%344, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    reshape(%345, newshape=[8192, 768]) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16]) -> Tensor[(8192, 768), float16] */;
  %828 = %827(%826) /* ty=Tensor[(8192, 768), float16] */;
  %829 = fn (%p0143: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p192: Tensor[(768, 768), float16] /* ty=Tensor[(768, 768), float16] */, %p253: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %342 = nn.dense(%p0143, %p192, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%342, %p253) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(768, 768), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %830 = %829(%828, meta[relay.Constant][59] /* ty=Tensor[(768, 768), float16] */, meta[relay.Constant][60] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %831 = fn (%p0142: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p191: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %341 = reshape(%p0142, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%341, %p191) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %832 = %831(%830, %787) /* ty=Tensor[(32, 256, 768), float16] */;
  %833 = fn (%p0141: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0141, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %834 = %833(%832) /* ty=Tensor[(32, 256, 768), float32] */;
  %835 = fn (%p0270: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0270, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %836 = %835(%834) /* ty=Tensor[(32, 256, 1), float32] */;
  %837 = fn (%p0271: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1156: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0271, %p1156, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %838 = %837(%834, %836) /* ty=Tensor[(32, 256, 1), float32] */;
  %839 = fn (%p0140: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p190: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p252: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p322: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p415: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %334 = add(%p252, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %335 = subtract(%p0140, %p190) /* ty=Tensor[(32, 256, 768), float32] */;
    %336 = rsqrt(%334) /* ty=Tensor[(32, 256, 1), float32] */;
    %337 = multiply(%335, %336) /* ty=Tensor[(32, 256, 768), float32] */;
    %338 = multiply(%337, %p322) /* ty=Tensor[(32, 256, 768), float32] */;
    %339 = add(%338, %p415) /* ty=Tensor[(32, 256, 768), float32] */;
    %340 = reshape(%339, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%340, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %840 = %839(%834, %836, %838, meta[relay.Constant][61] /* ty=Tensor[(768), float32] */, meta[relay.Constant][62] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %841 = fn (%p0139: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p189: Tensor[(3072, 768), float16] /* ty=Tensor[(3072, 768), float16] */, %p251: Tensor[(1, 3072), float16] /* ty=Tensor[(1, 3072), float16] */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %333 = nn.dense(%p0139, %p189, units=3072, out_dtype="float16") /* ty=Tensor[(8192, 3072), float16] */;
    add(%333, %p251) /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(3072, 768), float16], Tensor[(1, 3072), float16]) -> Tensor[(8192, 3072), float16] */;
  %842 = %841(%840, meta[relay.Constant][63] /* ty=Tensor[(3072, 768), float16] */, meta[relay.Constant][64] /* ty=Tensor[(1, 3072), float16] */) /* ty=Tensor[(8192, 3072), float16] */;
  %843 = fn (%p0138: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p188: float16 /* ty=float16 */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %321 = reshape(%p0138, newshape=[32, 256, 3072]) /* ty=Tensor[(32, 256, 3072), float16] */;
    %322 = multiply(%321, %p188) /* ty=Tensor[(32, 256, 3072), float16] */;
    %323 = cast(%321, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %324 = power(%323, 3f /* ty=float32 span=aten::pow_9:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %325 = multiply(%324, 0.044715f /* ty=float32 span=aten::mul_17:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %326 = add(%323, %325) /* ty=Tensor[(32, 256, 3072), float32] */;
    %327 = multiply(%326, 0.797885f /* ty=float32 span=aten::mul_18:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %328 = fast_tanh(%327) /* ty=Tensor[(32, 256, 3072), float32] */;
    %329 = cast(%322, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %330 = add(%328, 1f /* ty=float32 span=aten::add_20:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %331 = multiply(%329, %330) /* ty=Tensor[(32, 256, 3072), float32] */;
    %332 = reshape(%331, newshape=[-1, 3072]) /* ty=Tensor[(8192, 3072), float32] */;
    cast(%332, dtype="float16") /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], float16) -> Tensor[(8192, 3072), float16] */;
  %844 = %843(%842, 0.5f16 /* ty=float16 */) /* ty=Tensor[(8192, 3072), float16] */;
  %845 = fn (%p0137: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p187: Tensor[(768, 3072), float16] /* ty=Tensor[(768, 3072), float16] */, %p250: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %320 = nn.dense(%p0137, %p187, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%320, %p250) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], Tensor[(768, 3072), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %846 = %845(%844, meta[relay.Constant][65] /* ty=Tensor[(768, 3072), float16] */, meta[relay.Constant][66] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %847 = fn (%p0136: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p186: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %319 = reshape(%p0136, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%p186, %319) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %848 = %847(%846, %832) /* ty=Tensor[(32, 256, 768), float16] */;
  %849 = fn (%p0135: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0135, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %850 = %849(%848) /* ty=Tensor[(32, 256, 768), float32] */;
  %851 = fn (%p0272: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0272, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %852 = %851(%850) /* ty=Tensor[(32, 256, 1), float32] */;
  %853 = fn (%p0273: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1157: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0273, %p1157, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %854 = %853(%850, %852) /* ty=Tensor[(32, 256, 1), float32] */;
  %855 = fn (%p0134: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p185: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p249: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p321: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p414: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %312 = add(%p249, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %313 = subtract(%p0134, %p185) /* ty=Tensor[(32, 256, 768), float32] */;
    %314 = rsqrt(%312) /* ty=Tensor[(32, 256, 1), float32] */;
    %315 = multiply(%313, %314) /* ty=Tensor[(32, 256, 768), float32] */;
    %316 = multiply(%315, %p321) /* ty=Tensor[(32, 256, 768), float32] */;
    %317 = add(%316, %p414) /* ty=Tensor[(32, 256, 768), float32] */;
    %318 = reshape(%317, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%318, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %856 = %855(%850, %852, %854, meta[relay.Constant][67] /* ty=Tensor[(768), float32] */, meta[relay.Constant][68] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %857 = fn (%p0133: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p184: Tensor[(2304, 768), float16] /* ty=Tensor[(2304, 768), float16] */, %p248: Tensor[(1, 2304), float16] /* ty=Tensor[(1, 2304), float16] */, Primitive=1) -> Tensor[(8192, 2304), float16] {
    %311 = nn.dense(%p0133, %p184, units=2304, out_dtype="float16") /* ty=Tensor[(8192, 2304), float16] */;
    add(%311, %p248) /* ty=Tensor[(8192, 2304), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(2304, 768), float16], Tensor[(1, 2304), float16]) -> Tensor[(8192, 2304), float16] */;
  %858 = %857(%856, meta[relay.Constant][69] /* ty=Tensor[(2304, 768), float16] */, meta[relay.Constant][70] /* ty=Tensor[(1, 2304), float16] */) /* ty=Tensor[(8192, 2304), float16] */;
  %859 = fn (%p0132: Tensor[(8192, 2304), float16] /* ty=Tensor[(8192, 2304), float16] */, Primitive=1) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) {
    %310 = reshape(%p0132, newshape=[32, 256, 2304]) /* ty=Tensor[(32, 256, 2304), float16] */;
    split(%310, indices_or_sections=[768, 1536], axis=2) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */
  } /* ty=fn (Tensor[(8192, 2304), float16]) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %860 = %859(%858) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %861 = fn (%p0131: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %306 = %p0131.0 /* ty=Tensor[(32, 256, 768), float16] */;
    %307 = reshape(%306, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    %308 = transpose(%307, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %309 = broadcast_to(%308, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%309, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(384, 256, 64), float16] */;
  %866 = fn (%p0275: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %864 = %p0275.1 /* ty=Tensor[(32, 256, 768), float16] */;
    %865 = reshape(%864, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%865, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %867 = %866(%860) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %868 = fn (%p0274: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 64, 256), float16] {
    %862 = transpose(%p0274, axes=[0, 1, 3, 2]) /* ty=Tensor[(32, 12, 64, 256), float16] */;
    %863 = broadcast_to(%862, shape=[32, 12, 64, 256], dtype="float16") /* ty=Tensor[(32, 12, 64, 256), float16] */;
    reshape(%863, newshape=[-1, 64, 256]) /* ty=Tensor[(384, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 64, 256), float16] */;
  %869 = %861(%860) /* ty=Tensor[(384, 256, 64), float16] */;
  %870 = %868(%867) /* ty=Tensor[(384, 64, 256), float16] */;
  %871 = fn (%p0130: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, %p183: Tensor[(384, 64, 256), float16] /* ty=Tensor[(384, 64, 256), float16] */, Primitive=1) -> Tensor[(384, 256, 256), float16] {
    nn.batch_matmul(%p0130, %p183, out_dtype="float16") /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16], Tensor[(384, 64, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %872 = %871(%869, %870) /* ty=Tensor[(384, 256, 256), float16] */;
  %873 = fn (%p0129: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p182: float16 /* ty=float16 */, %p247: Tensor[(1, 1, 256, 256), bool] /* ty=Tensor[(1, 1, 256, 256), bool] */, %p320: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %303 = reshape(%p0129, newshape=[32, 12, 256, 256]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %304 = squeeze(%303, axis=[]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %305 = divide(%304, %p182) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    where(%p247, %305, %p320) /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], float16, Tensor[(1, 1, 256, 256), bool], float16) -> Tensor[(32, 12, 256, 256), float16] */;
  %874 = %873(%872, 8f16 /* ty=float16 */, meta[relay.Constant][71] /* ty=Tensor[(1, 1, 256, 256), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %875 = fn (%p0128: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %302 = nn.fast_softmax(%p0128) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    broadcast_to(%302, shape=[32, 12, 256, 256], dtype="float16") /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(32, 12, 256, 256), float16] */;
  %876 = %875(%874) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %877 = fn (%p0127: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 256, 256), float16] {
    reshape(%p0127, newshape=[-1, 256, 256]) /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %881 = fn (%p0277: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %879 = %p0277.2 /* ty=Tensor[(32, 256, 768), float16] */;
    %880 = reshape(%879, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%880, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %882 = %881(%860) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %883 = fn (%p0276: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %878 = broadcast_to(%p0276, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%878, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %884 = %877(%876) /* ty=Tensor[(384, 256, 256), float16] */;
  %885 = %883(%882) /* ty=Tensor[(384, 256, 64), float16] */;
  %886 = fn (%p0126: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p181: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    nn.batch_matmul(%p0126, %p181, out_dtype="float16") /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], Tensor[(384, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %887 = %886(%884, %885) /* ty=Tensor[(384, 256, 64), float16] */;
  %888 = fn (%p0125: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %299 = reshape(%p0125, newshape=[32, 12, 256, 64]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %300 = squeeze(%299, axis=[]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %301 = transpose(%300, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    reshape(%301, newshape=[8192, 768]) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16]) -> Tensor[(8192, 768), float16] */;
  %889 = %888(%887) /* ty=Tensor[(8192, 768), float16] */;
  %890 = fn (%p0124: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p180: Tensor[(768, 768), float16] /* ty=Tensor[(768, 768), float16] */, %p246: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %298 = nn.dense(%p0124, %p180, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%298, %p246) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(768, 768), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %891 = %890(%889, meta[relay.Constant][72] /* ty=Tensor[(768, 768), float16] */, meta[relay.Constant][73] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %892 = fn (%p0123: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p179: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %297 = reshape(%p0123, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%297, %p179) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %893 = %892(%891, %848) /* ty=Tensor[(32, 256, 768), float16] */;
  %894 = fn (%p0122: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0122, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %895 = %894(%893) /* ty=Tensor[(32, 256, 768), float32] */;
  %896 = fn (%p0278: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0278, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %897 = %896(%895) /* ty=Tensor[(32, 256, 1), float32] */;
  %898 = fn (%p0279: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1158: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0279, %p1158, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %899 = %898(%895, %897) /* ty=Tensor[(32, 256, 1), float32] */;
  %900 = fn (%p0121: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p178: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p245: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p319: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p413: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %290 = add(%p245, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %291 = subtract(%p0121, %p178) /* ty=Tensor[(32, 256, 768), float32] */;
    %292 = rsqrt(%290) /* ty=Tensor[(32, 256, 1), float32] */;
    %293 = multiply(%291, %292) /* ty=Tensor[(32, 256, 768), float32] */;
    %294 = multiply(%293, %p319) /* ty=Tensor[(32, 256, 768), float32] */;
    %295 = add(%294, %p413) /* ty=Tensor[(32, 256, 768), float32] */;
    %296 = reshape(%295, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%296, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %901 = %900(%895, %897, %899, meta[relay.Constant][74] /* ty=Tensor[(768), float32] */, meta[relay.Constant][75] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %902 = fn (%p0120: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p177: Tensor[(3072, 768), float16] /* ty=Tensor[(3072, 768), float16] */, %p244: Tensor[(1, 3072), float16] /* ty=Tensor[(1, 3072), float16] */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %289 = nn.dense(%p0120, %p177, units=3072, out_dtype="float16") /* ty=Tensor[(8192, 3072), float16] */;
    add(%289, %p244) /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(3072, 768), float16], Tensor[(1, 3072), float16]) -> Tensor[(8192, 3072), float16] */;
  %903 = %902(%901, meta[relay.Constant][76] /* ty=Tensor[(3072, 768), float16] */, meta[relay.Constant][77] /* ty=Tensor[(1, 3072), float16] */) /* ty=Tensor[(8192, 3072), float16] */;
  %904 = fn (%p0119: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p176: float16 /* ty=float16 */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %277 = reshape(%p0119, newshape=[32, 256, 3072]) /* ty=Tensor[(32, 256, 3072), float16] */;
    %278 = multiply(%277, %p176) /* ty=Tensor[(32, 256, 3072), float16] */;
    %279 = cast(%277, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %280 = power(%279, 3f /* ty=float32 span=aten::pow_11:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %281 = multiply(%280, 0.044715f /* ty=float32 span=aten::mul_21:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %282 = add(%279, %281) /* ty=Tensor[(32, 256, 3072), float32] */;
    %283 = multiply(%282, 0.797885f /* ty=float32 span=aten::mul_22:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %284 = fast_tanh(%283) /* ty=Tensor[(32, 256, 3072), float32] */;
    %285 = cast(%278, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %286 = add(%284, 1f /* ty=float32 span=aten::add_24:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %287 = multiply(%285, %286) /* ty=Tensor[(32, 256, 3072), float32] */;
    %288 = reshape(%287, newshape=[-1, 3072]) /* ty=Tensor[(8192, 3072), float32] */;
    cast(%288, dtype="float16") /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], float16) -> Tensor[(8192, 3072), float16] */;
  %905 = %904(%903, 0.5f16 /* ty=float16 */) /* ty=Tensor[(8192, 3072), float16] */;
  %906 = fn (%p0118: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p175: Tensor[(768, 3072), float16] /* ty=Tensor[(768, 3072), float16] */, %p243: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %276 = nn.dense(%p0118, %p175, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%276, %p243) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], Tensor[(768, 3072), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %907 = %906(%905, meta[relay.Constant][78] /* ty=Tensor[(768, 3072), float16] */, meta[relay.Constant][79] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %908 = fn (%p0117: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p174: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %275 = reshape(%p0117, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%p174, %275) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %909 = %908(%907, %893) /* ty=Tensor[(32, 256, 768), float16] */;
  %910 = fn (%p0116: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0116, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %911 = %910(%909) /* ty=Tensor[(32, 256, 768), float32] */;
  %912 = fn (%p0280: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0280, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %913 = %912(%911) /* ty=Tensor[(32, 256, 1), float32] */;
  %914 = fn (%p0281: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1159: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0281, %p1159, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %915 = %914(%911, %913) /* ty=Tensor[(32, 256, 1), float32] */;
  %916 = fn (%p0115: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p173: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p242: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p318: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p412: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %268 = add(%p242, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %269 = subtract(%p0115, %p173) /* ty=Tensor[(32, 256, 768), float32] */;
    %270 = rsqrt(%268) /* ty=Tensor[(32, 256, 1), float32] */;
    %271 = multiply(%269, %270) /* ty=Tensor[(32, 256, 768), float32] */;
    %272 = multiply(%271, %p318) /* ty=Tensor[(32, 256, 768), float32] */;
    %273 = add(%272, %p412) /* ty=Tensor[(32, 256, 768), float32] */;
    %274 = reshape(%273, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%274, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %917 = %916(%911, %913, %915, meta[relay.Constant][80] /* ty=Tensor[(768), float32] */, meta[relay.Constant][81] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %918 = fn (%p0114: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p172: Tensor[(2304, 768), float16] /* ty=Tensor[(2304, 768), float16] */, %p241: Tensor[(1, 2304), float16] /* ty=Tensor[(1, 2304), float16] */, Primitive=1) -> Tensor[(8192, 2304), float16] {
    %267 = nn.dense(%p0114, %p172, units=2304, out_dtype="float16") /* ty=Tensor[(8192, 2304), float16] */;
    add(%267, %p241) /* ty=Tensor[(8192, 2304), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(2304, 768), float16], Tensor[(1, 2304), float16]) -> Tensor[(8192, 2304), float16] */;
  %919 = %918(%917, meta[relay.Constant][82] /* ty=Tensor[(2304, 768), float16] */, meta[relay.Constant][83] /* ty=Tensor[(1, 2304), float16] */) /* ty=Tensor[(8192, 2304), float16] */;
  %920 = fn (%p0113: Tensor[(8192, 2304), float16] /* ty=Tensor[(8192, 2304), float16] */, Primitive=1) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) {
    %266 = reshape(%p0113, newshape=[32, 256, 2304]) /* ty=Tensor[(32, 256, 2304), float16] */;
    split(%266, indices_or_sections=[768, 1536], axis=2) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */
  } /* ty=fn (Tensor[(8192, 2304), float16]) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %921 = %920(%919) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %922 = fn (%p0112: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %262 = %p0112.0 /* ty=Tensor[(32, 256, 768), float16] */;
    %263 = reshape(%262, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    %264 = transpose(%263, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %265 = broadcast_to(%264, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%265, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(384, 256, 64), float16] */;
  %927 = fn (%p0283: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %925 = %p0283.1 /* ty=Tensor[(32, 256, 768), float16] */;
    %926 = reshape(%925, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%926, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %928 = %927(%921) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %929 = fn (%p0282: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 64, 256), float16] {
    %923 = transpose(%p0282, axes=[0, 1, 3, 2]) /* ty=Tensor[(32, 12, 64, 256), float16] */;
    %924 = broadcast_to(%923, shape=[32, 12, 64, 256], dtype="float16") /* ty=Tensor[(32, 12, 64, 256), float16] */;
    reshape(%924, newshape=[-1, 64, 256]) /* ty=Tensor[(384, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 64, 256), float16] */;
  %930 = %922(%921) /* ty=Tensor[(384, 256, 64), float16] */;
  %931 = %929(%928) /* ty=Tensor[(384, 64, 256), float16] */;
  %932 = fn (%p0111: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, %p171: Tensor[(384, 64, 256), float16] /* ty=Tensor[(384, 64, 256), float16] */, Primitive=1) -> Tensor[(384, 256, 256), float16] {
    nn.batch_matmul(%p0111, %p171, out_dtype="float16") /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16], Tensor[(384, 64, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %933 = %932(%930, %931) /* ty=Tensor[(384, 256, 256), float16] */;
  %934 = fn (%p0110: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p170: float16 /* ty=float16 */, %p240: Tensor[(1, 1, 256, 256), bool] /* ty=Tensor[(1, 1, 256, 256), bool] */, %p317: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %259 = reshape(%p0110, newshape=[32, 12, 256, 256]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %260 = squeeze(%259, axis=[]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %261 = divide(%260, %p170) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    where(%p240, %261, %p317) /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], float16, Tensor[(1, 1, 256, 256), bool], float16) -> Tensor[(32, 12, 256, 256), float16] */;
  %935 = %934(%933, 8f16 /* ty=float16 */, meta[relay.Constant][84] /* ty=Tensor[(1, 1, 256, 256), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %936 = fn (%p0109: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %258 = nn.fast_softmax(%p0109) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    broadcast_to(%258, shape=[32, 12, 256, 256], dtype="float16") /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(32, 12, 256, 256), float16] */;
  %937 = %936(%935) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %938 = fn (%p0108: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 256, 256), float16] {
    reshape(%p0108, newshape=[-1, 256, 256]) /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %942 = fn (%p0285: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %940 = %p0285.2 /* ty=Tensor[(32, 256, 768), float16] */;
    %941 = reshape(%940, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%941, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %943 = %942(%921) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %944 = fn (%p0284: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %939 = broadcast_to(%p0284, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%939, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %945 = %938(%937) /* ty=Tensor[(384, 256, 256), float16] */;
  %946 = %944(%943) /* ty=Tensor[(384, 256, 64), float16] */;
  %947 = fn (%p0107: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p169: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    nn.batch_matmul(%p0107, %p169, out_dtype="float16") /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], Tensor[(384, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %948 = %947(%945, %946) /* ty=Tensor[(384, 256, 64), float16] */;
  %949 = fn (%p0106: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %255 = reshape(%p0106, newshape=[32, 12, 256, 64]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %256 = squeeze(%255, axis=[]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %257 = transpose(%256, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    reshape(%257, newshape=[8192, 768]) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16]) -> Tensor[(8192, 768), float16] */;
  %950 = %949(%948) /* ty=Tensor[(8192, 768), float16] */;
  %951 = fn (%p0105: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p168: Tensor[(768, 768), float16] /* ty=Tensor[(768, 768), float16] */, %p239: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %254 = nn.dense(%p0105, %p168, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%254, %p239) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(768, 768), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %952 = %951(%950, meta[relay.Constant][85] /* ty=Tensor[(768, 768), float16] */, meta[relay.Constant][86] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %953 = fn (%p0104: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p167: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %253 = reshape(%p0104, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%253, %p167) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %954 = %953(%952, %909) /* ty=Tensor[(32, 256, 768), float16] */;
  %955 = fn (%p0103: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p0103, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %956 = %955(%954) /* ty=Tensor[(32, 256, 768), float32] */;
  %957 = fn (%p0286: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0286, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %958 = %957(%956) /* ty=Tensor[(32, 256, 1), float32] */;
  %959 = fn (%p0287: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1160: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0287, %p1160, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %960 = %959(%956, %958) /* ty=Tensor[(32, 256, 1), float32] */;
  %961 = fn (%p0102: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p166: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p238: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p316: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p411: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %246 = add(%p238, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %247 = subtract(%p0102, %p166) /* ty=Tensor[(32, 256, 768), float32] */;
    %248 = rsqrt(%246) /* ty=Tensor[(32, 256, 1), float32] */;
    %249 = multiply(%247, %248) /* ty=Tensor[(32, 256, 768), float32] */;
    %250 = multiply(%249, %p316) /* ty=Tensor[(32, 256, 768), float32] */;
    %251 = add(%250, %p411) /* ty=Tensor[(32, 256, 768), float32] */;
    %252 = reshape(%251, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%252, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %962 = %961(%956, %958, %960, meta[relay.Constant][87] /* ty=Tensor[(768), float32] */, meta[relay.Constant][88] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %963 = fn (%p0101: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p165: Tensor[(3072, 768), float16] /* ty=Tensor[(3072, 768), float16] */, %p237: Tensor[(1, 3072), float16] /* ty=Tensor[(1, 3072), float16] */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %245 = nn.dense(%p0101, %p165, units=3072, out_dtype="float16") /* ty=Tensor[(8192, 3072), float16] */;
    add(%245, %p237) /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(3072, 768), float16], Tensor[(1, 3072), float16]) -> Tensor[(8192, 3072), float16] */;
  %964 = %963(%962, meta[relay.Constant][89] /* ty=Tensor[(3072, 768), float16] */, meta[relay.Constant][90] /* ty=Tensor[(1, 3072), float16] */) /* ty=Tensor[(8192, 3072), float16] */;
  %965 = fn (%p0100: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p164: float16 /* ty=float16 */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %233 = reshape(%p0100, newshape=[32, 256, 3072]) /* ty=Tensor[(32, 256, 3072), float16] */;
    %234 = multiply(%233, %p164) /* ty=Tensor[(32, 256, 3072), float16] */;
    %235 = cast(%233, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %236 = power(%235, 3f /* ty=float32 span=aten::pow_13:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %237 = multiply(%236, 0.044715f /* ty=float32 span=aten::mul_25:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %238 = add(%235, %237) /* ty=Tensor[(32, 256, 3072), float32] */;
    %239 = multiply(%238, 0.797885f /* ty=float32 span=aten::mul_26:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %240 = fast_tanh(%239) /* ty=Tensor[(32, 256, 3072), float32] */;
    %241 = cast(%234, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %242 = add(%240, 1f /* ty=float32 span=aten::add_28:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %243 = multiply(%241, %242) /* ty=Tensor[(32, 256, 3072), float32] */;
    %244 = reshape(%243, newshape=[-1, 3072]) /* ty=Tensor[(8192, 3072), float32] */;
    cast(%244, dtype="float16") /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], float16) -> Tensor[(8192, 3072), float16] */;
  %966 = %965(%964, 0.5f16 /* ty=float16 */) /* ty=Tensor[(8192, 3072), float16] */;
  %967 = fn (%p099: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p163: Tensor[(768, 3072), float16] /* ty=Tensor[(768, 3072), float16] */, %p236: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %232 = nn.dense(%p099, %p163, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%232, %p236) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], Tensor[(768, 3072), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %968 = %967(%966, meta[relay.Constant][91] /* ty=Tensor[(768, 3072), float16] */, meta[relay.Constant][92] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %969 = fn (%p098: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p162: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %231 = reshape(%p098, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%p162, %231) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %970 = %969(%968, %954) /* ty=Tensor[(32, 256, 768), float16] */;
  %971 = fn (%p097: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p097, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %972 = %971(%970) /* ty=Tensor[(32, 256, 768), float32] */;
  %973 = fn (%p0288: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0288, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %974 = %973(%972) /* ty=Tensor[(32, 256, 1), float32] */;
  %975 = fn (%p0289: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1161: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0289, %p1161, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %976 = %975(%972, %974) /* ty=Tensor[(32, 256, 1), float32] */;
  %977 = fn (%p096: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p161: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p235: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p315: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p410: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %224 = add(%p235, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %225 = subtract(%p096, %p161) /* ty=Tensor[(32, 256, 768), float32] */;
    %226 = rsqrt(%224) /* ty=Tensor[(32, 256, 1), float32] */;
    %227 = multiply(%225, %226) /* ty=Tensor[(32, 256, 768), float32] */;
    %228 = multiply(%227, %p315) /* ty=Tensor[(32, 256, 768), float32] */;
    %229 = add(%228, %p410) /* ty=Tensor[(32, 256, 768), float32] */;
    %230 = reshape(%229, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%230, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %978 = %977(%972, %974, %976, meta[relay.Constant][93] /* ty=Tensor[(768), float32] */, meta[relay.Constant][94] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %979 = fn (%p095: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p160: Tensor[(2304, 768), float16] /* ty=Tensor[(2304, 768), float16] */, %p234: Tensor[(1, 2304), float16] /* ty=Tensor[(1, 2304), float16] */, Primitive=1) -> Tensor[(8192, 2304), float16] {
    %223 = nn.dense(%p095, %p160, units=2304, out_dtype="float16") /* ty=Tensor[(8192, 2304), float16] */;
    add(%223, %p234) /* ty=Tensor[(8192, 2304), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(2304, 768), float16], Tensor[(1, 2304), float16]) -> Tensor[(8192, 2304), float16] */;
  %980 = %979(%978, meta[relay.Constant][95] /* ty=Tensor[(2304, 768), float16] */, meta[relay.Constant][96] /* ty=Tensor[(1, 2304), float16] */) /* ty=Tensor[(8192, 2304), float16] */;
  %981 = fn (%p094: Tensor[(8192, 2304), float16] /* ty=Tensor[(8192, 2304), float16] */, Primitive=1) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) {
    %222 = reshape(%p094, newshape=[32, 256, 2304]) /* ty=Tensor[(32, 256, 2304), float16] */;
    split(%222, indices_or_sections=[768, 1536], axis=2) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */
  } /* ty=fn (Tensor[(8192, 2304), float16]) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %982 = %981(%980) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %983 = fn (%p093: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %218 = %p093.0 /* ty=Tensor[(32, 256, 768), float16] */;
    %219 = reshape(%218, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    %220 = transpose(%219, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %221 = broadcast_to(%220, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%221, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(384, 256, 64), float16] */;
  %988 = fn (%p0291: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %986 = %p0291.1 /* ty=Tensor[(32, 256, 768), float16] */;
    %987 = reshape(%986, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%987, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %989 = %988(%982) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %990 = fn (%p0290: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 64, 256), float16] {
    %984 = transpose(%p0290, axes=[0, 1, 3, 2]) /* ty=Tensor[(32, 12, 64, 256), float16] */;
    %985 = broadcast_to(%984, shape=[32, 12, 64, 256], dtype="float16") /* ty=Tensor[(32, 12, 64, 256), float16] */;
    reshape(%985, newshape=[-1, 64, 256]) /* ty=Tensor[(384, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 64, 256), float16] */;
  %991 = %983(%982) /* ty=Tensor[(384, 256, 64), float16] */;
  %992 = %990(%989) /* ty=Tensor[(384, 64, 256), float16] */;
  %993 = fn (%p092: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, %p159: Tensor[(384, 64, 256), float16] /* ty=Tensor[(384, 64, 256), float16] */, Primitive=1) -> Tensor[(384, 256, 256), float16] {
    nn.batch_matmul(%p092, %p159, out_dtype="float16") /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16], Tensor[(384, 64, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %994 = %993(%991, %992) /* ty=Tensor[(384, 256, 256), float16] */;
  %995 = fn (%p091: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p158: float16 /* ty=float16 */, %p233: Tensor[(1, 1, 256, 256), bool] /* ty=Tensor[(1, 1, 256, 256), bool] */, %p314: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %215 = reshape(%p091, newshape=[32, 12, 256, 256]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %216 = squeeze(%215, axis=[]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %217 = divide(%216, %p158) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    where(%p233, %217, %p314) /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], float16, Tensor[(1, 1, 256, 256), bool], float16) -> Tensor[(32, 12, 256, 256), float16] */;
  %996 = %995(%994, 8f16 /* ty=float16 */, meta[relay.Constant][97] /* ty=Tensor[(1, 1, 256, 256), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %997 = fn (%p090: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %214 = nn.fast_softmax(%p090) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    broadcast_to(%214, shape=[32, 12, 256, 256], dtype="float16") /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(32, 12, 256, 256), float16] */;
  %998 = %997(%996) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %999 = fn (%p089: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 256, 256), float16] {
    reshape(%p089, newshape=[-1, 256, 256]) /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %1003 = fn (%p0293: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %1001 = %p0293.2 /* ty=Tensor[(32, 256, 768), float16] */;
    %1002 = reshape(%1001, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%1002, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %1004 = %1003(%982) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %1005 = fn (%p0292: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %1000 = broadcast_to(%p0292, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%1000, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %1006 = %999(%998) /* ty=Tensor[(384, 256, 256), float16] */;
  %1007 = %1005(%1004) /* ty=Tensor[(384, 256, 64), float16] */;
  %1008 = fn (%p088: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p157: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    nn.batch_matmul(%p088, %p157, out_dtype="float16") /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], Tensor[(384, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %1009 = %1008(%1006, %1007) /* ty=Tensor[(384, 256, 64), float16] */;
  %1010 = fn (%p087: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %211 = reshape(%p087, newshape=[32, 12, 256, 64]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %212 = squeeze(%211, axis=[]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %213 = transpose(%212, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    reshape(%213, newshape=[8192, 768]) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16]) -> Tensor[(8192, 768), float16] */;
  %1011 = %1010(%1009) /* ty=Tensor[(8192, 768), float16] */;
  %1012 = fn (%p086: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p156: Tensor[(768, 768), float16] /* ty=Tensor[(768, 768), float16] */, %p232: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %210 = nn.dense(%p086, %p156, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%210, %p232) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(768, 768), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %1013 = %1012(%1011, meta[relay.Constant][98] /* ty=Tensor[(768, 768), float16] */, meta[relay.Constant][99] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %1014 = fn (%p085: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p155: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %209 = reshape(%p085, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%209, %p155) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %1015 = %1014(%1013, %970) /* ty=Tensor[(32, 256, 768), float16] */;
  %1016 = fn (%p084: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p084, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %1017 = %1016(%1015) /* ty=Tensor[(32, 256, 768), float32] */;
  %1018 = fn (%p0294: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0294, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1019 = %1018(%1017) /* ty=Tensor[(32, 256, 1), float32] */;
  %1020 = fn (%p0295: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1162: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0295, %p1162, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1021 = %1020(%1017, %1019) /* ty=Tensor[(32, 256, 1), float32] */;
  %1022 = fn (%p083: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p154: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p231: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p313: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p49: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %202 = add(%p231, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %203 = subtract(%p083, %p154) /* ty=Tensor[(32, 256, 768), float32] */;
    %204 = rsqrt(%202) /* ty=Tensor[(32, 256, 1), float32] */;
    %205 = multiply(%203, %204) /* ty=Tensor[(32, 256, 768), float32] */;
    %206 = multiply(%205, %p313) /* ty=Tensor[(32, 256, 768), float32] */;
    %207 = add(%206, %p49) /* ty=Tensor[(32, 256, 768), float32] */;
    %208 = reshape(%207, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%208, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %1023 = %1022(%1017, %1019, %1021, meta[relay.Constant][100] /* ty=Tensor[(768), float32] */, meta[relay.Constant][101] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %1024 = fn (%p082: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p153: Tensor[(3072, 768), float16] /* ty=Tensor[(3072, 768), float16] */, %p230: Tensor[(1, 3072), float16] /* ty=Tensor[(1, 3072), float16] */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %201 = nn.dense(%p082, %p153, units=3072, out_dtype="float16") /* ty=Tensor[(8192, 3072), float16] */;
    add(%201, %p230) /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(3072, 768), float16], Tensor[(1, 3072), float16]) -> Tensor[(8192, 3072), float16] */;
  %1025 = %1024(%1023, meta[relay.Constant][102] /* ty=Tensor[(3072, 768), float16] */, meta[relay.Constant][103] /* ty=Tensor[(1, 3072), float16] */) /* ty=Tensor[(8192, 3072), float16] */;
  %1026 = fn (%p081: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p152: float16 /* ty=float16 */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %189 = reshape(%p081, newshape=[32, 256, 3072]) /* ty=Tensor[(32, 256, 3072), float16] */;
    %190 = multiply(%189, %p152) /* ty=Tensor[(32, 256, 3072), float16] */;
    %191 = cast(%189, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %192 = power(%191, 3f /* ty=float32 span=aten::pow_15:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %193 = multiply(%192, 0.044715f /* ty=float32 span=aten::mul_29:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %194 = add(%191, %193) /* ty=Tensor[(32, 256, 3072), float32] */;
    %195 = multiply(%194, 0.797885f /* ty=float32 span=aten::mul_30:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %196 = fast_tanh(%195) /* ty=Tensor[(32, 256, 3072), float32] */;
    %197 = cast(%190, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %198 = add(%196, 1f /* ty=float32 span=aten::add_32:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %199 = multiply(%197, %198) /* ty=Tensor[(32, 256, 3072), float32] */;
    %200 = reshape(%199, newshape=[-1, 3072]) /* ty=Tensor[(8192, 3072), float32] */;
    cast(%200, dtype="float16") /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], float16) -> Tensor[(8192, 3072), float16] */;
  %1027 = %1026(%1025, 0.5f16 /* ty=float16 */) /* ty=Tensor[(8192, 3072), float16] */;
  %1028 = fn (%p080: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p151: Tensor[(768, 3072), float16] /* ty=Tensor[(768, 3072), float16] */, %p229: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %188 = nn.dense(%p080, %p151, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%188, %p229) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], Tensor[(768, 3072), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %1029 = %1028(%1027, meta[relay.Constant][104] /* ty=Tensor[(768, 3072), float16] */, meta[relay.Constant][105] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %1030 = fn (%p079: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p150: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %187 = reshape(%p079, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%p150, %187) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %1031 = %1030(%1029, %1015) /* ty=Tensor[(32, 256, 768), float16] */;
  %1032 = fn (%p078: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p078, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %1033 = %1032(%1031) /* ty=Tensor[(32, 256, 768), float32] */;
  %1034 = fn (%p0296: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0296, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1035 = %1034(%1033) /* ty=Tensor[(32, 256, 1), float32] */;
  %1036 = fn (%p0297: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1163: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0297, %p1163, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1037 = %1036(%1033, %1035) /* ty=Tensor[(32, 256, 1), float32] */;
  %1038 = fn (%p077: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p149: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p228: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p312: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p48: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %180 = add(%p228, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %181 = subtract(%p077, %p149) /* ty=Tensor[(32, 256, 768), float32] */;
    %182 = rsqrt(%180) /* ty=Tensor[(32, 256, 1), float32] */;
    %183 = multiply(%181, %182) /* ty=Tensor[(32, 256, 768), float32] */;
    %184 = multiply(%183, %p312) /* ty=Tensor[(32, 256, 768), float32] */;
    %185 = add(%184, %p48) /* ty=Tensor[(32, 256, 768), float32] */;
    %186 = reshape(%185, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%186, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %1039 = %1038(%1033, %1035, %1037, meta[relay.Constant][106] /* ty=Tensor[(768), float32] */, meta[relay.Constant][107] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %1040 = fn (%p076: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p148: Tensor[(2304, 768), float16] /* ty=Tensor[(2304, 768), float16] */, %p227: Tensor[(1, 2304), float16] /* ty=Tensor[(1, 2304), float16] */, Primitive=1) -> Tensor[(8192, 2304), float16] {
    %179 = nn.dense(%p076, %p148, units=2304, out_dtype="float16") /* ty=Tensor[(8192, 2304), float16] */;
    add(%179, %p227) /* ty=Tensor[(8192, 2304), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(2304, 768), float16], Tensor[(1, 2304), float16]) -> Tensor[(8192, 2304), float16] */;
  %1041 = %1040(%1039, meta[relay.Constant][108] /* ty=Tensor[(2304, 768), float16] */, meta[relay.Constant][109] /* ty=Tensor[(1, 2304), float16] */) /* ty=Tensor[(8192, 2304), float16] */;
  %1042 = fn (%p075: Tensor[(8192, 2304), float16] /* ty=Tensor[(8192, 2304), float16] */, Primitive=1) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) {
    %178 = reshape(%p075, newshape=[32, 256, 2304]) /* ty=Tensor[(32, 256, 2304), float16] */;
    split(%178, indices_or_sections=[768, 1536], axis=2) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */
  } /* ty=fn (Tensor[(8192, 2304), float16]) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %1043 = %1042(%1041) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %1044 = fn (%p074: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %174 = %p074.0 /* ty=Tensor[(32, 256, 768), float16] */;
    %175 = reshape(%174, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    %176 = transpose(%175, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %177 = broadcast_to(%176, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%177, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(384, 256, 64), float16] */;
  %1049 = fn (%p0299: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %1047 = %p0299.1 /* ty=Tensor[(32, 256, 768), float16] */;
    %1048 = reshape(%1047, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%1048, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %1050 = %1049(%1043) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %1051 = fn (%p0298: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 64, 256), float16] {
    %1045 = transpose(%p0298, axes=[0, 1, 3, 2]) /* ty=Tensor[(32, 12, 64, 256), float16] */;
    %1046 = broadcast_to(%1045, shape=[32, 12, 64, 256], dtype="float16") /* ty=Tensor[(32, 12, 64, 256), float16] */;
    reshape(%1046, newshape=[-1, 64, 256]) /* ty=Tensor[(384, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 64, 256), float16] */;
  %1052 = %1044(%1043) /* ty=Tensor[(384, 256, 64), float16] */;
  %1053 = %1051(%1050) /* ty=Tensor[(384, 64, 256), float16] */;
  %1054 = fn (%p073: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, %p147: Tensor[(384, 64, 256), float16] /* ty=Tensor[(384, 64, 256), float16] */, Primitive=1) -> Tensor[(384, 256, 256), float16] {
    nn.batch_matmul(%p073, %p147, out_dtype="float16") /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16], Tensor[(384, 64, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %1055 = %1054(%1052, %1053) /* ty=Tensor[(384, 256, 256), float16] */;
  %1056 = fn (%p072: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p146: float16 /* ty=float16 */, %p226: Tensor[(1, 1, 256, 256), bool] /* ty=Tensor[(1, 1, 256, 256), bool] */, %p311: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %171 = reshape(%p072, newshape=[32, 12, 256, 256]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %172 = squeeze(%171, axis=[]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %173 = divide(%172, %p146) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    where(%p226, %173, %p311) /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], float16, Tensor[(1, 1, 256, 256), bool], float16) -> Tensor[(32, 12, 256, 256), float16] */;
  %1057 = %1056(%1055, 8f16 /* ty=float16 */, meta[relay.Constant][110] /* ty=Tensor[(1, 1, 256, 256), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %1058 = fn (%p071: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %170 = nn.fast_softmax(%p071) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    broadcast_to(%170, shape=[32, 12, 256, 256], dtype="float16") /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(32, 12, 256, 256), float16] */;
  %1059 = %1058(%1057) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %1060 = fn (%p070: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 256, 256), float16] {
    reshape(%p070, newshape=[-1, 256, 256]) /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %1064 = fn (%p0301: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %1062 = %p0301.2 /* ty=Tensor[(32, 256, 768), float16] */;
    %1063 = reshape(%1062, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%1063, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %1065 = %1064(%1043) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %1066 = fn (%p0300: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %1061 = broadcast_to(%p0300, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%1061, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %1067 = %1060(%1059) /* ty=Tensor[(384, 256, 256), float16] */;
  %1068 = %1066(%1065) /* ty=Tensor[(384, 256, 64), float16] */;
  %1069 = fn (%p069: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p145: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    nn.batch_matmul(%p069, %p145, out_dtype="float16") /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], Tensor[(384, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %1070 = %1069(%1067, %1068) /* ty=Tensor[(384, 256, 64), float16] */;
  %1071 = fn (%p068: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %167 = reshape(%p068, newshape=[32, 12, 256, 64]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %168 = squeeze(%167, axis=[]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %169 = transpose(%168, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    reshape(%169, newshape=[8192, 768]) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16]) -> Tensor[(8192, 768), float16] */;
  %1072 = %1071(%1070) /* ty=Tensor[(8192, 768), float16] */;
  %1073 = fn (%p067: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p144: Tensor[(768, 768), float16] /* ty=Tensor[(768, 768), float16] */, %p225: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %166 = nn.dense(%p067, %p144, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%166, %p225) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(768, 768), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %1074 = %1073(%1072, meta[relay.Constant][111] /* ty=Tensor[(768, 768), float16] */, meta[relay.Constant][112] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %1075 = fn (%p066: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p143: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %165 = reshape(%p066, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%165, %p143) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %1076 = %1075(%1074, %1031) /* ty=Tensor[(32, 256, 768), float16] */;
  %1077 = fn (%p065: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p065, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %1078 = %1077(%1076) /* ty=Tensor[(32, 256, 768), float32] */;
  %1079 = fn (%p0302: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0302, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1080 = %1079(%1078) /* ty=Tensor[(32, 256, 1), float32] */;
  %1081 = fn (%p0303: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1164: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0303, %p1164, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1082 = %1081(%1078, %1080) /* ty=Tensor[(32, 256, 1), float32] */;
  %1083 = fn (%p064: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p142: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p224: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p310: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p47: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %158 = add(%p224, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %159 = subtract(%p064, %p142) /* ty=Tensor[(32, 256, 768), float32] */;
    %160 = rsqrt(%158) /* ty=Tensor[(32, 256, 1), float32] */;
    %161 = multiply(%159, %160) /* ty=Tensor[(32, 256, 768), float32] */;
    %162 = multiply(%161, %p310) /* ty=Tensor[(32, 256, 768), float32] */;
    %163 = add(%162, %p47) /* ty=Tensor[(32, 256, 768), float32] */;
    %164 = reshape(%163, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%164, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %1084 = %1083(%1078, %1080, %1082, meta[relay.Constant][113] /* ty=Tensor[(768), float32] */, meta[relay.Constant][114] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %1085 = fn (%p063: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p141: Tensor[(3072, 768), float16] /* ty=Tensor[(3072, 768), float16] */, %p223: Tensor[(1, 3072), float16] /* ty=Tensor[(1, 3072), float16] */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %157 = nn.dense(%p063, %p141, units=3072, out_dtype="float16") /* ty=Tensor[(8192, 3072), float16] */;
    add(%157, %p223) /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(3072, 768), float16], Tensor[(1, 3072), float16]) -> Tensor[(8192, 3072), float16] */;
  %1086 = %1085(%1084, meta[relay.Constant][115] /* ty=Tensor[(3072, 768), float16] */, meta[relay.Constant][116] /* ty=Tensor[(1, 3072), float16] */) /* ty=Tensor[(8192, 3072), float16] */;
  %1087 = fn (%p062: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p140: float16 /* ty=float16 */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %145 = reshape(%p062, newshape=[32, 256, 3072]) /* ty=Tensor[(32, 256, 3072), float16] */;
    %146 = multiply(%145, %p140) /* ty=Tensor[(32, 256, 3072), float16] */;
    %147 = cast(%145, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %148 = power(%147, 3f /* ty=float32 span=aten::pow_17:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %149 = multiply(%148, 0.044715f /* ty=float32 span=aten::mul_33:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %150 = add(%147, %149) /* ty=Tensor[(32, 256, 3072), float32] */;
    %151 = multiply(%150, 0.797885f /* ty=float32 span=aten::mul_34:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %152 = fast_tanh(%151) /* ty=Tensor[(32, 256, 3072), float32] */;
    %153 = cast(%146, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %154 = add(%152, 1f /* ty=float32 span=aten::add_36:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %155 = multiply(%153, %154) /* ty=Tensor[(32, 256, 3072), float32] */;
    %156 = reshape(%155, newshape=[-1, 3072]) /* ty=Tensor[(8192, 3072), float32] */;
    cast(%156, dtype="float16") /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], float16) -> Tensor[(8192, 3072), float16] */;
  %1088 = %1087(%1086, 0.5f16 /* ty=float16 */) /* ty=Tensor[(8192, 3072), float16] */;
  %1089 = fn (%p061: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p139: Tensor[(768, 3072), float16] /* ty=Tensor[(768, 3072), float16] */, %p222: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %144 = nn.dense(%p061, %p139, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%144, %p222) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], Tensor[(768, 3072), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %1090 = %1089(%1088, meta[relay.Constant][117] /* ty=Tensor[(768, 3072), float16] */, meta[relay.Constant][118] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %1091 = fn (%p060: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p138: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %143 = reshape(%p060, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%p138, %143) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %1092 = %1091(%1090, %1076) /* ty=Tensor[(32, 256, 768), float16] */;
  %1093 = fn (%p059: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p059, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %1094 = %1093(%1092) /* ty=Tensor[(32, 256, 768), float32] */;
  %1095 = fn (%p0304: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0304, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1096 = %1095(%1094) /* ty=Tensor[(32, 256, 1), float32] */;
  %1097 = fn (%p0305: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1165: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0305, %p1165, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1098 = %1097(%1094, %1096) /* ty=Tensor[(32, 256, 1), float32] */;
  %1099 = fn (%p058: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p137: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p221: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p39: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p46: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %136 = add(%p221, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %137 = subtract(%p058, %p137) /* ty=Tensor[(32, 256, 768), float32] */;
    %138 = rsqrt(%136) /* ty=Tensor[(32, 256, 1), float32] */;
    %139 = multiply(%137, %138) /* ty=Tensor[(32, 256, 768), float32] */;
    %140 = multiply(%139, %p39) /* ty=Tensor[(32, 256, 768), float32] */;
    %141 = add(%140, %p46) /* ty=Tensor[(32, 256, 768), float32] */;
    %142 = reshape(%141, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%142, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %1100 = %1099(%1094, %1096, %1098, meta[relay.Constant][119] /* ty=Tensor[(768), float32] */, meta[relay.Constant][120] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %1101 = fn (%p057: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p136: Tensor[(2304, 768), float16] /* ty=Tensor[(2304, 768), float16] */, %p220: Tensor[(1, 2304), float16] /* ty=Tensor[(1, 2304), float16] */, Primitive=1) -> Tensor[(8192, 2304), float16] {
    %135 = nn.dense(%p057, %p136, units=2304, out_dtype="float16") /* ty=Tensor[(8192, 2304), float16] */;
    add(%135, %p220) /* ty=Tensor[(8192, 2304), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(2304, 768), float16], Tensor[(1, 2304), float16]) -> Tensor[(8192, 2304), float16] */;
  %1102 = %1101(%1100, meta[relay.Constant][121] /* ty=Tensor[(2304, 768), float16] */, meta[relay.Constant][122] /* ty=Tensor[(1, 2304), float16] */) /* ty=Tensor[(8192, 2304), float16] */;
  %1103 = fn (%p056: Tensor[(8192, 2304), float16] /* ty=Tensor[(8192, 2304), float16] */, Primitive=1) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) {
    %134 = reshape(%p056, newshape=[32, 256, 2304]) /* ty=Tensor[(32, 256, 2304), float16] */;
    split(%134, indices_or_sections=[768, 1536], axis=2) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */
  } /* ty=fn (Tensor[(8192, 2304), float16]) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %1104 = %1103(%1102) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %1105 = fn (%p055: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %130 = %p055.0 /* ty=Tensor[(32, 256, 768), float16] */;
    %131 = reshape(%130, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    %132 = transpose(%131, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %133 = broadcast_to(%132, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%133, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(384, 256, 64), float16] */;
  %1110 = fn (%p0307: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %1108 = %p0307.1 /* ty=Tensor[(32, 256, 768), float16] */;
    %1109 = reshape(%1108, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%1109, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %1111 = %1110(%1104) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %1112 = fn (%p0306: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 64, 256), float16] {
    %1106 = transpose(%p0306, axes=[0, 1, 3, 2]) /* ty=Tensor[(32, 12, 64, 256), float16] */;
    %1107 = broadcast_to(%1106, shape=[32, 12, 64, 256], dtype="float16") /* ty=Tensor[(32, 12, 64, 256), float16] */;
    reshape(%1107, newshape=[-1, 64, 256]) /* ty=Tensor[(384, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 64, 256), float16] */;
  %1113 = %1105(%1104) /* ty=Tensor[(384, 256, 64), float16] */;
  %1114 = %1112(%1111) /* ty=Tensor[(384, 64, 256), float16] */;
  %1115 = fn (%p054: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, %p135: Tensor[(384, 64, 256), float16] /* ty=Tensor[(384, 64, 256), float16] */, Primitive=1) -> Tensor[(384, 256, 256), float16] {
    nn.batch_matmul(%p054, %p135, out_dtype="float16") /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16], Tensor[(384, 64, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %1116 = %1115(%1113, %1114) /* ty=Tensor[(384, 256, 256), float16] */;
  %1117 = fn (%p053: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p134: float16 /* ty=float16 */, %p219: Tensor[(1, 1, 256, 256), bool] /* ty=Tensor[(1, 1, 256, 256), bool] */, %p38: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %127 = reshape(%p053, newshape=[32, 12, 256, 256]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %128 = squeeze(%127, axis=[]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %129 = divide(%128, %p134) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    where(%p219, %129, %p38) /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], float16, Tensor[(1, 1, 256, 256), bool], float16) -> Tensor[(32, 12, 256, 256), float16] */;
  %1118 = %1117(%1116, 8f16 /* ty=float16 */, meta[relay.Constant][123] /* ty=Tensor[(1, 1, 256, 256), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %1119 = fn (%p052: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %126 = nn.fast_softmax(%p052) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    broadcast_to(%126, shape=[32, 12, 256, 256], dtype="float16") /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(32, 12, 256, 256), float16] */;
  %1120 = %1119(%1118) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %1121 = fn (%p051: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 256, 256), float16] {
    reshape(%p051, newshape=[-1, 256, 256]) /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %1125 = fn (%p0309: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %1123 = %p0309.2 /* ty=Tensor[(32, 256, 768), float16] */;
    %1124 = reshape(%1123, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%1124, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %1126 = %1125(%1104) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %1127 = fn (%p0308: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %1122 = broadcast_to(%p0308, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%1122, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %1128 = %1121(%1120) /* ty=Tensor[(384, 256, 256), float16] */;
  %1129 = %1127(%1126) /* ty=Tensor[(384, 256, 64), float16] */;
  %1130 = fn (%p050: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p133: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    nn.batch_matmul(%p050, %p133, out_dtype="float16") /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], Tensor[(384, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %1131 = %1130(%1128, %1129) /* ty=Tensor[(384, 256, 64), float16] */;
  %1132 = fn (%p049: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %123 = reshape(%p049, newshape=[32, 12, 256, 64]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %124 = squeeze(%123, axis=[]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %125 = transpose(%124, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    reshape(%125, newshape=[8192, 768]) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16]) -> Tensor[(8192, 768), float16] */;
  %1133 = %1132(%1131) /* ty=Tensor[(8192, 768), float16] */;
  %1134 = fn (%p048: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p132: Tensor[(768, 768), float16] /* ty=Tensor[(768, 768), float16] */, %p218: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %122 = nn.dense(%p048, %p132, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%122, %p218) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(768, 768), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %1135 = %1134(%1133, meta[relay.Constant][124] /* ty=Tensor[(768, 768), float16] */, meta[relay.Constant][125] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %1136 = fn (%p047: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p131: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %121 = reshape(%p047, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%121, %p131) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %1137 = %1136(%1135, %1092) /* ty=Tensor[(32, 256, 768), float16] */;
  %1138 = fn (%p046: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p046, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %1139 = %1138(%1137) /* ty=Tensor[(32, 256, 768), float32] */;
  %1140 = fn (%p0310: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0310, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1141 = %1140(%1139) /* ty=Tensor[(32, 256, 1), float32] */;
  %1142 = fn (%p0311: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1166: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0311, %p1166, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1143 = %1142(%1139, %1141) /* ty=Tensor[(32, 256, 1), float32] */;
  %1144 = fn (%p045: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p130: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p217: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p37: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p45: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %114 = add(%p217, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %115 = subtract(%p045, %p130) /* ty=Tensor[(32, 256, 768), float32] */;
    %116 = rsqrt(%114) /* ty=Tensor[(32, 256, 1), float32] */;
    %117 = multiply(%115, %116) /* ty=Tensor[(32, 256, 768), float32] */;
    %118 = multiply(%117, %p37) /* ty=Tensor[(32, 256, 768), float32] */;
    %119 = add(%118, %p45) /* ty=Tensor[(32, 256, 768), float32] */;
    %120 = reshape(%119, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%120, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %1145 = %1144(%1139, %1141, %1143, meta[relay.Constant][126] /* ty=Tensor[(768), float32] */, meta[relay.Constant][127] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %1146 = fn (%p044: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p129: Tensor[(3072, 768), float16] /* ty=Tensor[(3072, 768), float16] */, %p216: Tensor[(1, 3072), float16] /* ty=Tensor[(1, 3072), float16] */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %113 = nn.dense(%p044, %p129, units=3072, out_dtype="float16") /* ty=Tensor[(8192, 3072), float16] */;
    add(%113, %p216) /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(3072, 768), float16], Tensor[(1, 3072), float16]) -> Tensor[(8192, 3072), float16] */;
  %1147 = %1146(%1145, meta[relay.Constant][128] /* ty=Tensor[(3072, 768), float16] */, meta[relay.Constant][129] /* ty=Tensor[(1, 3072), float16] */) /* ty=Tensor[(8192, 3072), float16] */;
  %1148 = fn (%p043: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p128: float16 /* ty=float16 */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %101 = reshape(%p043, newshape=[32, 256, 3072]) /* ty=Tensor[(32, 256, 3072), float16] */;
    %102 = multiply(%101, %p128) /* ty=Tensor[(32, 256, 3072), float16] */;
    %103 = cast(%101, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %104 = power(%103, 3f /* ty=float32 span=aten::pow_19:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %105 = multiply(%104, 0.044715f /* ty=float32 span=aten::mul_37:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %106 = add(%103, %105) /* ty=Tensor[(32, 256, 3072), float32] */;
    %107 = multiply(%106, 0.797885f /* ty=float32 span=aten::mul_38:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %108 = fast_tanh(%107) /* ty=Tensor[(32, 256, 3072), float32] */;
    %109 = cast(%102, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %110 = add(%108, 1f /* ty=float32 span=aten::add_40:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %111 = multiply(%109, %110) /* ty=Tensor[(32, 256, 3072), float32] */;
    %112 = reshape(%111, newshape=[-1, 3072]) /* ty=Tensor[(8192, 3072), float32] */;
    cast(%112, dtype="float16") /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], float16) -> Tensor[(8192, 3072), float16] */;
  %1149 = %1148(%1147, 0.5f16 /* ty=float16 */) /* ty=Tensor[(8192, 3072), float16] */;
  %1150 = fn (%p042: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p127: Tensor[(768, 3072), float16] /* ty=Tensor[(768, 3072), float16] */, %p215: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %100 = nn.dense(%p042, %p127, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%100, %p215) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], Tensor[(768, 3072), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %1151 = %1150(%1149, meta[relay.Constant][130] /* ty=Tensor[(768, 3072), float16] */, meta[relay.Constant][131] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %1152 = fn (%p041: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p126: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %99 = reshape(%p041, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%p126, %99) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %1153 = %1152(%1151, %1137) /* ty=Tensor[(32, 256, 768), float16] */;
  %1154 = fn (%p040: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p040, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %1155 = %1154(%1153) /* ty=Tensor[(32, 256, 768), float32] */;
  %1156 = fn (%p0312: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0312, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1157 = %1156(%1155) /* ty=Tensor[(32, 256, 1), float32] */;
  %1158 = fn (%p0313: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1167: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0313, %p1167, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1159 = %1158(%1155, %1157) /* ty=Tensor[(32, 256, 1), float32] */;
  %1160 = fn (%p039: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p125: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p214: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p36: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p44: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %92 = add(%p214, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %93 = subtract(%p039, %p125) /* ty=Tensor[(32, 256, 768), float32] */;
    %94 = rsqrt(%92) /* ty=Tensor[(32, 256, 1), float32] */;
    %95 = multiply(%93, %94) /* ty=Tensor[(32, 256, 768), float32] */;
    %96 = multiply(%95, %p36) /* ty=Tensor[(32, 256, 768), float32] */;
    %97 = add(%96, %p44) /* ty=Tensor[(32, 256, 768), float32] */;
    %98 = reshape(%97, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%98, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %1161 = %1160(%1155, %1157, %1159, meta[relay.Constant][132] /* ty=Tensor[(768), float32] */, meta[relay.Constant][133] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %1162 = fn (%p038: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p124: Tensor[(2304, 768), float16] /* ty=Tensor[(2304, 768), float16] */, %p213: Tensor[(1, 2304), float16] /* ty=Tensor[(1, 2304), float16] */, Primitive=1) -> Tensor[(8192, 2304), float16] {
    %91 = nn.dense(%p038, %p124, units=2304, out_dtype="float16") /* ty=Tensor[(8192, 2304), float16] */;
    add(%91, %p213) /* ty=Tensor[(8192, 2304), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(2304, 768), float16], Tensor[(1, 2304), float16]) -> Tensor[(8192, 2304), float16] */;
  %1163 = %1162(%1161, meta[relay.Constant][134] /* ty=Tensor[(2304, 768), float16] */, meta[relay.Constant][135] /* ty=Tensor[(1, 2304), float16] */) /* ty=Tensor[(8192, 2304), float16] */;
  %1164 = fn (%p037: Tensor[(8192, 2304), float16] /* ty=Tensor[(8192, 2304), float16] */, Primitive=1) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) {
    %90 = reshape(%p037, newshape=[32, 256, 2304]) /* ty=Tensor[(32, 256, 2304), float16] */;
    split(%90, indices_or_sections=[768, 1536], axis=2) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */
  } /* ty=fn (Tensor[(8192, 2304), float16]) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %1165 = %1164(%1163) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %1166 = fn (%p036: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %86 = %p036.0 /* ty=Tensor[(32, 256, 768), float16] */;
    %87 = reshape(%86, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    %88 = transpose(%87, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %89 = broadcast_to(%88, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%89, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(384, 256, 64), float16] */;
  %1171 = fn (%p0315: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %1169 = %p0315.1 /* ty=Tensor[(32, 256, 768), float16] */;
    %1170 = reshape(%1169, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%1170, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %1172 = %1171(%1165) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %1173 = fn (%p0314: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 64, 256), float16] {
    %1167 = transpose(%p0314, axes=[0, 1, 3, 2]) /* ty=Tensor[(32, 12, 64, 256), float16] */;
    %1168 = broadcast_to(%1167, shape=[32, 12, 64, 256], dtype="float16") /* ty=Tensor[(32, 12, 64, 256), float16] */;
    reshape(%1168, newshape=[-1, 64, 256]) /* ty=Tensor[(384, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 64, 256), float16] */;
  %1174 = %1166(%1165) /* ty=Tensor[(384, 256, 64), float16] */;
  %1175 = %1173(%1172) /* ty=Tensor[(384, 64, 256), float16] */;
  %1176 = fn (%p035: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, %p123: Tensor[(384, 64, 256), float16] /* ty=Tensor[(384, 64, 256), float16] */, Primitive=1) -> Tensor[(384, 256, 256), float16] {
    nn.batch_matmul(%p035, %p123, out_dtype="float16") /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16], Tensor[(384, 64, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %1177 = %1176(%1174, %1175) /* ty=Tensor[(384, 256, 256), float16] */;
  %1178 = fn (%p034: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p122: float16 /* ty=float16 */, %p212: Tensor[(1, 1, 256, 256), bool] /* ty=Tensor[(1, 1, 256, 256), bool] */, %p35: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %83 = reshape(%p034, newshape=[32, 12, 256, 256]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %84 = squeeze(%83, axis=[]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %85 = divide(%84, %p122) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    where(%p212, %85, %p35) /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], float16, Tensor[(1, 1, 256, 256), bool], float16) -> Tensor[(32, 12, 256, 256), float16] */;
  %1179 = %1178(%1177, 8f16 /* ty=float16 */, meta[relay.Constant][136] /* ty=Tensor[(1, 1, 256, 256), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %1180 = fn (%p033: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %82 = nn.fast_softmax(%p033) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    broadcast_to(%82, shape=[32, 12, 256, 256], dtype="float16") /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(32, 12, 256, 256), float16] */;
  %1181 = %1180(%1179) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %1182 = fn (%p032: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 256, 256), float16] {
    reshape(%p032, newshape=[-1, 256, 256]) /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %1186 = fn (%p0317: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %1184 = %p0317.2 /* ty=Tensor[(32, 256, 768), float16] */;
    %1185 = reshape(%1184, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%1185, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %1187 = %1186(%1165) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %1188 = fn (%p0316: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %1183 = broadcast_to(%p0316, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%1183, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %1189 = %1182(%1181) /* ty=Tensor[(384, 256, 256), float16] */;
  %1190 = %1188(%1187) /* ty=Tensor[(384, 256, 64), float16] */;
  %1191 = fn (%p031: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p121: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    nn.batch_matmul(%p031, %p121, out_dtype="float16") /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], Tensor[(384, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %1192 = %1191(%1189, %1190) /* ty=Tensor[(384, 256, 64), float16] */;
  %1193 = fn (%p030: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %79 = reshape(%p030, newshape=[32, 12, 256, 64]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %80 = squeeze(%79, axis=[]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %81 = transpose(%80, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    reshape(%81, newshape=[8192, 768]) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16]) -> Tensor[(8192, 768), float16] */;
  %1194 = %1193(%1192) /* ty=Tensor[(8192, 768), float16] */;
  %1195 = fn (%p029: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p120: Tensor[(768, 768), float16] /* ty=Tensor[(768, 768), float16] */, %p211: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %78 = nn.dense(%p029, %p120, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%78, %p211) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(768, 768), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %1196 = %1195(%1194, meta[relay.Constant][137] /* ty=Tensor[(768, 768), float16] */, meta[relay.Constant][138] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %1197 = fn (%p028: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p119: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %77 = reshape(%p028, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%77, %p119) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %1198 = %1197(%1196, %1153) /* ty=Tensor[(32, 256, 768), float16] */;
  %1199 = fn (%p027: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p027, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %1200 = %1199(%1198) /* ty=Tensor[(32, 256, 768), float32] */;
  %1201 = fn (%p0318: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0318, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1202 = %1201(%1200) /* ty=Tensor[(32, 256, 1), float32] */;
  %1203 = fn (%p0319: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1168: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0319, %p1168, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1204 = %1203(%1200, %1202) /* ty=Tensor[(32, 256, 1), float32] */;
  %1205 = fn (%p026: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p118: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p210: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p34: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p43: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %70 = add(%p210, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %71 = subtract(%p026, %p118) /* ty=Tensor[(32, 256, 768), float32] */;
    %72 = rsqrt(%70) /* ty=Tensor[(32, 256, 1), float32] */;
    %73 = multiply(%71, %72) /* ty=Tensor[(32, 256, 768), float32] */;
    %74 = multiply(%73, %p34) /* ty=Tensor[(32, 256, 768), float32] */;
    %75 = add(%74, %p43) /* ty=Tensor[(32, 256, 768), float32] */;
    %76 = reshape(%75, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%76, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %1206 = %1205(%1200, %1202, %1204, meta[relay.Constant][139] /* ty=Tensor[(768), float32] */, meta[relay.Constant][140] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %1207 = fn (%p025: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p117: Tensor[(3072, 768), float16] /* ty=Tensor[(3072, 768), float16] */, %p29: Tensor[(1, 3072), float16] /* ty=Tensor[(1, 3072), float16] */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %69 = nn.dense(%p025, %p117, units=3072, out_dtype="float16") /* ty=Tensor[(8192, 3072), float16] */;
    add(%69, %p29) /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(3072, 768), float16], Tensor[(1, 3072), float16]) -> Tensor[(8192, 3072), float16] */;
  %1208 = %1207(%1206, meta[relay.Constant][141] /* ty=Tensor[(3072, 768), float16] */, meta[relay.Constant][142] /* ty=Tensor[(1, 3072), float16] */) /* ty=Tensor[(8192, 3072), float16] */;
  %1209 = fn (%p024: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p116: float16 /* ty=float16 */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %57 = reshape(%p024, newshape=[32, 256, 3072]) /* ty=Tensor[(32, 256, 3072), float16] */;
    %58 = multiply(%57, %p116) /* ty=Tensor[(32, 256, 3072), float16] */;
    %59 = cast(%57, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %60 = power(%59, 3f /* ty=float32 span=aten::pow_21:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %61 = multiply(%60, 0.044715f /* ty=float32 span=aten::mul_41:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %62 = add(%59, %61) /* ty=Tensor[(32, 256, 3072), float32] */;
    %63 = multiply(%62, 0.797885f /* ty=float32 span=aten::mul_42:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %64 = fast_tanh(%63) /* ty=Tensor[(32, 256, 3072), float32] */;
    %65 = cast(%58, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %66 = add(%64, 1f /* ty=float32 span=aten::add_44:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %67 = multiply(%65, %66) /* ty=Tensor[(32, 256, 3072), float32] */;
    %68 = reshape(%67, newshape=[-1, 3072]) /* ty=Tensor[(8192, 3072), float32] */;
    cast(%68, dtype="float16") /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], float16) -> Tensor[(8192, 3072), float16] */;
  %1210 = %1209(%1208, 0.5f16 /* ty=float16 */) /* ty=Tensor[(8192, 3072), float16] */;
  %1211 = fn (%p023: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p115: Tensor[(768, 3072), float16] /* ty=Tensor[(768, 3072), float16] */, %p28: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %56 = nn.dense(%p023, %p115, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%56, %p28) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], Tensor[(768, 3072), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %1212 = %1211(%1210, meta[relay.Constant][143] /* ty=Tensor[(768, 3072), float16] */, meta[relay.Constant][144] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %1213 = fn (%p022: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p114: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %55 = reshape(%p022, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%p114, %55) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %1214 = %1213(%1212, %1198) /* ty=Tensor[(32, 256, 768), float16] */;
  %1215 = fn (%p021: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p021, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %1216 = %1215(%1214) /* ty=Tensor[(32, 256, 768), float32] */;
  %1217 = fn (%p0320: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0320, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1218 = %1217(%1216) /* ty=Tensor[(32, 256, 1), float32] */;
  %1219 = fn (%p0321: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1169: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0321, %p1169, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1220 = %1219(%1216, %1218) /* ty=Tensor[(32, 256, 1), float32] */;
  %1221 = fn (%p020: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p113: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p27: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p33: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p42: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %48 = add(%p27, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %49 = subtract(%p020, %p113) /* ty=Tensor[(32, 256, 768), float32] */;
    %50 = rsqrt(%48) /* ty=Tensor[(32, 256, 1), float32] */;
    %51 = multiply(%49, %50) /* ty=Tensor[(32, 256, 768), float32] */;
    %52 = multiply(%51, %p33) /* ty=Tensor[(32, 256, 768), float32] */;
    %53 = add(%52, %p42) /* ty=Tensor[(32, 256, 768), float32] */;
    %54 = reshape(%53, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%54, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %1222 = %1221(%1216, %1218, %1220, meta[relay.Constant][145] /* ty=Tensor[(768), float32] */, meta[relay.Constant][146] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %1223 = fn (%p019: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p112: Tensor[(2304, 768), float16] /* ty=Tensor[(2304, 768), float16] */, %p26: Tensor[(1, 2304), float16] /* ty=Tensor[(1, 2304), float16] */, Primitive=1) -> Tensor[(8192, 2304), float16] {
    %47 = nn.dense(%p019, %p112, units=2304, out_dtype="float16") /* ty=Tensor[(8192, 2304), float16] */;
    add(%47, %p26) /* ty=Tensor[(8192, 2304), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(2304, 768), float16], Tensor[(1, 2304), float16]) -> Tensor[(8192, 2304), float16] */;
  %1224 = %1223(%1222, meta[relay.Constant][147] /* ty=Tensor[(2304, 768), float16] */, meta[relay.Constant][148] /* ty=Tensor[(1, 2304), float16] */) /* ty=Tensor[(8192, 2304), float16] */;
  %1225 = fn (%p018: Tensor[(8192, 2304), float16] /* ty=Tensor[(8192, 2304), float16] */, Primitive=1) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) {
    %46 = reshape(%p018, newshape=[32, 256, 2304]) /* ty=Tensor[(32, 256, 2304), float16] */;
    split(%46, indices_or_sections=[768, 1536], axis=2) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */
  } /* ty=fn (Tensor[(8192, 2304), float16]) -> (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %1226 = %1225(%1224) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */;
  %1227 = fn (%p017: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %42 = %p017.0 /* ty=Tensor[(32, 256, 768), float16] */;
    %43 = reshape(%42, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    %44 = transpose(%43, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %45 = broadcast_to(%44, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%45, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(384, 256, 64), float16] */;
  %1232 = fn (%p0323: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %1230 = %p0323.1 /* ty=Tensor[(32, 256, 768), float16] */;
    %1231 = reshape(%1230, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%1231, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %1233 = %1232(%1226) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %1234 = fn (%p0322: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 64, 256), float16] {
    %1228 = transpose(%p0322, axes=[0, 1, 3, 2]) /* ty=Tensor[(32, 12, 64, 256), float16] */;
    %1229 = broadcast_to(%1228, shape=[32, 12, 64, 256], dtype="float16") /* ty=Tensor[(32, 12, 64, 256), float16] */;
    reshape(%1229, newshape=[-1, 64, 256]) /* ty=Tensor[(384, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 64, 256), float16] */;
  %1235 = %1227(%1226) /* ty=Tensor[(384, 256, 64), float16] */;
  %1236 = %1234(%1233) /* ty=Tensor[(384, 64, 256), float16] */;
  %1237 = fn (%p016: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, %p111: Tensor[(384, 64, 256), float16] /* ty=Tensor[(384, 64, 256), float16] */, Primitive=1) -> Tensor[(384, 256, 256), float16] {
    nn.batch_matmul(%p016, %p111, out_dtype="float16") /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16], Tensor[(384, 64, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %1238 = %1237(%1235, %1236) /* ty=Tensor[(384, 256, 256), float16] */;
  %1239 = fn (%p015: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p110: float16 /* ty=float16 */, %p25: Tensor[(1, 1, 256, 256), bool] /* ty=Tensor[(1, 1, 256, 256), bool] */, %p32: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %39 = reshape(%p015, newshape=[32, 12, 256, 256]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %40 = squeeze(%39, axis=[]) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    %41 = divide(%40, %p110) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    where(%p25, %41, %p32) /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], float16, Tensor[(1, 1, 256, 256), bool], float16) -> Tensor[(32, 12, 256, 256), float16] */;
  %1240 = %1239(%1238, 8f16 /* ty=float16 */, meta[relay.Constant][149] /* ty=Tensor[(1, 1, 256, 256), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %1241 = fn (%p014: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 12, 256, 256), float16] {
    %38 = nn.fast_softmax(%p014) /* ty=Tensor[(32, 12, 256, 256), float16] */;
    broadcast_to(%38, shape=[32, 12, 256, 256], dtype="float16") /* ty=Tensor[(32, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(32, 12, 256, 256), float16] */;
  %1242 = %1241(%1240) /* ty=Tensor[(32, 12, 256, 256), float16] */;
  %1243 = fn (%p013: Tensor[(32, 12, 256, 256), float16] /* ty=Tensor[(32, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 256, 256), float16] {
    reshape(%p013, newshape=[-1, 256, 256]) /* ty=Tensor[(384, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 256), float16]) -> Tensor[(384, 256, 256), float16] */;
  %1247 = fn (%p0325: (Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) /* ty=(Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16]) */, Primitive=1) -> Tensor[(32, 12, 256, 64), float16] {
    %1245 = %p0325.2 /* ty=Tensor[(32, 256, 768), float16] */;
    %1246 = reshape(%1245, newshape=[32, 256, 12, 64]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    transpose(%1246, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 12, 256, 64), float16] */
  } /* ty=fn ((Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16], Tensor[(32, 256, 768), float16])) -> Tensor[(32, 12, 256, 64), float16] */;
  %1248 = %1247(%1226) /* ty=Tensor[(32, 12, 256, 64), float16] */;
  %1249 = fn (%p0324: Tensor[(32, 12, 256, 64), float16] /* ty=Tensor[(32, 12, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    %1244 = broadcast_to(%p0324, shape=[32, 12, 256, 64], dtype="float16") /* ty=Tensor[(32, 12, 256, 64), float16] */;
    reshape(%1244, newshape=[-1, 256, 64]) /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 12, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %1250 = %1243(%1242) /* ty=Tensor[(384, 256, 256), float16] */;
  %1251 = %1249(%1248) /* ty=Tensor[(384, 256, 64), float16] */;
  %1252 = fn (%p012: Tensor[(384, 256, 256), float16] /* ty=Tensor[(384, 256, 256), float16] */, %p19: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(384, 256, 64), float16] {
    nn.batch_matmul(%p012, %p19, out_dtype="float16") /* ty=Tensor[(384, 256, 64), float16] */
  } /* ty=fn (Tensor[(384, 256, 256), float16], Tensor[(384, 256, 64), float16]) -> Tensor[(384, 256, 64), float16] */;
  %1253 = %1252(%1250, %1251) /* ty=Tensor[(384, 256, 64), float16] */;
  %1254 = fn (%p011: Tensor[(384, 256, 64), float16] /* ty=Tensor[(384, 256, 64), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %35 = reshape(%p011, newshape=[32, 12, 256, 64]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %36 = squeeze(%35, axis=[]) /* ty=Tensor[(32, 12, 256, 64), float16] */;
    %37 = transpose(%36, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 12, 64), float16] */;
    reshape(%37, newshape=[8192, 768]) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(384, 256, 64), float16]) -> Tensor[(8192, 768), float16] */;
  %1255 = %1254(%1253) /* ty=Tensor[(8192, 768), float16] */;
  %1256 = fn (%p010: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p18: Tensor[(768, 768), float16] /* ty=Tensor[(768, 768), float16] */, %p24: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %34 = nn.dense(%p010, %p18, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%34, %p24) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(768, 768), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %1257 = %1256(%1255, meta[relay.Constant][150] /* ty=Tensor[(768, 768), float16] */, meta[relay.Constant][151] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %1258 = fn (%p09: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p17: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %33 = reshape(%p09, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    add(%33, %p17) /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float16] */;
  %1259 = %1258(%1257, %1214) /* ty=Tensor[(32, 256, 768), float16] */;
  %1260 = fn (%p08: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    cast(%p08, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %1261 = %1260(%1259) /* ty=Tensor[(32, 256, 768), float32] */;
  %1262 = fn (%p0326: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0326, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1263 = %1262(%1261) /* ty=Tensor[(32, 256, 1), float32] */;
  %1264 = fn (%p0327: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1170: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0327, %p1170, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1265 = %1264(%1261, %1263) /* ty=Tensor[(32, 256, 1), float32] */;
  %1266 = fn (%p07: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p16: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p23: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p31: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p41: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %26 = add(%p23, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %27 = subtract(%p07, %p16) /* ty=Tensor[(32, 256, 768), float32] */;
    %28 = rsqrt(%26) /* ty=Tensor[(32, 256, 1), float32] */;
    %29 = multiply(%27, %28) /* ty=Tensor[(32, 256, 768), float32] */;
    %30 = multiply(%29, %p31) /* ty=Tensor[(32, 256, 768), float32] */;
    %31 = add(%30, %p41) /* ty=Tensor[(32, 256, 768), float32] */;
    %32 = reshape(%31, newshape=[-1, 768]) /* ty=Tensor[(8192, 768), float32] */;
    cast(%32, dtype="float16") /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(8192, 768), float16] */;
  %1267 = %1266(%1261, %1263, %1265, meta[relay.Constant][152] /* ty=Tensor[(768), float32] */, meta[relay.Constant][153] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(8192, 768), float16] */;
  %1268 = fn (%p06: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p15: Tensor[(3072, 768), float16] /* ty=Tensor[(3072, 768), float16] */, %p22: Tensor[(1, 3072), float16] /* ty=Tensor[(1, 3072), float16] */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %25 = nn.dense(%p06, %p15, units=3072, out_dtype="float16") /* ty=Tensor[(8192, 3072), float16] */;
    add(%25, %p22) /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(3072, 768), float16], Tensor[(1, 3072), float16]) -> Tensor[(8192, 3072), float16] */;
  %1269 = %1268(%1267, meta[relay.Constant][154] /* ty=Tensor[(3072, 768), float16] */, meta[relay.Constant][155] /* ty=Tensor[(1, 3072), float16] */) /* ty=Tensor[(8192, 3072), float16] */;
  %1270 = fn (%p05: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p14: float16 /* ty=float16 */, Primitive=1) -> Tensor[(8192, 3072), float16] {
    %13 = reshape(%p05, newshape=[32, 256, 3072]) /* ty=Tensor[(32, 256, 3072), float16] */;
    %14 = multiply(%13, %p14) /* ty=Tensor[(32, 256, 3072), float16] */;
    %15 = cast(%13, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %16 = power(%15, 3f /* ty=float32 span=aten::pow_23:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %17 = multiply(%16, 0.044715f /* ty=float32 span=aten::mul_45:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %18 = add(%15, %17) /* ty=Tensor[(32, 256, 3072), float32] */;
    %19 = multiply(%18, 0.797885f /* ty=float32 span=aten::mul_46:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %20 = fast_tanh(%19) /* ty=Tensor[(32, 256, 3072), float32] */;
    %21 = cast(%14, dtype="float32") /* ty=Tensor[(32, 256, 3072), float32] */;
    %22 = add(%20, 1f /* ty=float32 span=aten::add_48:0:0 */) /* ty=Tensor[(32, 256, 3072), float32] */;
    %23 = multiply(%21, %22) /* ty=Tensor[(32, 256, 3072), float32] */;
    %24 = reshape(%23, newshape=[-1, 3072]) /* ty=Tensor[(8192, 3072), float32] */;
    cast(%24, dtype="float16") /* ty=Tensor[(8192, 3072), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], float16) -> Tensor[(8192, 3072), float16] */;
  %1271 = %1270(%1269, 0.5f16 /* ty=float16 */) /* ty=Tensor[(8192, 3072), float16] */;
  %1272 = fn (%p04: Tensor[(8192, 3072), float16] /* ty=Tensor[(8192, 3072), float16] */, %p13: Tensor[(768, 3072), float16] /* ty=Tensor[(768, 3072), float16] */, %p21: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(8192, 768), float16] {
    %12 = nn.dense(%p04, %p13, units=768, out_dtype="float16") /* ty=Tensor[(8192, 768), float16] */;
    add(%12, %p21) /* ty=Tensor[(8192, 768), float16] */
  } /* ty=fn (Tensor[(8192, 3072), float16], Tensor[(768, 3072), float16], Tensor[(1, 768), float16]) -> Tensor[(8192, 768), float16] */;
  %1273 = %1272(%1271, meta[relay.Constant][156] /* ty=Tensor[(768, 3072), float16] */, meta[relay.Constant][157] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(8192, 768), float16] */;
  %1274 = fn (%p03: Tensor[(8192, 768), float16] /* ty=Tensor[(8192, 768), float16] */, %p12: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, Primitive=1) -> Tensor[(32, 256, 768), float32] {
    %10 = reshape(%p03, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float16] */;
    %11 = add(%p12, %10) /* ty=Tensor[(32, 256, 768), float16] */;
    cast(%11, dtype="float32") /* ty=Tensor[(32, 256, 768), float32] */
  } /* ty=fn (Tensor[(8192, 768), float16], Tensor[(32, 256, 768), float16]) -> Tensor[(32, 256, 768), float32] */;
  %1275 = %1274(%1273, %1259) /* ty=Tensor[(32, 256, 768), float32] */;
  %1276 = fn (%p0328: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0328, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1277 = %1276(%1275) /* ty=Tensor[(32, 256, 1), float32] */;
  %1278 = fn (%p0329: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p1171: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0329, %p1171, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1279 = %1278(%1275, %1277) /* ty=Tensor[(32, 256, 1), float32] */;
  %1280 = fn (%p02: Tensor[(32, 256, 768), float32] /* ty=Tensor[(32, 256, 768), float32] */, %p11: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p3: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p4: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(32, 256, 768), float16] {
    %1 = add(%p2, 1e-05f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %2 = subtract(%p02, %p11) /* ty=Tensor[(32, 256, 768), float32] */;
    %3 = rsqrt(%1) /* ty=Tensor[(32, 256, 1), float32] */;
    %4 = multiply(%2, %3) /* ty=Tensor[(32, 256, 768), float32] */;
    %5 = multiply(%4, %p3) /* ty=Tensor[(32, 256, 768), float32] */;
    %6 = add(%5, %p4) /* ty=Tensor[(32, 256, 768), float32] */;
    %7 = reshape(%6, newshape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float32] */;
    %8 = broadcast_to(%7, shape=[32, 256, 768]) /* ty=Tensor[(32, 256, 768), float32] */;
    %9 = reshape(%8, newshape=[-1, 256, 768]) /* ty=Tensor[(32, 256, 768), float32] */;
    cast(%9, dtype="float16") /* ty=Tensor[(32, 256, 768), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(32, 256, 768), float16] */;
  %1281 = %1280(%1275, %1277, %1279, meta[relay.Constant][158] /* ty=Tensor[(768), float32] */, meta[relay.Constant][159] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(32, 256, 768), float16] */;
  %1282 = fn (%p01: Tensor[(32, 256, 768), float16] /* ty=Tensor[(32, 256, 768), float16] */, %p1: Tensor[(32, 768, 50304), float16] /* ty=Tensor[(32, 768, 50304), float16] */, Primitive=1) -> Tensor[(32, 256, 50304), float16] {
    nn.batch_matmul(%p01, %p1, out_dtype="float16") /* ty=Tensor[(32, 256, 50304), float16] */
  } /* ty=fn (Tensor[(32, 256, 768), float16], Tensor[(32, 768, 50304), float16]) -> Tensor[(32, 256, 50304), float16] */;
  %1283 = %1282(%1281, meta[relay.Constant][160] /* ty=Tensor[(32, 768, 50304), float16] */) /* ty=Tensor[(32, 256, 50304), float16] */;
  %1284 = fn (%p0: Tensor[(32, 256, 50304), float16] /* ty=Tensor[(32, 256, 50304), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(32, 256, 50304), float16] {
    %0 = reshape(%p0, newshape=[32, 256, 50304]) /* ty=Tensor[(32, 256, 50304), float16] */;
    squeeze(%0, axis=[]) /* ty=Tensor[(32, 256, 50304), float16] */
  } /* ty=fn (Tensor[(32, 256, 50304), float16]) -> Tensor[(32, 256, 50304), float16] */;
  %1285 = %1284(%1283) /* ty=Tensor[(32, 256, 50304), float16] */;
  (%1285, %562, %577, %623, %638, %684, %699, %745, %760, %806, %821, %867, %882, %928, %943, %989, %1004, %1050, %1065, %1111, %1126, %1172, %1187, %1233, %1248) /* ty=(Tensor[(32, 256, 50304), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16], Tensor[(32, 12, 256, 64), float16]) */
}


