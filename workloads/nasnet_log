type List[A] {
  Cons(A, List[A]),
  Nil,
}

type Option[A] {
  Some(A),
  None,
}

type Tree[A] {
  Rose(A, List[Tree[A]]),
}

type tensor_float16_t {
  tensor_nil_float16,
  tensor0_float16(float16),
  tensor1_float16(Tensor[(?), float16]),
  tensor2_float16(Tensor[(?, ?), float16]),
  tensor3_float16(Tensor[(?, ?, ?), float16]),
  tensor4_float16(Tensor[(?, ?, ?, ?), float16]),
  tensor5_float16(Tensor[(?, ?, ?, ?, ?), float16]),
  tensor6_float16(Tensor[(?, ?, ?, ?, ?, ?), float16]),
}

type tensor_float32_t {
  tensor_nil_float32,
  tensor0_float32(float32),
  tensor1_float32(Tensor[(?), float32]),
  tensor2_float32(Tensor[(?, ?), float32]),
  tensor3_float32(Tensor[(?, ?, ?), float32]),
  tensor4_float32(Tensor[(?, ?, ?, ?), float32]),
  tensor5_float32(Tensor[(?, ?, ?, ?, ?), float32]),
  tensor6_float32(Tensor[(?, ?, ?, ?, ?, ?), float32]),
}

type tensor_float64_t {
  tensor_nil_float64,
  tensor0_float64(float64),
  tensor1_float64(Tensor[(?), float64]),
  tensor2_float64(Tensor[(?, ?), float64]),
  tensor3_float64(Tensor[(?, ?, ?), float64]),
  tensor4_float64(Tensor[(?, ?, ?, ?), float64]),
  tensor5_float64(Tensor[(?, ?, ?, ?, ?), float64]),
  tensor6_float64(Tensor[(?, ?, ?, ?, ?, ?), float64]),
}

type tensor_int16_t {
  tensor_nil_int16,
  tensor0_int16(int16),
  tensor1_int16(Tensor[(?), int16]),
  tensor2_int16(Tensor[(?, ?), int16]),
  tensor3_int16(Tensor[(?, ?, ?), int16]),
  tensor4_int16(Tensor[(?, ?, ?, ?), int16]),
  tensor5_int16(Tensor[(?, ?, ?, ?, ?), int16]),
  tensor6_int16(Tensor[(?, ?, ?, ?, ?, ?), int16]),
}

type tensor_int32_t {
  tensor_nil_int32,
  tensor0_int32(int32),
  tensor1_int32(Tensor[(?), int32]),
  tensor2_int32(Tensor[(?, ?), int32]),
  tensor3_int32(Tensor[(?, ?, ?), int32]),
  tensor4_int32(Tensor[(?, ?, ?, ?), int32]),
  tensor5_int32(Tensor[(?, ?, ?, ?, ?), int32]),
  tensor6_int32(Tensor[(?, ?, ?, ?, ?, ?), int32]),
}

type tensor_int64_t {
  tensor_nil_int64,
  tensor0_int64(int64),
  tensor1_int64(Tensor[(?), int64]),
  tensor2_int64(Tensor[(?, ?), int64]),
  tensor3_int64(Tensor[(?, ?, ?), int64]),
  tensor4_int64(Tensor[(?, ?, ?, ?), int64]),
  tensor5_int64(Tensor[(?, ?, ?, ?, ?), int64]),
  tensor6_int64(Tensor[(?, ?, ?, ?, ?, ?), int64]),
}

type tensor_int8_t {
  tensor_nil_int8,
  tensor0_int8(int8),
  tensor1_int8(Tensor[(?), int8]),
  tensor2_int8(Tensor[(?, ?), int8]),
  tensor3_int8(Tensor[(?, ?, ?), int8]),
  tensor4_int8(Tensor[(?, ?, ?, ?), int8]),
  tensor5_int8(Tensor[(?, ?, ?, ?, ?), int8]),
  tensor6_int8(Tensor[(?, ?, ?, ?, ?, ?), int8]),
}

type tensor_uint16_t {
  tensor_nil_uint16,
  tensor0_uint16(uint16),
  tensor1_uint16(Tensor[(?), uint16]),
  tensor2_uint16(Tensor[(?, ?), uint16]),
  tensor3_uint16(Tensor[(?, ?, ?), uint16]),
  tensor4_uint16(Tensor[(?, ?, ?, ?), uint16]),
  tensor5_uint16(Tensor[(?, ?, ?, ?, ?), uint16]),
  tensor6_uint16(Tensor[(?, ?, ?, ?, ?, ?), uint16]),
}

type tensor_uint8_t {
  tensor_nil_uint8,
  tensor0_uint8(uint8),
  tensor1_uint8(Tensor[(?), uint8]),
  tensor2_uint8(Tensor[(?, ?), uint8]),
  tensor3_uint8(Tensor[(?, ?, ?), uint8]),
  tensor4_uint8(Tensor[(?, ?, ?, ?), uint8]),
  tensor5_uint8(Tensor[(?, ?, ?, ?, ?), uint8]),
  tensor6_uint8(Tensor[(?, ?, ?, ?, ?, ?), uint8]),
}

def @main(%input0: Tensor[(16, 3, 331, 331), float32] /* ty=Tensor[(16, 3, 331, 331), float32] span=aten::_convolution_0.input0:0:0 */) -> Tensor[(16, 1000), float16] {
  %54 = fn (%p049: Tensor[(16, 3, 331, 331), float32] /* ty=Tensor[(16, 3, 331, 331), float32] */, Primitive=1) -> Tensor[(16, 331, 331, 3), float16] {
    %53 = cast(%p049, dtype="float16") /* ty=Tensor[(16, 3, 331, 331), float16] */;
    layout_transform(%53, src_layout="NCHW", dst_layout="NHWC") /* ty=Tensor[(16, 331, 331, 3), float16] */
  } /* ty=fn (Tensor[(16, 3, 331, 331), float32]) -> Tensor[(16, 331, 331, 3), float16] */;
  %55 = %54(%input0) /* ty=Tensor[(16, 331, 331, 3), float16] */;
  %56 = fn (%p048: Tensor[(16, 331, 331, 3), float16] /* ty=Tensor[(16, 331, 331, 3), float16] */, %p135: Tensor[(96, 3, 3, 3), float16] /* ty=Tensor[(96, 3, 3, 3), float16] */, %p227: Tensor[(96), float16] /* ty=Tensor[(96), float16] */, %p326: Tensor[(96), float16] /* ty=Tensor[(96), float16] */, Primitive=1) -> Tensor[(16, 165, 165, 96), float16] {
    %51 = nn.conv2d(%p048, %p135, strides=[2, 2], padding=[0, 0, 0, 0], channels=96, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 165, 165, 96), float16] */;
    %52 = multiply(%51, %p227) /* ty=Tensor[(16, 165, 165, 96), float16] */;
    add(%52, %p326) /* ty=Tensor[(16, 165, 165, 96), float16] */
  } /* ty=fn (Tensor[(16, 331, 331, 3), float16], Tensor[(96, 3, 3, 3), float16], Tensor[(96), float16], Tensor[(96), float16]) -> Tensor[(16, 165, 165, 96), float16] */;
  %57 = %56(%55, meta[relay.Constant][0] /* ty=Tensor[(96, 3, 3, 3), float16] */, meta[relay.Constant][1] /* ty=Tensor[(96), float16] */, meta[relay.Constant][2] /* ty=Tensor[(96), float16] */) /* ty=Tensor[(16, 165, 165, 96), float16] */;
  %58 = fn (%p047: Tensor[(16, 165, 165, 96), float16] /* ty=Tensor[(16, 165, 165, 96), float16] */, Primitive=1) -> Tensor[(16, 165, 165, 96), float16] {
    nn.relu(%p047) /* ty=Tensor[(16, 165, 165, 96), float16] */
  } /* ty=fn (Tensor[(16, 165, 165, 96), float16]) -> Tensor[(16, 165, 165, 96), float16] */;
  %59 = %58(%57) /* ty=Tensor[(16, 165, 165, 96), float16] */;
  %60 = fn (%p046: Tensor[(16, 165, 165, 96), float16] /* ty=Tensor[(16, 165, 165, 96), float16] */, %p134: Tensor[(42, 1, 1, 96), float16] /* ty=Tensor[(42, 1, 1, 96), float16] */, %p226: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, %p325: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, Primitive=1) -> Tensor[(16, 165, 165, 42), float16] {
    %49 = nn.conv2d(%p046, %p134, padding=[0, 0, 0, 0], channels=42, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 165, 165, 42), float16] */;
    %50 = multiply(%49, %p226) /* ty=Tensor[(16, 165, 165, 42), float16] */;
    add(%50, %p325) /* ty=Tensor[(16, 165, 165, 42), float16] */
  } /* ty=fn (Tensor[(16, 165, 165, 96), float16], Tensor[(42, 1, 1, 96), float16], Tensor[(42), float16], Tensor[(42), float16]) -> Tensor[(16, 165, 165, 42), float16] */;
  %61 = %60(%59, meta[relay.Constant][3] /* ty=Tensor[(42, 1, 1, 96), float16] */, meta[relay.Constant][4] /* ty=Tensor[(42), float16] */, meta[relay.Constant][5] /* ty=Tensor[(42), float16] */) /* ty=Tensor[(16, 165, 165, 42), float16] */;
  %62 = fn (%p045: Tensor[(16, 165, 165, 42), float16] /* ty=Tensor[(16, 165, 165, 42), float16] */, %p133: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 167, 167, 42), float16] {
    nn.pad(%p045, %p133, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(16, 167, 167, 42), float16] */
  } /* ty=fn (Tensor[(16, 165, 165, 42), float16], float16) -> Tensor[(16, 167, 167, 42), float16] */;
  %69 = fn (%p054: Tensor[(16, 165, 165, 96), float16] /* ty=Tensor[(16, 165, 165, 96), float16] */, %p140: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 171, 171, 96), float16] {
    %68 = nn.relu(%p054) /* ty=Tensor[(16, 165, 165, 96), float16] */;
    nn.pad(%68, %p140, pad_width=[[0, 0], [3, 3], [3, 3], [0, 0]]) /* ty=Tensor[(16, 171, 171, 96), float16] */
  } /* ty=fn (Tensor[(16, 165, 165, 96), float16], float16) -> Tensor[(16, 171, 171, 96), float16] */;
  %70 = %69(%57, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 171, 171, 96), float16] */;
  %71 = fn (%p053: Tensor[(16, 171, 171, 96), float16] /* ty=Tensor[(16, 171, 171, 96), float16] */, %p139: Tensor[(96, 7, 7, 1), float16] /* ty=Tensor[(96, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 96), float16] {
    nn.conv2d(%p053, %p139, strides=[2, 2], padding=[0, 0, 0, 0], groups=96, channels=96, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 96), float16] */
  } /* ty=fn (Tensor[(16, 171, 171, 96), float16], Tensor[(96, 7, 7, 1), float16]) -> Tensor[(16, 83, 83, 96), float16] */;
  %72 = %71(%70, meta[relay.Constant][6] /* ty=Tensor[(96, 7, 7, 1), float16] */) /* ty=Tensor[(16, 83, 83, 96), float16] */;
  %73 = fn (%p052: Tensor[(16, 83, 83, 96), float16] /* ty=Tensor[(16, 83, 83, 96), float16] */, %p138: Tensor[(42, 1, 1, 96), float16] /* ty=Tensor[(42, 1, 1, 96), float16] */, %p229: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, %p328: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    %65 = nn.conv2d(%p052, %p138, padding=[0, 0, 0, 0], channels=42, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %66 = multiply(%65, %p229) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %67 = add(%66, %p328) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    nn.relu(%67) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 96), float16], Tensor[(42, 1, 1, 96), float16], Tensor[(42), float16], Tensor[(42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %74 = %73(%72, meta[relay.Constant][7] /* ty=Tensor[(42, 1, 1, 96), float16] */, meta[relay.Constant][8] /* ty=Tensor[(42), float16] */, meta[relay.Constant][9] /* ty=Tensor[(42), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %75 = fn (%p051: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p137: Tensor[(42, 7, 7, 1), float16] /* ty=Tensor[(42, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    nn.conv2d(%p051, %p137, padding=[3, 3, 3, 3], groups=42, channels=42, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(42, 7, 7, 1), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %76 = %75(%74, meta[relay.Constant][10] /* ty=Tensor[(42, 7, 7, 1), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %77 = fn (%p050: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p136: Tensor[(42, 1, 1, 42), float16] /* ty=Tensor[(42, 1, 1, 42), float16] */, %p228: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, %p327: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    %63 = nn.conv2d(%p050, %p136, padding=[0, 0, 0, 0], channels=42, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %64 = multiply(%63, %p228) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    add(%64, %p327) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(42, 1, 1, 42), float16], Tensor[(42), float16], Tensor[(42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %78 = %62(%61, -inff16 /* ty=float16 */) /* ty=Tensor[(16, 167, 167, 42), float16] */;
  %79 = %77(%76, meta[relay.Constant][11] /* ty=Tensor[(42, 1, 1, 42), float16] */, meta[relay.Constant][12] /* ty=Tensor[(42), float16] */, meta[relay.Constant][13] /* ty=Tensor[(42), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %80 = fn (%p044: Tensor[(16, 167, 167, 42), float16] /* ty=Tensor[(16, 167, 167, 42), float16] */, %p132: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    %48 = nn.max_pool2d(%p044, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 83, 83, 42), float16] */;
    add(%48, %p132) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 167, 167, 42), float16], Tensor[(16, 83, 83, 42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %82 = fn (%p056: Tensor[(16, 165, 165, 42), float16] /* ty=Tensor[(16, 165, 165, 42), float16] */, %p142: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 167, 167, 42), float16] {
    nn.pad(%p056, %p142, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(16, 167, 167, 42), float16] */
  } /* ty=fn (Tensor[(16, 165, 165, 42), float16], float16) -> Tensor[(16, 167, 167, 42), float16] */;
  %89 = fn (%p061: Tensor[(16, 165, 165, 96), float16] /* ty=Tensor[(16, 165, 165, 96), float16] */, %p147: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 169, 169, 96), float16] {
    %88 = nn.relu(%p061) /* ty=Tensor[(16, 165, 165, 96), float16] */;
    nn.pad(%88, %p147, pad_width=[[0, 0], [2, 2], [2, 2], [0, 0]]) /* ty=Tensor[(16, 169, 169, 96), float16] */
  } /* ty=fn (Tensor[(16, 165, 165, 96), float16], float16) -> Tensor[(16, 169, 169, 96), float16] */;
  %90 = %89(%57, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 169, 169, 96), float16] */;
  %91 = fn (%p060: Tensor[(16, 169, 169, 96), float16] /* ty=Tensor[(16, 169, 169, 96), float16] */, %p146: Tensor[(96, 5, 5, 1), float16] /* ty=Tensor[(96, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 96), float16] {
    nn.conv2d(%p060, %p146, strides=[2, 2], padding=[0, 0, 0, 0], groups=96, channels=96, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 96), float16] */
  } /* ty=fn (Tensor[(16, 169, 169, 96), float16], Tensor[(96, 5, 5, 1), float16]) -> Tensor[(16, 83, 83, 96), float16] */;
  %92 = %91(%90, meta[relay.Constant][14] /* ty=Tensor[(96, 5, 5, 1), float16] */) /* ty=Tensor[(16, 83, 83, 96), float16] */;
  %93 = fn (%p059: Tensor[(16, 83, 83, 96), float16] /* ty=Tensor[(16, 83, 83, 96), float16] */, %p145: Tensor[(42, 1, 1, 96), float16] /* ty=Tensor[(42, 1, 1, 96), float16] */, %p231: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, %p330: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    %85 = nn.conv2d(%p059, %p145, padding=[0, 0, 0, 0], channels=42, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %86 = multiply(%85, %p231) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %87 = add(%86, %p330) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    nn.relu(%87) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 96), float16], Tensor[(42, 1, 1, 96), float16], Tensor[(42), float16], Tensor[(42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %94 = %93(%92, meta[relay.Constant][15] /* ty=Tensor[(42, 1, 1, 96), float16] */, meta[relay.Constant][16] /* ty=Tensor[(42), float16] */, meta[relay.Constant][17] /* ty=Tensor[(42), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %95 = fn (%p058: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p144: Tensor[(42, 5, 5, 1), float16] /* ty=Tensor[(42, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    nn.conv2d(%p058, %p144, padding=[2, 2, 2, 2], groups=42, channels=42, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(42, 5, 5, 1), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %96 = %95(%94, meta[relay.Constant][18] /* ty=Tensor[(42, 5, 5, 1), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %97 = fn (%p057: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p143: Tensor[(42, 1, 1, 42), float16] /* ty=Tensor[(42, 1, 1, 42), float16] */, %p230: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, %p329: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    %83 = nn.conv2d(%p057, %p143, padding=[0, 0, 0, 0], channels=42, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %84 = multiply(%83, %p230) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    add(%84, %p329) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(42, 1, 1, 42), float16], Tensor[(42), float16], Tensor[(42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %98 = %82(%61, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 167, 167, 42), float16] */;
  %99 = %97(%96, meta[relay.Constant][19] /* ty=Tensor[(42, 1, 1, 42), float16] */, meta[relay.Constant][20] /* ty=Tensor[(42), float16] */, meta[relay.Constant][21] /* ty=Tensor[(42), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %100 = fn (%p055: Tensor[(16, 167, 167, 42), float16] /* ty=Tensor[(16, 167, 167, 42), float16] */, %p141: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    %81 = nn.avg_pool2d(%p055, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 83, 83, 42), float16] */;
    add(%81, %p141) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 167, 167, 42), float16], Tensor[(16, 83, 83, 42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %109 = fn (%p067: Tensor[(16, 165, 165, 42), float16] /* ty=Tensor[(16, 165, 165, 42), float16] */, %p153: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 169, 169, 42), float16] {
    %108 = nn.relu(%p067) /* ty=Tensor[(16, 165, 165, 42), float16] */;
    nn.pad(%108, %p153, pad_width=[[0, 0], [2, 2], [2, 2], [0, 0]]) /* ty=Tensor[(16, 169, 169, 42), float16] */
  } /* ty=fn (Tensor[(16, 165, 165, 42), float16], float16) -> Tensor[(16, 169, 169, 42), float16] */;
  %110 = %109(%61, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 169, 169, 42), float16] */;
  %111 = fn (%p066: Tensor[(16, 169, 169, 42), float16] /* ty=Tensor[(16, 169, 169, 42), float16] */, %p152: Tensor[(42, 5, 5, 1), float16] /* ty=Tensor[(42, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    nn.conv2d(%p066, %p152, strides=[2, 2], padding=[0, 0, 0, 0], groups=42, channels=42, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 169, 169, 42), float16], Tensor[(42, 5, 5, 1), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %112 = %111(%110, meta[relay.Constant][22] /* ty=Tensor[(42, 5, 5, 1), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %113 = fn (%p065: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p151: Tensor[(42, 1, 1, 42), float16] /* ty=Tensor[(42, 1, 1, 42), float16] */, %p233: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, %p332: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    %105 = nn.conv2d(%p065, %p151, padding=[0, 0, 0, 0], channels=42, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %106 = multiply(%105, %p233) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %107 = add(%106, %p332) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    nn.relu(%107) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(42, 1, 1, 42), float16], Tensor[(42), float16], Tensor[(42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %114 = %113(%112, meta[relay.Constant][23] /* ty=Tensor[(42, 1, 1, 42), float16] */, meta[relay.Constant][24] /* ty=Tensor[(42), float16] */, meta[relay.Constant][25] /* ty=Tensor[(42), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %115 = fn (%p064: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p150: Tensor[(42, 5, 5, 1), float16] /* ty=Tensor[(42, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    nn.conv2d(%p064, %p150, padding=[2, 2, 2, 2], groups=42, channels=42, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(42, 5, 5, 1), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %122 = fn (%p072: Tensor[(16, 165, 165, 96), float16] /* ty=Tensor[(16, 165, 165, 96), float16] */, %p158: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 171, 171, 96), float16] {
    %121 = nn.relu(%p072) /* ty=Tensor[(16, 165, 165, 96), float16] */;
    nn.pad(%121, %p158, pad_width=[[0, 0], [3, 3], [3, 3], [0, 0]]) /* ty=Tensor[(16, 171, 171, 96), float16] */
  } /* ty=fn (Tensor[(16, 165, 165, 96), float16], float16) -> Tensor[(16, 171, 171, 96), float16] */;
  %123 = %122(%57, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 171, 171, 96), float16] */;
  %124 = fn (%p071: Tensor[(16, 171, 171, 96), float16] /* ty=Tensor[(16, 171, 171, 96), float16] */, %p157: Tensor[(96, 7, 7, 1), float16] /* ty=Tensor[(96, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 96), float16] {
    nn.conv2d(%p071, %p157, strides=[2, 2], padding=[0, 0, 0, 0], groups=96, channels=96, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 96), float16] */
  } /* ty=fn (Tensor[(16, 171, 171, 96), float16], Tensor[(96, 7, 7, 1), float16]) -> Tensor[(16, 83, 83, 96), float16] */;
  %125 = %124(%123, meta[relay.Constant][30] /* ty=Tensor[(96, 7, 7, 1), float16] */) /* ty=Tensor[(16, 83, 83, 96), float16] */;
  %126 = fn (%p070: Tensor[(16, 83, 83, 96), float16] /* ty=Tensor[(16, 83, 83, 96), float16] */, %p156: Tensor[(42, 1, 1, 96), float16] /* ty=Tensor[(42, 1, 1, 96), float16] */, %p235: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, %p334: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    %118 = nn.conv2d(%p070, %p156, padding=[0, 0, 0, 0], channels=42, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %119 = multiply(%118, %p235) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %120 = add(%119, %p334) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    nn.relu(%120) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 96), float16], Tensor[(42, 1, 1, 96), float16], Tensor[(42), float16], Tensor[(42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %127 = %126(%125, meta[relay.Constant][31] /* ty=Tensor[(42, 1, 1, 96), float16] */, meta[relay.Constant][32] /* ty=Tensor[(42), float16] */, meta[relay.Constant][33] /* ty=Tensor[(42), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %128 = fn (%p069: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p155: Tensor[(42, 7, 7, 1), float16] /* ty=Tensor[(42, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    nn.conv2d(%p069, %p155, padding=[3, 3, 3, 3], groups=42, channels=42, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(42, 7, 7, 1), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %129 = %128(%127, meta[relay.Constant][34] /* ty=Tensor[(42, 7, 7, 1), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %130 = fn (%p068: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p154: Tensor[(42, 1, 1, 42), float16] /* ty=Tensor[(42, 1, 1, 42), float16] */, %p234: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, %p333: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    %116 = nn.conv2d(%p068, %p154, padding=[0, 0, 0, 0], channels=42, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %117 = multiply(%116, %p234) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    add(%117, %p333) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(42, 1, 1, 42), float16], Tensor[(42), float16], Tensor[(42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %131 = %115(%114, meta[relay.Constant][26] /* ty=Tensor[(42, 5, 5, 1), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %132 = %130(%129, meta[relay.Constant][35] /* ty=Tensor[(42, 1, 1, 42), float16] */, meta[relay.Constant][36] /* ty=Tensor[(42), float16] */, meta[relay.Constant][37] /* ty=Tensor[(42), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %133 = fn (%p063: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p149: Tensor[(42, 1, 1, 42), float16] /* ty=Tensor[(42, 1, 1, 42), float16] */, %p232: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, %p331: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, %p49: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    %102 = nn.conv2d(%p063, %p149, padding=[0, 0, 0, 0], channels=42, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %103 = multiply(%102, %p232) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %104 = add(%103, %p331) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    add(%104, %p49) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(42, 1, 1, 42), float16], Tensor[(42), float16], Tensor[(42), float16], Tensor[(16, 83, 83, 42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %134 = %133(%131, meta[relay.Constant][27] /* ty=Tensor[(42, 1, 1, 42), float16] */, meta[relay.Constant][28] /* ty=Tensor[(42), float16] */, meta[relay.Constant][29] /* ty=Tensor[(42), float16] */, %132) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %135 = %80(%78, %79) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %136 = fn (%p062: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p148: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    %101 = nn.avg_pool2d(%p062, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 83, 83, 42), float16] */;
    add(%101, %p148) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(16, 83, 83, 42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %143 = fn (%p077: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    nn.relu(%p077) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %144 = %143(%134) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %145 = fn (%p076: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p162: Tensor[(42, 3, 3, 1), float16] /* ty=Tensor[(42, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    nn.conv2d(%p076, %p162, padding=[1, 1, 1, 1], groups=42, channels=42, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(42, 3, 3, 1), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %146 = %145(%144, meta[relay.Constant][38] /* ty=Tensor[(42, 3, 3, 1), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %147 = fn (%p075: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p161: Tensor[(42, 1, 1, 42), float16] /* ty=Tensor[(42, 1, 1, 42), float16] */, %p237: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, %p336: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    %140 = nn.conv2d(%p075, %p161, padding=[0, 0, 0, 0], channels=42, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %141 = multiply(%140, %p237) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %142 = add(%141, %p336) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    nn.relu(%142) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(42, 1, 1, 42), float16], Tensor[(42), float16], Tensor[(42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %148 = %147(%146, meta[relay.Constant][39] /* ty=Tensor[(42, 1, 1, 42), float16] */, meta[relay.Constant][40] /* ty=Tensor[(42), float16] */, meta[relay.Constant][41] /* ty=Tensor[(42), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %149 = fn (%p074: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p160: Tensor[(42, 3, 3, 1), float16] /* ty=Tensor[(42, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    nn.conv2d(%p074, %p160, padding=[1, 1, 1, 1], groups=42, channels=42, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(42, 3, 3, 1), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %150 = fn (%p079: Tensor[(16, 165, 165, 42), float16] /* ty=Tensor[(16, 165, 165, 42), float16] */, %p163: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 167, 167, 42), float16] {
    nn.pad(%p079, %p163, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(16, 167, 167, 42), float16] */
  } /* ty=fn (Tensor[(16, 165, 165, 42), float16], float16) -> Tensor[(16, 167, 167, 42), float16] */;
  %151 = %150(%61, -inff16 /* ty=float16 */) /* ty=Tensor[(16, 167, 167, 42), float16] */;
  %152 = fn (%p078: Tensor[(16, 167, 167, 42), float16] /* ty=Tensor[(16, 167, 167, 42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    nn.max_pool2d(%p078, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 167, 167, 42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %153 = %149(%148, meta[relay.Constant][42] /* ty=Tensor[(42, 3, 3, 1), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %154 = %152(%151) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %155 = fn (%p073: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p159: Tensor[(42, 1, 1, 42), float16] /* ty=Tensor[(42, 1, 1, 42), float16] */, %p236: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, %p335: Tensor[(42), float16] /* ty=Tensor[(42), float16] */, %p410: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    %137 = nn.conv2d(%p073, %p159, padding=[0, 0, 0, 0], channels=42, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %138 = multiply(%137, %p236) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    %139 = add(%138, %p335) /* ty=Tensor[(16, 83, 83, 42), float16] */;
    add(%139, %p410) /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(42, 1, 1, 42), float16], Tensor[(42), float16], Tensor[(42), float16], Tensor[(16, 83, 83, 42), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %156 = %100(%98, %99) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %157 = %136(%134, %135) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %158 = %155(%153, meta[relay.Constant][43] /* ty=Tensor[(42, 1, 1, 42), float16] */, meta[relay.Constant][44] /* ty=Tensor[(42), float16] */, meta[relay.Constant][45] /* ty=Tensor[(42), float16] */, %154) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %159 = fn (%p043: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p131: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p225: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p324: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 168), float16] {
    %47 = (%p043, %p131, %p225, %p324) /* ty=(Tensor[(16, 83, 83, 42), float16], Tensor[(16, 83, 83, 42), float16], Tensor[(16, 83, 83, 42), float16], Tensor[(16, 83, 83, 42), float16]) span=aten::cat_0:0:0 */;
    concatenate(%47, axis=3) /* ty=Tensor[(16, 83, 83, 168), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(16, 83, 83, 42), float16], Tensor[(16, 83, 83, 42), float16], Tensor[(16, 83, 83, 42), float16]) -> Tensor[(16, 83, 83, 168), float16] */;
  %160 = %159(%135, %156, %157, %158) /* ty=Tensor[(16, 83, 83, 168), float16] */;
  %161 = fn (%p042: Tensor[(16, 83, 83, 168), float16] /* ty=Tensor[(16, 83, 83, 168), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 168), float16] {
    nn.relu(%p042) /* ty=Tensor[(16, 83, 83, 168), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 168), float16]) -> Tensor[(16, 83, 83, 168), float16] */;
  %162 = %161(%160) /* ty=Tensor[(16, 83, 83, 168), float16] */;
  %163 = fn (%p041: Tensor[(16, 83, 83, 168), float16] /* ty=Tensor[(16, 83, 83, 168), float16] */, %p130: Tensor[(84, 1, 1, 168), float16] /* ty=Tensor[(84, 1, 1, 168), float16] */, %p224: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p323: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 84), float16] {
    %45 = nn.conv2d(%p041, %p130, padding=[0, 0, 0, 0], channels=84, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 84), float16] */;
    %46 = multiply(%45, %p224) /* ty=Tensor[(16, 83, 83, 84), float16] */;
    add(%46, %p323) /* ty=Tensor[(16, 83, 83, 84), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 168), float16], Tensor[(84, 1, 1, 168), float16], Tensor[(84), float16], Tensor[(84), float16]) -> Tensor[(16, 83, 83, 84), float16] */;
  %164 = %163(%162, meta[relay.Constant][46] /* ty=Tensor[(84, 1, 1, 168), float16] */, meta[relay.Constant][47] /* ty=Tensor[(84), float16] */, meta[relay.Constant][48] /* ty=Tensor[(84), float16] */) /* ty=Tensor[(16, 83, 83, 84), float16] */;
  %165 = fn (%p040: Tensor[(16, 83, 83, 84), float16] /* ty=Tensor[(16, 83, 83, 84), float16] */, %p129: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 85, 85, 84), float16] {
    nn.pad(%p040, %p129, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(16, 85, 85, 84), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 84), float16], float16) -> Tensor[(16, 85, 85, 84), float16] */;
  %175 = fn (%p088: Tensor[(16, 165, 165, 96), float16] /* ty=Tensor[(16, 165, 165, 96), float16] */, Primitive=1) -> Tensor[(16, 165, 165, 96), float16] {
    nn.relu(%p088) /* ty=Tensor[(16, 165, 165, 96), float16] */
  } /* ty=fn (Tensor[(16, 165, 165, 96), float16]) -> Tensor[(16, 165, 165, 96), float16] */;
  %176 = %175(%57) /* ty=Tensor[(16, 165, 165, 96), float16] */;
  %177 = fn (%p087: Tensor[(16, 165, 165, 96), float16] /* ty=Tensor[(16, 165, 165, 96), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 96), float16] {
    nn.avg_pool2d(%p087, pool_size=[1, 1], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 83, 83, 96), float16] */
  } /* ty=fn (Tensor[(16, 165, 165, 96), float16]) -> Tensor[(16, 83, 83, 96), float16] */;
  %178 = %177(%176) /* ty=Tensor[(16, 83, 83, 96), float16] */;
  %179 = fn (%p086: Tensor[(16, 83, 83, 96), float16] /* ty=Tensor[(16, 83, 83, 96), float16] */, %p170: Tensor[(42, 1, 1, 96), float16] /* ty=Tensor[(42, 1, 1, 96), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    nn.conv2d(%p086, %p170, padding=[0, 0, 0, 0], channels=42, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 96), float16], Tensor[(42, 1, 1, 96), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %180 = fn (%p091: Tensor[(16, 165, 165, 96), float16] /* ty=Tensor[(16, 165, 165, 96), float16] */, %p172: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 165, 165, 96), float16] {
    nn.pad(%p091, %p172, pad_width=[[0, 0], [-1, 1], [-1, 1], [0, 0]]) /* ty=Tensor[(16, 165, 165, 96), float16] */
  } /* ty=fn (Tensor[(16, 165, 165, 96), float16], float16) -> Tensor[(16, 165, 165, 96), float16] */;
  %181 = %180(%176, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 165, 165, 96), float16] */;
  %182 = fn (%p090: Tensor[(16, 165, 165, 96), float16] /* ty=Tensor[(16, 165, 165, 96), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 96), float16] {
    nn.avg_pool2d(%p090, pool_size=[1, 1], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 83, 83, 96), float16] */
  } /* ty=fn (Tensor[(16, 165, 165, 96), float16]) -> Tensor[(16, 83, 83, 96), float16] */;
  %183 = %182(%181) /* ty=Tensor[(16, 83, 83, 96), float16] */;
  %184 = fn (%p089: Tensor[(16, 83, 83, 96), float16] /* ty=Tensor[(16, 83, 83, 96), float16] */, %p171: Tensor[(42, 1, 1, 96), float16] /* ty=Tensor[(42, 1, 1, 96), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 42), float16] {
    nn.conv2d(%p089, %p171, padding=[0, 0, 0, 0], channels=42, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 83, 83, 42), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 96), float16], Tensor[(42, 1, 1, 96), float16]) -> Tensor[(16, 83, 83, 42), float16] */;
  %185 = %179(%178, meta[relay.Constant][49] /* ty=Tensor[(42, 1, 1, 96), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %186 = %184(%183, meta[relay.Constant][50] /* ty=Tensor[(42, 1, 1, 96), float16] */) /* ty=Tensor[(16, 83, 83, 42), float16] */;
  %187 = fn (%p085: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p169: Tensor[(16, 83, 83, 42), float16] /* ty=Tensor[(16, 83, 83, 42), float16] */, %p240: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p339: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 84), float16] {
    %172 = (%p085, %p169) /* ty=(Tensor[(16, 83, 83, 42), float16], Tensor[(16, 83, 83, 42), float16]) span=aten::cat_1:0:0 */;
    %173 = concatenate(%172, axis=3) /* ty=Tensor[(16, 83, 83, 84), float16] */;
    %174 = multiply(%173, %p240) /* ty=Tensor[(16, 83, 83, 84), float16] */;
    add(%174, %p339) /* ty=Tensor[(16, 83, 83, 84), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 42), float16], Tensor[(16, 83, 83, 42), float16], Tensor[(84), float16], Tensor[(84), float16]) -> Tensor[(16, 83, 83, 84), float16] */;
  %188 = %187(%185, %186, meta[relay.Constant][51] /* ty=Tensor[(84), float16] */, meta[relay.Constant][52] /* ty=Tensor[(84), float16] */) /* ty=Tensor[(16, 83, 83, 84), float16] */;
  %189 = fn (%p084: Tensor[(16, 83, 83, 84), float16] /* ty=Tensor[(16, 83, 83, 84), float16] */, %p168: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 89, 89, 84), float16] {
    %171 = nn.relu(%p084) /* ty=Tensor[(16, 83, 83, 84), float16] */;
    nn.pad(%171, %p168, pad_width=[[0, 0], [3, 3], [3, 3], [0, 0]]) /* ty=Tensor[(16, 89, 89, 84), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 84), float16], float16) -> Tensor[(16, 89, 89, 84), float16] */;
  %190 = %189(%188, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 89, 89, 84), float16] */;
  %191 = fn (%p083: Tensor[(16, 89, 89, 84), float16] /* ty=Tensor[(16, 89, 89, 84), float16] */, %p167: Tensor[(84, 7, 7, 1), float16] /* ty=Tensor[(84, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.conv2d(%p083, %p167, strides=[2, 2], padding=[0, 0, 0, 0], groups=84, channels=84, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 89, 89, 84), float16], Tensor[(84, 7, 7, 1), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %192 = %191(%190, meta[relay.Constant][53] /* ty=Tensor[(84, 7, 7, 1), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %193 = fn (%p082: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p166: Tensor[(84, 1, 1, 84), float16] /* ty=Tensor[(84, 1, 1, 84), float16] */, %p239: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p338: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    %168 = nn.conv2d(%p082, %p166, padding=[0, 0, 0, 0], channels=84, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %169 = multiply(%168, %p239) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %170 = add(%169, %p338) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    nn.relu(%170) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 1, 1, 84), float16], Tensor[(84), float16], Tensor[(84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %194 = %193(%192, meta[relay.Constant][54] /* ty=Tensor[(84, 1, 1, 84), float16] */, meta[relay.Constant][55] /* ty=Tensor[(84), float16] */, meta[relay.Constant][56] /* ty=Tensor[(84), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %195 = fn (%p081: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p165: Tensor[(84, 7, 7, 1), float16] /* ty=Tensor[(84, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.conv2d(%p081, %p165, padding=[3, 3, 3, 3], groups=84, channels=84, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 7, 7, 1), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %196 = %195(%194, meta[relay.Constant][57] /* ty=Tensor[(84, 7, 7, 1), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %197 = fn (%p080: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p164: Tensor[(84, 1, 1, 84), float16] /* ty=Tensor[(84, 1, 1, 84), float16] */, %p238: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p337: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    %166 = nn.conv2d(%p080, %p164, padding=[0, 0, 0, 0], channels=84, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %167 = multiply(%166, %p238) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    add(%167, %p337) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 1, 1, 84), float16], Tensor[(84), float16], Tensor[(84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %198 = %165(%164, -inff16 /* ty=float16 */) /* ty=Tensor[(16, 85, 85, 84), float16] */;
  %199 = %197(%196, meta[relay.Constant][58] /* ty=Tensor[(84, 1, 1, 84), float16] */, meta[relay.Constant][59] /* ty=Tensor[(84), float16] */, meta[relay.Constant][60] /* ty=Tensor[(84), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %200 = fn (%p039: Tensor[(16, 85, 85, 84), float16] /* ty=Tensor[(16, 85, 85, 84), float16] */, %p128: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    %44 = nn.max_pool2d(%p039, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 84), float16] */;
    add(%44, %p128) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 85, 85, 84), float16], Tensor[(16, 42, 42, 84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %202 = fn (%p093: Tensor[(16, 83, 83, 84), float16] /* ty=Tensor[(16, 83, 83, 84), float16] */, %p174: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 85, 85, 84), float16] {
    nn.pad(%p093, %p174, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(16, 85, 85, 84), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 84), float16], float16) -> Tensor[(16, 85, 85, 84), float16] */;
  %209 = fn (%p098: Tensor[(16, 83, 83, 84), float16] /* ty=Tensor[(16, 83, 83, 84), float16] */, %p179: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 87, 87, 84), float16] {
    %208 = nn.relu(%p098) /* ty=Tensor[(16, 83, 83, 84), float16] */;
    nn.pad(%208, %p179, pad_width=[[0, 0], [2, 2], [2, 2], [0, 0]]) /* ty=Tensor[(16, 87, 87, 84), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 84), float16], float16) -> Tensor[(16, 87, 87, 84), float16] */;
  %210 = %209(%188, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 87, 87, 84), float16] */;
  %211 = fn (%p097: Tensor[(16, 87, 87, 84), float16] /* ty=Tensor[(16, 87, 87, 84), float16] */, %p178: Tensor[(84, 5, 5, 1), float16] /* ty=Tensor[(84, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.conv2d(%p097, %p178, strides=[2, 2], padding=[0, 0, 0, 0], groups=84, channels=84, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 87, 87, 84), float16], Tensor[(84, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %212 = %211(%210, meta[relay.Constant][61] /* ty=Tensor[(84, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %213 = fn (%p096: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p177: Tensor[(84, 1, 1, 84), float16] /* ty=Tensor[(84, 1, 1, 84), float16] */, %p242: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p341: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    %205 = nn.conv2d(%p096, %p177, padding=[0, 0, 0, 0], channels=84, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %206 = multiply(%205, %p242) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %207 = add(%206, %p341) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    nn.relu(%207) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 1, 1, 84), float16], Tensor[(84), float16], Tensor[(84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %214 = %213(%212, meta[relay.Constant][62] /* ty=Tensor[(84, 1, 1, 84), float16] */, meta[relay.Constant][63] /* ty=Tensor[(84), float16] */, meta[relay.Constant][64] /* ty=Tensor[(84), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %215 = fn (%p095: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p176: Tensor[(84, 5, 5, 1), float16] /* ty=Tensor[(84, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.conv2d(%p095, %p176, padding=[2, 2, 2, 2], groups=84, channels=84, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %216 = %215(%214, meta[relay.Constant][65] /* ty=Tensor[(84, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %217 = fn (%p094: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p175: Tensor[(84, 1, 1, 84), float16] /* ty=Tensor[(84, 1, 1, 84), float16] */, %p241: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p340: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    %203 = nn.conv2d(%p094, %p175, padding=[0, 0, 0, 0], channels=84, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %204 = multiply(%203, %p241) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    add(%204, %p340) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 1, 1, 84), float16], Tensor[(84), float16], Tensor[(84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %218 = %202(%164, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 85, 85, 84), float16] */;
  %219 = %217(%216, meta[relay.Constant][66] /* ty=Tensor[(84, 1, 1, 84), float16] */, meta[relay.Constant][67] /* ty=Tensor[(84), float16] */, meta[relay.Constant][68] /* ty=Tensor[(84), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %220 = fn (%p092: Tensor[(16, 85, 85, 84), float16] /* ty=Tensor[(16, 85, 85, 84), float16] */, %p173: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    %201 = nn.avg_pool2d(%p092, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 84), float16] */;
    add(%201, %p173) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 85, 85, 84), float16], Tensor[(16, 42, 42, 84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %229 = fn (%p0104: Tensor[(16, 83, 83, 84), float16] /* ty=Tensor[(16, 83, 83, 84), float16] */, %p185: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 87, 87, 84), float16] {
    %228 = nn.relu(%p0104) /* ty=Tensor[(16, 83, 83, 84), float16] */;
    nn.pad(%228, %p185, pad_width=[[0, 0], [2, 2], [2, 2], [0, 0]]) /* ty=Tensor[(16, 87, 87, 84), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 84), float16], float16) -> Tensor[(16, 87, 87, 84), float16] */;
  %230 = %229(%164, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 87, 87, 84), float16] */;
  %231 = fn (%p0103: Tensor[(16, 87, 87, 84), float16] /* ty=Tensor[(16, 87, 87, 84), float16] */, %p184: Tensor[(84, 5, 5, 1), float16] /* ty=Tensor[(84, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.conv2d(%p0103, %p184, strides=[2, 2], padding=[0, 0, 0, 0], groups=84, channels=84, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 87, 87, 84), float16], Tensor[(84, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %232 = %231(%230, meta[relay.Constant][69] /* ty=Tensor[(84, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %233 = fn (%p0102: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p183: Tensor[(84, 1, 1, 84), float16] /* ty=Tensor[(84, 1, 1, 84), float16] */, %p244: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p343: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    %225 = nn.conv2d(%p0102, %p183, padding=[0, 0, 0, 0], channels=84, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %226 = multiply(%225, %p244) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %227 = add(%226, %p343) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    nn.relu(%227) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 1, 1, 84), float16], Tensor[(84), float16], Tensor[(84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %234 = %233(%232, meta[relay.Constant][70] /* ty=Tensor[(84, 1, 1, 84), float16] */, meta[relay.Constant][71] /* ty=Tensor[(84), float16] */, meta[relay.Constant][72] /* ty=Tensor[(84), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %235 = fn (%p0101: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p182: Tensor[(84, 5, 5, 1), float16] /* ty=Tensor[(84, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.conv2d(%p0101, %p182, padding=[2, 2, 2, 2], groups=84, channels=84, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %242 = fn (%p0109: Tensor[(16, 83, 83, 84), float16] /* ty=Tensor[(16, 83, 83, 84), float16] */, %p190: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 89, 89, 84), float16] {
    %241 = nn.relu(%p0109) /* ty=Tensor[(16, 83, 83, 84), float16] */;
    nn.pad(%241, %p190, pad_width=[[0, 0], [3, 3], [3, 3], [0, 0]]) /* ty=Tensor[(16, 89, 89, 84), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 84), float16], float16) -> Tensor[(16, 89, 89, 84), float16] */;
  %243 = %242(%188, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 89, 89, 84), float16] */;
  %244 = fn (%p0108: Tensor[(16, 89, 89, 84), float16] /* ty=Tensor[(16, 89, 89, 84), float16] */, %p189: Tensor[(84, 7, 7, 1), float16] /* ty=Tensor[(84, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.conv2d(%p0108, %p189, strides=[2, 2], padding=[0, 0, 0, 0], groups=84, channels=84, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 89, 89, 84), float16], Tensor[(84, 7, 7, 1), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %245 = %244(%243, meta[relay.Constant][77] /* ty=Tensor[(84, 7, 7, 1), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %246 = fn (%p0107: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p188: Tensor[(84, 1, 1, 84), float16] /* ty=Tensor[(84, 1, 1, 84), float16] */, %p246: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p345: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    %238 = nn.conv2d(%p0107, %p188, padding=[0, 0, 0, 0], channels=84, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %239 = multiply(%238, %p246) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %240 = add(%239, %p345) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    nn.relu(%240) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 1, 1, 84), float16], Tensor[(84), float16], Tensor[(84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %247 = %246(%245, meta[relay.Constant][78] /* ty=Tensor[(84, 1, 1, 84), float16] */, meta[relay.Constant][79] /* ty=Tensor[(84), float16] */, meta[relay.Constant][80] /* ty=Tensor[(84), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %248 = fn (%p0106: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p187: Tensor[(84, 7, 7, 1), float16] /* ty=Tensor[(84, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.conv2d(%p0106, %p187, padding=[3, 3, 3, 3], groups=84, channels=84, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 7, 7, 1), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %249 = %248(%247, meta[relay.Constant][81] /* ty=Tensor[(84, 7, 7, 1), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %250 = fn (%p0105: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p186: Tensor[(84, 1, 1, 84), float16] /* ty=Tensor[(84, 1, 1, 84), float16] */, %p245: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p344: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    %236 = nn.conv2d(%p0105, %p186, padding=[0, 0, 0, 0], channels=84, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %237 = multiply(%236, %p245) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    add(%237, %p344) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 1, 1, 84), float16], Tensor[(84), float16], Tensor[(84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %251 = %235(%234, meta[relay.Constant][73] /* ty=Tensor[(84, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %252 = %250(%249, meta[relay.Constant][82] /* ty=Tensor[(84, 1, 1, 84), float16] */, meta[relay.Constant][83] /* ty=Tensor[(84), float16] */, meta[relay.Constant][84] /* ty=Tensor[(84), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %253 = fn (%p0100: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p181: Tensor[(84, 1, 1, 84), float16] /* ty=Tensor[(84, 1, 1, 84), float16] */, %p243: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p342: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p411: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    %222 = nn.conv2d(%p0100, %p181, padding=[0, 0, 0, 0], channels=84, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %223 = multiply(%222, %p243) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %224 = add(%223, %p342) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    add(%224, %p411) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 1, 1, 84), float16], Tensor[(84), float16], Tensor[(84), float16], Tensor[(16, 42, 42, 84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %254 = %253(%251, meta[relay.Constant][74] /* ty=Tensor[(84, 1, 1, 84), float16] */, meta[relay.Constant][75] /* ty=Tensor[(84), float16] */, meta[relay.Constant][76] /* ty=Tensor[(84), float16] */, %252) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %255 = %200(%198, %199) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %256 = fn (%p099: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p180: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    %221 = nn.avg_pool2d(%p099, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 84), float16] */;
    add(%221, %p180) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(16, 42, 42, 84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %263 = fn (%p0114: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.relu(%p0114) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %264 = %263(%254) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %265 = fn (%p0113: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p194: Tensor[(84, 3, 3, 1), float16] /* ty=Tensor[(84, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.conv2d(%p0113, %p194, padding=[1, 1, 1, 1], groups=84, channels=84, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %266 = %265(%264, meta[relay.Constant][85] /* ty=Tensor[(84, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %267 = fn (%p0112: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p193: Tensor[(84, 1, 1, 84), float16] /* ty=Tensor[(84, 1, 1, 84), float16] */, %p248: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p347: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    %260 = nn.conv2d(%p0112, %p193, padding=[0, 0, 0, 0], channels=84, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %261 = multiply(%260, %p248) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %262 = add(%261, %p347) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    nn.relu(%262) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 1, 1, 84), float16], Tensor[(84), float16], Tensor[(84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %268 = %267(%266, meta[relay.Constant][86] /* ty=Tensor[(84, 1, 1, 84), float16] */, meta[relay.Constant][87] /* ty=Tensor[(84), float16] */, meta[relay.Constant][88] /* ty=Tensor[(84), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %269 = fn (%p0111: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p192: Tensor[(84, 3, 3, 1), float16] /* ty=Tensor[(84, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.conv2d(%p0111, %p192, padding=[1, 1, 1, 1], groups=84, channels=84, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %270 = fn (%p0116: Tensor[(16, 83, 83, 84), float16] /* ty=Tensor[(16, 83, 83, 84), float16] */, %p195: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 85, 85, 84), float16] {
    nn.pad(%p0116, %p195, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(16, 85, 85, 84), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 84), float16], float16) -> Tensor[(16, 85, 85, 84), float16] */;
  %271 = %270(%164, -inff16 /* ty=float16 */) /* ty=Tensor[(16, 85, 85, 84), float16] */;
  %272 = fn (%p0115: Tensor[(16, 85, 85, 84), float16] /* ty=Tensor[(16, 85, 85, 84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.max_pool2d(%p0115, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 85, 85, 84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %273 = %269(%268, meta[relay.Constant][89] /* ty=Tensor[(84, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %274 = %272(%271) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %275 = fn (%p0110: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p191: Tensor[(84, 1, 1, 84), float16] /* ty=Tensor[(84, 1, 1, 84), float16] */, %p247: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p346: Tensor[(84), float16] /* ty=Tensor[(84), float16] */, %p412: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    %257 = nn.conv2d(%p0110, %p191, padding=[0, 0, 0, 0], channels=84, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %258 = multiply(%257, %p247) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    %259 = add(%258, %p346) /* ty=Tensor[(16, 42, 42, 84), float16] */;
    add(%259, %p412) /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(84, 1, 1, 84), float16], Tensor[(84), float16], Tensor[(84), float16], Tensor[(16, 42, 42, 84), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %276 = %220(%218, %219) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %277 = %256(%254, %255) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %278 = %275(%273, meta[relay.Constant][90] /* ty=Tensor[(84, 1, 1, 84), float16] */, meta[relay.Constant][91] /* ty=Tensor[(84), float16] */, meta[relay.Constant][92] /* ty=Tensor[(84), float16] */, %274) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %279 = fn (%p038: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p127: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p223: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p322: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 336), float16] {
    %43 = (%p038, %p127, %p223, %p322) /* ty=(Tensor[(16, 42, 42, 84), float16], Tensor[(16, 42, 42, 84), float16], Tensor[(16, 42, 42, 84), float16], Tensor[(16, 42, 42, 84), float16]) span=aten::cat_2:0:0 */;
    concatenate(%43, axis=3) /* ty=Tensor[(16, 42, 42, 336), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(16, 42, 42, 84), float16], Tensor[(16, 42, 42, 84), float16], Tensor[(16, 42, 42, 84), float16]) -> Tensor[(16, 42, 42, 336), float16] */;
  %280 = %279(%255, %276, %277, %278) /* ty=Tensor[(16, 42, 42, 336), float16] */;
  %281 = fn (%p037: Tensor[(16, 42, 42, 336), float16] /* ty=Tensor[(16, 42, 42, 336), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 336), float16] {
    nn.relu(%p037) /* ty=Tensor[(16, 42, 42, 336), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 336), float16]) -> Tensor[(16, 42, 42, 336), float16] */;
  %282 = %281(%280) /* ty=Tensor[(16, 42, 42, 336), float16] */;
  %283 = fn (%p036: Tensor[(16, 42, 42, 336), float16] /* ty=Tensor[(16, 42, 42, 336), float16] */, %p126: Tensor[(168, 1, 1, 336), float16] /* ty=Tensor[(168, 1, 1, 336), float16] */, %p222: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p321: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %41 = nn.conv2d(%p036, %p126, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %42 = multiply(%41, %p222) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%42, %p321) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 336), float16], Tensor[(168, 1, 1, 336), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %296 = fn (%p0128: Tensor[(16, 83, 83, 168), float16] /* ty=Tensor[(16, 83, 83, 168), float16] */, Primitive=1) -> Tensor[(16, 83, 83, 168), float16] {
    nn.relu(%p0128) /* ty=Tensor[(16, 83, 83, 168), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 168), float16]) -> Tensor[(16, 83, 83, 168), float16] */;
  %297 = %296(%160) /* ty=Tensor[(16, 83, 83, 168), float16] */;
  %298 = fn (%p0127: Tensor[(16, 83, 83, 168), float16] /* ty=Tensor[(16, 83, 83, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.avg_pool2d(%p0127, pool_size=[1, 1], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %299 = %298(%297) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %300 = fn (%p0126: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1103: Tensor[(84, 1, 1, 168), float16] /* ty=Tensor[(84, 1, 1, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.conv2d(%p0126, %p1103, padding=[0, 0, 0, 0], channels=84, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(84, 1, 1, 168), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %301 = fn (%p0131: Tensor[(16, 83, 83, 168), float16] /* ty=Tensor[(16, 83, 83, 168), float16] */, %p1105: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 83, 83, 168), float16] {
    nn.pad(%p0131, %p1105, pad_width=[[0, 0], [-1, 1], [-1, 1], [0, 0]]) /* ty=Tensor[(16, 83, 83, 168), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 168), float16], float16) -> Tensor[(16, 83, 83, 168), float16] */;
  %302 = %301(%297, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 83, 83, 168), float16] */;
  %303 = fn (%p0130: Tensor[(16, 83, 83, 168), float16] /* ty=Tensor[(16, 83, 83, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.avg_pool2d(%p0130, pool_size=[1, 1], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 83, 83, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %304 = %303(%302) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %305 = fn (%p0129: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1104: Tensor[(84, 1, 1, 168), float16] /* ty=Tensor[(84, 1, 1, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 84), float16] {
    nn.conv2d(%p0129, %p1104, padding=[0, 0, 0, 0], channels=84, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 84), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(84, 1, 1, 168), float16]) -> Tensor[(16, 42, 42, 84), float16] */;
  %306 = %300(%299, meta[relay.Constant][96] /* ty=Tensor[(84, 1, 1, 168), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %307 = %305(%304, meta[relay.Constant][97] /* ty=Tensor[(84, 1, 1, 168), float16] */) /* ty=Tensor[(16, 42, 42, 84), float16] */;
  %308 = fn (%p0125: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p1102: Tensor[(16, 42, 42, 84), float16] /* ty=Tensor[(16, 42, 42, 84), float16] */, %p253: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p352: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %293 = (%p0125, %p1102) /* ty=(Tensor[(16, 42, 42, 84), float16], Tensor[(16, 42, 42, 84), float16]) span=aten::cat_3:0:0 */;
    %294 = concatenate(%293, axis=3) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %295 = multiply(%294, %p253) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%295, %p352) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 84), float16], Tensor[(16, 42, 42, 84), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %317 = fn (%p0138: Tensor[(16, 42, 42, 336), float16] /* ty=Tensor[(16, 42, 42, 336), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 336), float16] {
    nn.relu(%p0138) /* ty=Tensor[(16, 42, 42, 336), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 336), float16]) -> Tensor[(16, 42, 42, 336), float16] */;
  %318 = %317(%280) /* ty=Tensor[(16, 42, 42, 336), float16] */;
  %319 = fn (%p0137: Tensor[(16, 42, 42, 336), float16] /* ty=Tensor[(16, 42, 42, 336), float16] */, %p1110: Tensor[(168, 1, 1, 336), float16] /* ty=Tensor[(168, 1, 1, 336), float16] */, %p256: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p355: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %315 = nn.conv2d(%p0137, %p1110, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %316 = multiply(%315, %p256) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%316, %p355) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 336), float16], Tensor[(168, 1, 1, 336), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %320 = %319(%318, meta[relay.Constant][100] /* ty=Tensor[(168, 1, 1, 336), float16] */, meta[relay.Constant][101] /* ty=Tensor[(168), float16] */, meta[relay.Constant][102] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %321 = fn (%p0136: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0136) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %322 = %321(%320) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %323 = fn (%p0135: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1109: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0135, %p1109, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %324 = %323(%322, meta[relay.Constant][103] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %325 = fn (%p0134: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1108: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p255: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p354: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %312 = nn.conv2d(%p0134, %p1108, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %313 = multiply(%312, %p255) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %314 = add(%313, %p354) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%314) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %326 = %325(%324, meta[relay.Constant][104] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][105] /* ty=Tensor[(168), float16] */, meta[relay.Constant][106] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %327 = fn (%p0133: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1107: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0133, %p1107, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %333 = %308(%306, %307, meta[relay.Constant][98] /* ty=Tensor[(168), float16] */, meta[relay.Constant][99] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %334 = fn (%p0143: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0143) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %335 = %334(%333) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %336 = fn (%p0142: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1114: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0142, %p1114, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %337 = %336(%335, meta[relay.Constant][111] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %338 = fn (%p0141: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1113: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p258: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p357: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %330 = nn.conv2d(%p0141, %p1113, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %331 = multiply(%330, %p258) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %332 = add(%331, %p357) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%332) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %339 = %338(%337, meta[relay.Constant][112] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][113] /* ty=Tensor[(168), float16] */, meta[relay.Constant][114] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %340 = fn (%p0140: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1112: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0140, %p1112, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %341 = %340(%339, meta[relay.Constant][115] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %342 = fn (%p0139: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1111: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p257: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p356: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %328 = nn.conv2d(%p0139, %p1111, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %329 = multiply(%328, %p257) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%329, %p356) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %343 = %327(%326, meta[relay.Constant][107] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %344 = %342(%341, meta[relay.Constant][116] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][117] /* ty=Tensor[(168), float16] */, meta[relay.Constant][118] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %345 = fn (%p0132: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1106: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p254: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p353: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p415: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %309 = nn.conv2d(%p0132, %p1106, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %310 = multiply(%309, %p254) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %311 = add(%310, %p353) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%311, %p415) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %352 = fn (%p0148: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0148) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %353 = %352(%333) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %354 = fn (%p0147: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1118: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0147, %p1118, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %355 = %354(%353, meta[relay.Constant][119] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %356 = fn (%p0146: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1117: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p260: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p359: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %349 = nn.conv2d(%p0146, %p1117, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %350 = multiply(%349, %p260) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %351 = add(%350, %p359) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%351) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %357 = %356(%355, meta[relay.Constant][120] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][121] /* ty=Tensor[(168), float16] */, meta[relay.Constant][122] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %358 = fn (%p0145: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1116: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0145, %p1116, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %364 = fn (%p0153: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0153) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %365 = %364(%333) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %366 = fn (%p0152: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1122: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0152, %p1122, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %367 = %366(%365, meta[relay.Constant][127] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %368 = fn (%p0151: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1121: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p262: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p361: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %361 = nn.conv2d(%p0151, %p1121, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %362 = multiply(%361, %p262) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %363 = add(%362, %p361) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%363) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %369 = %368(%367, meta[relay.Constant][128] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][129] /* ty=Tensor[(168), float16] */, meta[relay.Constant][130] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %370 = fn (%p0150: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1120: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0150, %p1120, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %371 = %370(%369, meta[relay.Constant][131] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %372 = fn (%p0149: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1119: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p261: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p360: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %359 = nn.conv2d(%p0149, %p1119, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %360 = multiply(%359, %p261) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%360, %p360) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %373 = %358(%357, meta[relay.Constant][123] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %374 = %372(%371, meta[relay.Constant][132] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][133] /* ty=Tensor[(168), float16] */, meta[relay.Constant][134] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %375 = fn (%p0144: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1115: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p259: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p358: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p416: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %346 = nn.conv2d(%p0144, %p1115, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %347 = multiply(%346, %p259) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %348 = add(%347, %p358) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%348, %p416) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %377 = fn (%p0154: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1123: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %376 = nn.avg_pool2d(%p0154, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%376, %p1123) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %379 = fn (%p0156: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.avg_pool2d(%p0156, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %380 = %379(%333) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %381 = fn (%p0155: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1124: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %378 = nn.avg_pool2d(%p0155, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%378, %p1124) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %388 = fn (%p0161: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0161) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %389 = %388(%320) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %390 = fn (%p0160: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1128: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0160, %p1128, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %391 = %390(%389, meta[relay.Constant][135] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %392 = fn (%p0159: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1127: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p264: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p363: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %385 = nn.conv2d(%p0159, %p1127, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %386 = multiply(%385, %p264) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %387 = add(%386, %p363) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%387) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %393 = %392(%391, meta[relay.Constant][136] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][137] /* ty=Tensor[(168), float16] */, meta[relay.Constant][138] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %394 = fn (%p0158: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1126: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0158, %p1126, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %395 = %394(%393, meta[relay.Constant][139] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %396 = fn (%p0157: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1125: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p263: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p362: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p417: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %382 = nn.conv2d(%p0157, %p1125, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %383 = multiply(%382, %p263) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %384 = add(%383, %p362) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%384, %p417) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %397 = %345(%343, meta[relay.Constant][108] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][109] /* ty=Tensor[(168), float16] */, meta[relay.Constant][110] /* ty=Tensor[(168), float16] */, %344) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %398 = %375(%373, meta[relay.Constant][124] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][125] /* ty=Tensor[(168), float16] */, meta[relay.Constant][126] /* ty=Tensor[(168), float16] */, %374) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %399 = %377(%320, %333) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %400 = %381(%333, %380) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %401 = %396(%395, meta[relay.Constant][140] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][141] /* ty=Tensor[(168), float16] */, meta[relay.Constant][142] /* ty=Tensor[(168), float16] */, %320) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %402 = fn (%p0124: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1101: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p252: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p351: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p414: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p59: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    %292 = (%p0124, %p1101, %p252, %p351, %p414, %p59) /* ty=(Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) span=aten::cat_4:0:0 */;
    concatenate(%292, axis=3) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %403 = %402(%333, %397, %398, %399, %400, %401) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %404 = fn (%p0123: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    nn.relu(%p0123) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %405 = %404(%403) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %406 = fn (%p0122: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, %p1100: Tensor[(168, 1, 1, 1008), float16] /* ty=Tensor[(168, 1, 1, 1008), float16] */, %p251: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p350: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %290 = nn.conv2d(%p0122, %p1100, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %291 = multiply(%290, %p251) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%291, %p350) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16], Tensor[(168, 1, 1, 1008), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %407 = %406(%405, meta[relay.Constant][143] /* ty=Tensor[(168, 1, 1, 1008), float16] */, meta[relay.Constant][144] /* ty=Tensor[(168), float16] */, meta[relay.Constant][145] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %408 = fn (%p0121: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0121) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %409 = %408(%407) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %410 = fn (%p0120: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p199: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0120, %p199, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %411 = %410(%409, meta[relay.Constant][146] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %412 = fn (%p0119: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p198: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p250: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p349: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %287 = nn.conv2d(%p0119, %p198, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %288 = multiply(%287, %p250) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %289 = add(%288, %p349) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%289) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %413 = %412(%411, meta[relay.Constant][147] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][148] /* ty=Tensor[(168), float16] */, meta[relay.Constant][149] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %414 = fn (%p0118: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p197: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0118, %p197, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %420 = %283(%282, meta[relay.Constant][93] /* ty=Tensor[(168, 1, 1, 336), float16] */, meta[relay.Constant][94] /* ty=Tensor[(168), float16] */, meta[relay.Constant][95] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %421 = fn (%p0166: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0166) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %422 = %421(%420) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %423 = fn (%p0165: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1132: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0165, %p1132, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %424 = %423(%422, meta[relay.Constant][154] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %425 = fn (%p0164: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1131: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p266: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p365: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %417 = nn.conv2d(%p0164, %p1131, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %418 = multiply(%417, %p266) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %419 = add(%418, %p365) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%419) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %426 = %425(%424, meta[relay.Constant][155] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][156] /* ty=Tensor[(168), float16] */, meta[relay.Constant][157] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %427 = fn (%p0163: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1130: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0163, %p1130, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %428 = %427(%426, meta[relay.Constant][158] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %429 = fn (%p0162: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1129: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p265: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p364: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %415 = nn.conv2d(%p0162, %p1129, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %416 = multiply(%415, %p265) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%416, %p364) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %430 = %414(%413, meta[relay.Constant][150] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %431 = %429(%428, meta[relay.Constant][159] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][160] /* ty=Tensor[(168), float16] */, meta[relay.Constant][161] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %432 = fn (%p0117: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p196: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p249: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p348: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p413: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %284 = nn.conv2d(%p0117, %p196, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %285 = multiply(%284, %p249) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %286 = add(%285, %p348) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%286, %p413) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %439 = fn (%p0171: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0171) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %440 = %439(%420) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %441 = fn (%p0170: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1136: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0170, %p1136, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %442 = %441(%440, meta[relay.Constant][162] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %443 = fn (%p0169: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1135: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p268: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p367: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %436 = nn.conv2d(%p0169, %p1135, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %437 = multiply(%436, %p268) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %438 = add(%437, %p367) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%438) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %444 = %443(%442, meta[relay.Constant][163] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][164] /* ty=Tensor[(168), float16] */, meta[relay.Constant][165] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %445 = fn (%p0168: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1134: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0168, %p1134, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %451 = fn (%p0176: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0176) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %452 = %451(%420) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %453 = fn (%p0175: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1140: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0175, %p1140, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %454 = %453(%452, meta[relay.Constant][170] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %455 = fn (%p0174: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1139: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p270: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p369: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %448 = nn.conv2d(%p0174, %p1139, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %449 = multiply(%448, %p270) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %450 = add(%449, %p369) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%450) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %456 = %455(%454, meta[relay.Constant][171] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][172] /* ty=Tensor[(168), float16] */, meta[relay.Constant][173] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %457 = fn (%p0173: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1138: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0173, %p1138, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %458 = %457(%456, meta[relay.Constant][174] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %459 = fn (%p0172: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1137: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p269: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p368: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %446 = nn.conv2d(%p0172, %p1137, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %447 = multiply(%446, %p269) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%447, %p368) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %460 = %445(%444, meta[relay.Constant][166] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %461 = %459(%458, meta[relay.Constant][175] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][176] /* ty=Tensor[(168), float16] */, meta[relay.Constant][177] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %462 = fn (%p0167: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1133: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p267: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p366: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p418: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %433 = nn.conv2d(%p0167, %p1133, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %434 = multiply(%433, %p267) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %435 = add(%434, %p366) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%435, %p418) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %464 = fn (%p0177: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1141: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %463 = nn.avg_pool2d(%p0177, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%463, %p1141) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %466 = fn (%p0179: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.avg_pool2d(%p0179, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %467 = %466(%420) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %468 = fn (%p0178: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1142: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %465 = nn.avg_pool2d(%p0178, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%465, %p1142) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %475 = fn (%p0184: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0184) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %476 = %475(%407) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %477 = fn (%p0183: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1146: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0183, %p1146, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %478 = %477(%476, meta[relay.Constant][178] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %479 = fn (%p0182: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1145: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p272: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p371: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %472 = nn.conv2d(%p0182, %p1145, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %473 = multiply(%472, %p272) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %474 = add(%473, %p371) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%474) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %480 = %479(%478, meta[relay.Constant][179] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][180] /* ty=Tensor[(168), float16] */, meta[relay.Constant][181] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %481 = fn (%p0181: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1144: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0181, %p1144, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %482 = %481(%480, meta[relay.Constant][182] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %483 = fn (%p0180: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1143: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p271: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p370: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p419: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %469 = nn.conv2d(%p0180, %p1143, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %470 = multiply(%469, %p271) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %471 = add(%470, %p370) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%471, %p419) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %484 = %432(%430, meta[relay.Constant][151] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][152] /* ty=Tensor[(168), float16] */, meta[relay.Constant][153] /* ty=Tensor[(168), float16] */, %431) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %485 = %462(%460, meta[relay.Constant][167] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][168] /* ty=Tensor[(168), float16] */, meta[relay.Constant][169] /* ty=Tensor[(168), float16] */, %461) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %486 = %464(%407, %420) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %487 = %468(%420, %467) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %488 = %483(%482, meta[relay.Constant][183] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][184] /* ty=Tensor[(168), float16] */, meta[relay.Constant][185] /* ty=Tensor[(168), float16] */, %407) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %489 = fn (%p035: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p125: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p221: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p320: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p48: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p58: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    %40 = (%p035, %p125, %p221, %p320, %p48, %p58) /* ty=(Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) span=aten::cat_5:0:0 */;
    concatenate(%40, axis=3) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %490 = %489(%420, %484, %485, %486, %487, %488) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %491 = fn (%p034: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    nn.relu(%p034) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %492 = %491(%490) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %493 = fn (%p033: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, %p124: Tensor[(168, 1, 1, 1008), float16] /* ty=Tensor[(168, 1, 1, 1008), float16] */, %p220: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p319: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %38 = nn.conv2d(%p033, %p124, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %39 = multiply(%38, %p220) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%39, %p319) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16], Tensor[(168, 1, 1, 1008), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %505 = fn (%p0194: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    nn.relu(%p0194) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %506 = %505(%403) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %507 = fn (%p0193: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, %p1153: Tensor[(168, 1, 1, 1008), float16] /* ty=Tensor[(168, 1, 1, 1008), float16] */, %p277: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p376: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %503 = nn.conv2d(%p0193, %p1153, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %504 = multiply(%503, %p277) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%504, %p376) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16], Tensor[(168, 1, 1, 1008), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %516 = fn (%p0201: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    nn.relu(%p0201) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %517 = %516(%490) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %518 = fn (%p0200: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, %p1158: Tensor[(168, 1, 1, 1008), float16] /* ty=Tensor[(168, 1, 1, 1008), float16] */, %p280: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p379: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %514 = nn.conv2d(%p0200, %p1158, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %515 = multiply(%514, %p280) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%515, %p379) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16], Tensor[(168, 1, 1, 1008), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %519 = %518(%517, meta[relay.Constant][192] /* ty=Tensor[(168, 1, 1, 1008), float16] */, meta[relay.Constant][193] /* ty=Tensor[(168), float16] */, meta[relay.Constant][194] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %520 = fn (%p0199: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0199) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %521 = %520(%519) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %522 = fn (%p0198: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1157: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0198, %p1157, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %523 = %522(%521, meta[relay.Constant][195] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %524 = fn (%p0197: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1156: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p279: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p378: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %511 = nn.conv2d(%p0197, %p1156, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %512 = multiply(%511, %p279) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %513 = add(%512, %p378) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%513) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %525 = %524(%523, meta[relay.Constant][196] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][197] /* ty=Tensor[(168), float16] */, meta[relay.Constant][198] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %526 = fn (%p0196: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1155: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0196, %p1155, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %532 = %507(%506, meta[relay.Constant][189] /* ty=Tensor[(168, 1, 1, 1008), float16] */, meta[relay.Constant][190] /* ty=Tensor[(168), float16] */, meta[relay.Constant][191] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %533 = fn (%p0206: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0206) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %534 = %533(%532) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %535 = fn (%p0205: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1162: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0205, %p1162, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %536 = %535(%534, meta[relay.Constant][203] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %537 = fn (%p0204: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1161: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p282: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p381: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %529 = nn.conv2d(%p0204, %p1161, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %530 = multiply(%529, %p282) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %531 = add(%530, %p381) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%531) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %538 = %537(%536, meta[relay.Constant][204] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][205] /* ty=Tensor[(168), float16] */, meta[relay.Constant][206] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %539 = fn (%p0203: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1160: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0203, %p1160, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %540 = %539(%538, meta[relay.Constant][207] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %541 = fn (%p0202: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1159: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p281: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p380: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %527 = nn.conv2d(%p0202, %p1159, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %528 = multiply(%527, %p281) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%528, %p380) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %542 = %526(%525, meta[relay.Constant][199] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %543 = %541(%540, meta[relay.Constant][208] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][209] /* ty=Tensor[(168), float16] */, meta[relay.Constant][210] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %544 = fn (%p0195: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1154: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p278: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p377: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p422: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %508 = nn.conv2d(%p0195, %p1154, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %509 = multiply(%508, %p278) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %510 = add(%509, %p377) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%510, %p422) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %551 = fn (%p0211: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0211) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %552 = %551(%532) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %553 = fn (%p0210: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1166: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0210, %p1166, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %554 = %553(%552, meta[relay.Constant][211] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %555 = fn (%p0209: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1165: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p284: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p383: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %548 = nn.conv2d(%p0209, %p1165, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %549 = multiply(%548, %p284) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %550 = add(%549, %p383) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%550) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %556 = %555(%554, meta[relay.Constant][212] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][213] /* ty=Tensor[(168), float16] */, meta[relay.Constant][214] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %557 = fn (%p0208: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1164: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0208, %p1164, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %563 = fn (%p0216: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0216) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %564 = %563(%532) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %565 = fn (%p0215: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1170: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0215, %p1170, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %566 = %565(%564, meta[relay.Constant][219] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %567 = fn (%p0214: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1169: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p286: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p385: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %560 = nn.conv2d(%p0214, %p1169, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %561 = multiply(%560, %p286) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %562 = add(%561, %p385) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%562) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %568 = %567(%566, meta[relay.Constant][220] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][221] /* ty=Tensor[(168), float16] */, meta[relay.Constant][222] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %569 = fn (%p0213: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1168: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0213, %p1168, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %570 = %569(%568, meta[relay.Constant][223] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %571 = fn (%p0212: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1167: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p285: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p384: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %558 = nn.conv2d(%p0212, %p1167, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %559 = multiply(%558, %p285) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%559, %p384) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %572 = %557(%556, meta[relay.Constant][215] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %573 = %571(%570, meta[relay.Constant][224] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][225] /* ty=Tensor[(168), float16] */, meta[relay.Constant][226] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %574 = fn (%p0207: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1163: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p283: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p382: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p423: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %545 = nn.conv2d(%p0207, %p1163, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %546 = multiply(%545, %p283) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %547 = add(%546, %p382) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%547, %p423) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %576 = fn (%p0217: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1171: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %575 = nn.avg_pool2d(%p0217, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%575, %p1171) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %578 = fn (%p0219: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.avg_pool2d(%p0219, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %579 = %578(%532) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %580 = fn (%p0218: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1172: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %577 = nn.avg_pool2d(%p0218, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%577, %p1172) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %587 = fn (%p0224: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0224) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %588 = %587(%519) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %589 = fn (%p0223: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1176: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0223, %p1176, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %590 = %589(%588, meta[relay.Constant][227] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %591 = fn (%p0222: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1175: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p288: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p387: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %584 = nn.conv2d(%p0222, %p1175, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %585 = multiply(%584, %p288) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %586 = add(%585, %p387) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%586) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %592 = %591(%590, meta[relay.Constant][228] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][229] /* ty=Tensor[(168), float16] */, meta[relay.Constant][230] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %593 = fn (%p0221: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1174: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0221, %p1174, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %594 = %593(%592, meta[relay.Constant][231] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %595 = fn (%p0220: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1173: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p287: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p386: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p424: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %581 = nn.conv2d(%p0220, %p1173, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %582 = multiply(%581, %p287) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %583 = add(%582, %p386) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%583, %p424) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %596 = %544(%542, meta[relay.Constant][200] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][201] /* ty=Tensor[(168), float16] */, meta[relay.Constant][202] /* ty=Tensor[(168), float16] */, %543) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %597 = %574(%572, meta[relay.Constant][216] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][217] /* ty=Tensor[(168), float16] */, meta[relay.Constant][218] /* ty=Tensor[(168), float16] */, %573) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %598 = %576(%519, %532) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %599 = %580(%532, %579) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %600 = %595(%594, meta[relay.Constant][232] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][233] /* ty=Tensor[(168), float16] */, meta[relay.Constant][234] /* ty=Tensor[(168), float16] */, %519) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %601 = fn (%p0192: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1152: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p276: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p375: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p421: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p510: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    %502 = (%p0192, %p1152, %p276, %p375, %p421, %p510) /* ty=(Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) span=aten::cat_6:0:0 */;
    concatenate(%502, axis=3) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %602 = %601(%532, %596, %597, %598, %599, %600) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %603 = fn (%p0191: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    nn.relu(%p0191) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %604 = %603(%602) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %605 = fn (%p0190: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, %p1151: Tensor[(168, 1, 1, 1008), float16] /* ty=Tensor[(168, 1, 1, 1008), float16] */, %p275: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p374: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %500 = nn.conv2d(%p0190, %p1151, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %501 = multiply(%500, %p275) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%501, %p374) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16], Tensor[(168, 1, 1, 1008), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %606 = %605(%604, meta[relay.Constant][235] /* ty=Tensor[(168, 1, 1, 1008), float16] */, meta[relay.Constant][236] /* ty=Tensor[(168), float16] */, meta[relay.Constant][237] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %607 = fn (%p0189: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0189) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %608 = %607(%606) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %609 = fn (%p0188: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1150: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0188, %p1150, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %610 = %609(%608, meta[relay.Constant][238] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %611 = fn (%p0187: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1149: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p274: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p373: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %497 = nn.conv2d(%p0187, %p1149, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %498 = multiply(%497, %p274) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %499 = add(%498, %p373) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%499) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %612 = %611(%610, meta[relay.Constant][239] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][240] /* ty=Tensor[(168), float16] */, meta[relay.Constant][241] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %613 = fn (%p0186: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1148: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0186, %p1148, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %619 = %493(%492, meta[relay.Constant][186] /* ty=Tensor[(168, 1, 1, 1008), float16] */, meta[relay.Constant][187] /* ty=Tensor[(168), float16] */, meta[relay.Constant][188] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %620 = fn (%p0229: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0229) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %621 = %620(%619) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %622 = fn (%p0228: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1180: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0228, %p1180, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %623 = %622(%621, meta[relay.Constant][246] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %624 = fn (%p0227: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1179: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p290: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p389: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %616 = nn.conv2d(%p0227, %p1179, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %617 = multiply(%616, %p290) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %618 = add(%617, %p389) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%618) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %625 = %624(%623, meta[relay.Constant][247] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][248] /* ty=Tensor[(168), float16] */, meta[relay.Constant][249] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %626 = fn (%p0226: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1178: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0226, %p1178, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %627 = %626(%625, meta[relay.Constant][250] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %628 = fn (%p0225: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1177: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p289: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p388: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %614 = nn.conv2d(%p0225, %p1177, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %615 = multiply(%614, %p289) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%615, %p388) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %629 = %613(%612, meta[relay.Constant][242] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %630 = %628(%627, meta[relay.Constant][251] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][252] /* ty=Tensor[(168), float16] */, meta[relay.Constant][253] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %631 = fn (%p0185: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1147: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p273: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p372: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p420: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %494 = nn.conv2d(%p0185, %p1147, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %495 = multiply(%494, %p273) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %496 = add(%495, %p372) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%496, %p420) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %638 = fn (%p0234: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0234) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %639 = %638(%619) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %640 = fn (%p0233: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1184: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0233, %p1184, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %641 = %640(%639, meta[relay.Constant][254] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %642 = fn (%p0232: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1183: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p292: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p391: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %635 = nn.conv2d(%p0232, %p1183, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %636 = multiply(%635, %p292) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %637 = add(%636, %p391) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%637) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %643 = %642(%641, meta[relay.Constant][255] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][256] /* ty=Tensor[(168), float16] */, meta[relay.Constant][257] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %644 = fn (%p0231: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1182: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0231, %p1182, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %650 = fn (%p0239: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0239) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %651 = %650(%619) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %652 = fn (%p0238: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1188: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0238, %p1188, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %653 = %652(%651, meta[relay.Constant][262] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %654 = fn (%p0237: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1187: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p294: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p393: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %647 = nn.conv2d(%p0237, %p1187, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %648 = multiply(%647, %p294) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %649 = add(%648, %p393) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%649) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %655 = %654(%653, meta[relay.Constant][263] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][264] /* ty=Tensor[(168), float16] */, meta[relay.Constant][265] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %656 = fn (%p0236: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1186: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0236, %p1186, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %657 = %656(%655, meta[relay.Constant][266] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %658 = fn (%p0235: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1185: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p293: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p392: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %645 = nn.conv2d(%p0235, %p1185, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %646 = multiply(%645, %p293) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%646, %p392) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %659 = %644(%643, meta[relay.Constant][258] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %660 = %658(%657, meta[relay.Constant][267] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][268] /* ty=Tensor[(168), float16] */, meta[relay.Constant][269] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %661 = fn (%p0230: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1181: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p291: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p390: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p425: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %632 = nn.conv2d(%p0230, %p1181, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %633 = multiply(%632, %p291) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %634 = add(%633, %p390) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%634, %p425) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %663 = fn (%p0240: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1189: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %662 = nn.avg_pool2d(%p0240, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%662, %p1189) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %665 = fn (%p0242: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.avg_pool2d(%p0242, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %666 = %665(%619) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %667 = fn (%p0241: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1190: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %664 = nn.avg_pool2d(%p0241, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%664, %p1190) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %674 = fn (%p0247: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0247) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %675 = %674(%606) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %676 = fn (%p0246: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1194: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0246, %p1194, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %677 = %676(%675, meta[relay.Constant][270] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %678 = fn (%p0245: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1193: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p296: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p395: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %671 = nn.conv2d(%p0245, %p1193, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %672 = multiply(%671, %p296) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %673 = add(%672, %p395) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%673) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %679 = %678(%677, meta[relay.Constant][271] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][272] /* ty=Tensor[(168), float16] */, meta[relay.Constant][273] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %680 = fn (%p0244: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1192: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0244, %p1192, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %681 = %680(%679, meta[relay.Constant][274] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %682 = fn (%p0243: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1191: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p295: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p394: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p426: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %668 = nn.conv2d(%p0243, %p1191, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %669 = multiply(%668, %p295) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %670 = add(%669, %p394) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%670, %p426) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %683 = %631(%629, meta[relay.Constant][243] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][244] /* ty=Tensor[(168), float16] */, meta[relay.Constant][245] /* ty=Tensor[(168), float16] */, %630) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %684 = %661(%659, meta[relay.Constant][259] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][260] /* ty=Tensor[(168), float16] */, meta[relay.Constant][261] /* ty=Tensor[(168), float16] */, %660) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %685 = %663(%606, %619) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %686 = %667(%619, %666) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %687 = %682(%681, meta[relay.Constant][275] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][276] /* ty=Tensor[(168), float16] */, meta[relay.Constant][277] /* ty=Tensor[(168), float16] */, %606) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %688 = fn (%p032: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p123: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p219: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p318: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p47: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p57: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    %37 = (%p032, %p123, %p219, %p318, %p47, %p57) /* ty=(Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) span=aten::cat_7:0:0 */;
    concatenate(%37, axis=3) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %689 = %688(%619, %683, %684, %685, %686, %687) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %690 = fn (%p031: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    nn.relu(%p031) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %691 = %690(%689) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %692 = fn (%p030: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, %p122: Tensor[(168, 1, 1, 1008), float16] /* ty=Tensor[(168, 1, 1, 1008), float16] */, %p218: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p317: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %35 = nn.conv2d(%p030, %p122, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %36 = multiply(%35, %p218) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%36, %p317) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16], Tensor[(168, 1, 1, 1008), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %704 = fn (%p0257: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    nn.relu(%p0257) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %705 = %704(%602) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %706 = fn (%p0256: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, %p1201: Tensor[(168, 1, 1, 1008), float16] /* ty=Tensor[(168, 1, 1, 1008), float16] */, %p2101: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3100: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %702 = nn.conv2d(%p0256, %p1201, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %703 = multiply(%702, %p2101) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%703, %p3100) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16], Tensor[(168, 1, 1, 1008), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %715 = fn (%p0264: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    nn.relu(%p0264) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %716 = %715(%689) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %717 = fn (%p0263: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, %p1206: Tensor[(168, 1, 1, 1008), float16] /* ty=Tensor[(168, 1, 1, 1008), float16] */, %p2104: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3103: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %713 = nn.conv2d(%p0263, %p1206, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %714 = multiply(%713, %p2104) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%714, %p3103) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16], Tensor[(168, 1, 1, 1008), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %718 = %717(%716, meta[relay.Constant][284] /* ty=Tensor[(168, 1, 1, 1008), float16] */, meta[relay.Constant][285] /* ty=Tensor[(168), float16] */, meta[relay.Constant][286] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %719 = fn (%p0262: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0262) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %720 = %719(%718) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %721 = fn (%p0261: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1205: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0261, %p1205, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %722 = %721(%720, meta[relay.Constant][287] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %723 = fn (%p0260: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1204: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2103: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3102: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %710 = nn.conv2d(%p0260, %p1204, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %711 = multiply(%710, %p2103) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %712 = add(%711, %p3102) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%712) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %724 = %723(%722, meta[relay.Constant][288] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][289] /* ty=Tensor[(168), float16] */, meta[relay.Constant][290] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %725 = fn (%p0259: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1203: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0259, %p1203, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %731 = %706(%705, meta[relay.Constant][281] /* ty=Tensor[(168, 1, 1, 1008), float16] */, meta[relay.Constant][282] /* ty=Tensor[(168), float16] */, meta[relay.Constant][283] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %732 = fn (%p0269: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0269) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %733 = %732(%731) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %734 = fn (%p0268: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1210: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0268, %p1210, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %735 = %734(%733, meta[relay.Constant][295] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %736 = fn (%p0267: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1209: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2106: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3105: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %728 = nn.conv2d(%p0267, %p1209, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %729 = multiply(%728, %p2106) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %730 = add(%729, %p3105) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%730) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %737 = %736(%735, meta[relay.Constant][296] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][297] /* ty=Tensor[(168), float16] */, meta[relay.Constant][298] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %738 = fn (%p0266: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1208: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0266, %p1208, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %739 = %738(%737, meta[relay.Constant][299] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %740 = fn (%p0265: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1207: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2105: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3104: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %726 = nn.conv2d(%p0265, %p1207, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %727 = multiply(%726, %p2105) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%727, %p3104) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %741 = %725(%724, meta[relay.Constant][291] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %742 = %740(%739, meta[relay.Constant][300] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][301] /* ty=Tensor[(168), float16] */, meta[relay.Constant][302] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %743 = fn (%p0258: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1202: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2102: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3101: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p429: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %707 = nn.conv2d(%p0258, %p1202, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %708 = multiply(%707, %p2102) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %709 = add(%708, %p3101) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%709, %p429) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %750 = fn (%p0274: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0274) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %751 = %750(%731) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %752 = fn (%p0273: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1214: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0273, %p1214, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %753 = %752(%751, meta[relay.Constant][303] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %754 = fn (%p0272: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1213: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2108: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3107: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %747 = nn.conv2d(%p0272, %p1213, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %748 = multiply(%747, %p2108) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %749 = add(%748, %p3107) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%749) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %755 = %754(%753, meta[relay.Constant][304] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][305] /* ty=Tensor[(168), float16] */, meta[relay.Constant][306] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %756 = fn (%p0271: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1212: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0271, %p1212, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %762 = fn (%p0279: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0279) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %763 = %762(%731) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %764 = fn (%p0278: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1218: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0278, %p1218, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %765 = %764(%763, meta[relay.Constant][311] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %766 = fn (%p0277: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1217: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2110: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3109: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %759 = nn.conv2d(%p0277, %p1217, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %760 = multiply(%759, %p2110) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %761 = add(%760, %p3109) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%761) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %767 = %766(%765, meta[relay.Constant][312] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][313] /* ty=Tensor[(168), float16] */, meta[relay.Constant][314] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %768 = fn (%p0276: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1216: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0276, %p1216, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %769 = %768(%767, meta[relay.Constant][315] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %770 = fn (%p0275: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1215: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2109: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3108: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %757 = nn.conv2d(%p0275, %p1215, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %758 = multiply(%757, %p2109) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%758, %p3108) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %771 = %756(%755, meta[relay.Constant][307] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %772 = %770(%769, meta[relay.Constant][316] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][317] /* ty=Tensor[(168), float16] */, meta[relay.Constant][318] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %773 = fn (%p0270: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1211: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2107: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3106: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p430: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %744 = nn.conv2d(%p0270, %p1211, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %745 = multiply(%744, %p2107) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %746 = add(%745, %p3106) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%746, %p430) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %775 = fn (%p0280: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1219: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %774 = nn.avg_pool2d(%p0280, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%774, %p1219) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %777 = fn (%p0282: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.avg_pool2d(%p0282, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %778 = %777(%731) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %779 = fn (%p0281: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1220: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %776 = nn.avg_pool2d(%p0281, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%776, %p1220) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %786 = fn (%p0287: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0287) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %787 = %786(%718) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %788 = fn (%p0286: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1224: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0286, %p1224, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %789 = %788(%787, meta[relay.Constant][319] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %790 = fn (%p0285: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1223: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2112: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3111: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %783 = nn.conv2d(%p0285, %p1223, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %784 = multiply(%783, %p2112) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %785 = add(%784, %p3111) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%785) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %791 = %790(%789, meta[relay.Constant][320] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][321] /* ty=Tensor[(168), float16] */, meta[relay.Constant][322] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %792 = fn (%p0284: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1222: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0284, %p1222, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %793 = %792(%791, meta[relay.Constant][323] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %794 = fn (%p0283: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1221: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2111: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3110: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p431: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %780 = nn.conv2d(%p0283, %p1221, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %781 = multiply(%780, %p2111) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %782 = add(%781, %p3110) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%782, %p431) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %795 = %743(%741, meta[relay.Constant][292] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][293] /* ty=Tensor[(168), float16] */, meta[relay.Constant][294] /* ty=Tensor[(168), float16] */, %742) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %796 = %773(%771, meta[relay.Constant][308] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][309] /* ty=Tensor[(168), float16] */, meta[relay.Constant][310] /* ty=Tensor[(168), float16] */, %772) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %797 = %775(%718, %731) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %798 = %779(%731, %778) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %799 = %794(%793, meta[relay.Constant][324] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][325] /* ty=Tensor[(168), float16] */, meta[relay.Constant][326] /* ty=Tensor[(168), float16] */, %718) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %800 = fn (%p0255: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1200: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p2100: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p399: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p428: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p511: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    %701 = (%p0255, %p1200, %p2100, %p399, %p428, %p511) /* ty=(Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) span=aten::cat_8:0:0 */;
    concatenate(%701, axis=3) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %801 = %800(%731, %795, %796, %797, %798, %799) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %802 = fn (%p0254: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    nn.relu(%p0254) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %803 = %802(%801) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %804 = fn (%p0253: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, %p1199: Tensor[(168, 1, 1, 1008), float16] /* ty=Tensor[(168, 1, 1, 1008), float16] */, %p299: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p398: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %699 = nn.conv2d(%p0253, %p1199, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %700 = multiply(%699, %p299) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%700, %p398) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16], Tensor[(168, 1, 1, 1008), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %805 = %804(%803, meta[relay.Constant][327] /* ty=Tensor[(168, 1, 1, 1008), float16] */, meta[relay.Constant][328] /* ty=Tensor[(168), float16] */, meta[relay.Constant][329] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %806 = fn (%p0252: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0252) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %807 = %806(%805) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %808 = fn (%p0251: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1198: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0251, %p1198, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %809 = %808(%807, meta[relay.Constant][330] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %810 = fn (%p0250: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1197: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p298: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p397: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %696 = nn.conv2d(%p0250, %p1197, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %697 = multiply(%696, %p298) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %698 = add(%697, %p397) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%698) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %811 = %810(%809, meta[relay.Constant][331] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][332] /* ty=Tensor[(168), float16] */, meta[relay.Constant][333] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %812 = fn (%p0249: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1196: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0249, %p1196, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %818 = %692(%691, meta[relay.Constant][278] /* ty=Tensor[(168, 1, 1, 1008), float16] */, meta[relay.Constant][279] /* ty=Tensor[(168), float16] */, meta[relay.Constant][280] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %819 = fn (%p0292: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0292) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %820 = %819(%818) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %821 = fn (%p0291: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1228: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0291, %p1228, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %822 = %821(%820, meta[relay.Constant][338] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %823 = fn (%p0290: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1227: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2114: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3113: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %815 = nn.conv2d(%p0290, %p1227, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %816 = multiply(%815, %p2114) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %817 = add(%816, %p3113) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%817) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %824 = %823(%822, meta[relay.Constant][339] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][340] /* ty=Tensor[(168), float16] */, meta[relay.Constant][341] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %825 = fn (%p0289: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1226: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0289, %p1226, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %826 = %825(%824, meta[relay.Constant][342] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %827 = fn (%p0288: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1225: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2113: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3112: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %813 = nn.conv2d(%p0288, %p1225, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %814 = multiply(%813, %p2113) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%814, %p3112) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %828 = %812(%811, meta[relay.Constant][334] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %829 = %827(%826, meta[relay.Constant][343] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][344] /* ty=Tensor[(168), float16] */, meta[relay.Constant][345] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %830 = fn (%p0248: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1195: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p297: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p396: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p427: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %693 = nn.conv2d(%p0248, %p1195, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %694 = multiply(%693, %p297) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %695 = add(%694, %p396) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%695, %p427) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %837 = fn (%p0297: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0297) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %838 = %837(%818) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %839 = fn (%p0296: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1232: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0296, %p1232, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %840 = %839(%838, meta[relay.Constant][346] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %841 = fn (%p0295: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1231: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2116: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3115: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %834 = nn.conv2d(%p0295, %p1231, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %835 = multiply(%834, %p2116) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %836 = add(%835, %p3115) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%836) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %842 = %841(%840, meta[relay.Constant][347] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][348] /* ty=Tensor[(168), float16] */, meta[relay.Constant][349] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %843 = fn (%p0294: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1230: Tensor[(168, 5, 5, 1), float16] /* ty=Tensor[(168, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0294, %p1230, padding=[2, 2, 2, 2], groups=168, channels=168, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 5, 5, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %849 = fn (%p0302: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0302) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %850 = %849(%818) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %851 = fn (%p0301: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1236: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0301, %p1236, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %852 = %851(%850, meta[relay.Constant][354] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %853 = fn (%p0300: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1235: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2118: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3117: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %846 = nn.conv2d(%p0300, %p1235, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %847 = multiply(%846, %p2118) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %848 = add(%847, %p3117) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%848) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %854 = %853(%852, meta[relay.Constant][355] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][356] /* ty=Tensor[(168), float16] */, meta[relay.Constant][357] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %855 = fn (%p0299: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1234: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0299, %p1234, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %856 = %855(%854, meta[relay.Constant][358] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %857 = fn (%p0298: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1233: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2117: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3116: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %844 = nn.conv2d(%p0298, %p1233, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %845 = multiply(%844, %p2117) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%845, %p3116) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %858 = %843(%842, meta[relay.Constant][350] /* ty=Tensor[(168, 5, 5, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %859 = %857(%856, meta[relay.Constant][359] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][360] /* ty=Tensor[(168), float16] */, meta[relay.Constant][361] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %860 = fn (%p0293: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1229: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2115: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3114: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p432: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %831 = nn.conv2d(%p0293, %p1229, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %832 = multiply(%831, %p2115) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %833 = add(%832, %p3114) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%833, %p432) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %862 = fn (%p0303: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1237: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %861 = nn.avg_pool2d(%p0303, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%861, %p1237) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %864 = fn (%p0305: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.avg_pool2d(%p0305, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %865 = %864(%818) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %866 = fn (%p0304: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1238: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %863 = nn.avg_pool2d(%p0304, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%863, %p1238) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %873 = fn (%p0310: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.relu(%p0310) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %874 = %873(%805) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %875 = fn (%p0309: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1242: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0309, %p1242, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %876 = %875(%874, meta[relay.Constant][362] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %877 = fn (%p0308: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1241: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2120: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3119: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %870 = nn.conv2d(%p0308, %p1241, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %871 = multiply(%870, %p2120) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %872 = add(%871, %p3119) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    nn.relu(%872) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %878 = %877(%876, meta[relay.Constant][363] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][364] /* ty=Tensor[(168), float16] */, meta[relay.Constant][365] /* ty=Tensor[(168), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %879 = fn (%p0307: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1240: Tensor[(168, 3, 3, 1), float16] /* ty=Tensor[(168, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    nn.conv2d(%p0307, %p1240, padding=[1, 1, 1, 1], groups=168, channels=168, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 3, 3, 1), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %880 = %879(%878, meta[relay.Constant][366] /* ty=Tensor[(168, 3, 3, 1), float16] */) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %881 = fn (%p0306: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p1239: Tensor[(168, 1, 1, 168), float16] /* ty=Tensor[(168, 1, 1, 168), float16] */, %p2119: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p3118: Tensor[(168), float16] /* ty=Tensor[(168), float16] */, %p433: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 168), float16] {
    %867 = nn.conv2d(%p0306, %p1239, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %868 = multiply(%867, %p2119) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    %869 = add(%868, %p3118) /* ty=Tensor[(16, 42, 42, 168), float16] */;
    add(%869, %p433) /* ty=Tensor[(16, 42, 42, 168), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(168, 1, 1, 168), float16], Tensor[(168), float16], Tensor[(168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 168), float16] */;
  %882 = %830(%828, meta[relay.Constant][335] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][336] /* ty=Tensor[(168), float16] */, meta[relay.Constant][337] /* ty=Tensor[(168), float16] */, %829) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %883 = %860(%858, meta[relay.Constant][351] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][352] /* ty=Tensor[(168), float16] */, meta[relay.Constant][353] /* ty=Tensor[(168), float16] */, %859) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %884 = %862(%805, %818) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %885 = %866(%818, %865) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %886 = %881(%880, meta[relay.Constant][367] /* ty=Tensor[(168, 1, 1, 168), float16] */, meta[relay.Constant][368] /* ty=Tensor[(168), float16] */, meta[relay.Constant][369] /* ty=Tensor[(168), float16] */, %805) /* ty=Tensor[(16, 42, 42, 168), float16] */;
  %887 = fn (%p029: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p121: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p217: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p316: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p46: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, %p56: Tensor[(16, 42, 42, 168), float16] /* ty=Tensor[(16, 42, 42, 168), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    %33 = (%p029, %p121, %p217, %p316, %p46, %p56) /* ty=(Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) span=aten::cat_9:0:0 */;
    %34 = concatenate(%33, axis=3) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
    nn.relu(%34) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16], Tensor[(16, 42, 42, 168), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %888 = %887(%818, %882, %883, %884, %885, %886) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %889 = fn (%p028: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, %p120: Tensor[(336, 1, 1, 1008), float16] /* ty=Tensor[(336, 1, 1, 1008), float16] */, %p216: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p315: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 336), float16] {
    %31 = nn.conv2d(%p028, %p120, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 336), float16] */;
    %32 = multiply(%31, %p216) /* ty=Tensor[(16, 42, 42, 336), float16] */;
    add(%32, %p315) /* ty=Tensor[(16, 42, 42, 336), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16], Tensor[(336, 1, 1, 1008), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 42, 42, 336), float16] */;
  %890 = %889(%888, meta[relay.Constant][370] /* ty=Tensor[(336, 1, 1, 1008), float16] */, meta[relay.Constant][371] /* ty=Tensor[(336), float16] */, meta[relay.Constant][372] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 42, 42, 336), float16] */;
  %891 = fn (%p027: Tensor[(16, 42, 42, 336), float16] /* ty=Tensor[(16, 42, 42, 336), float16] */, %p119: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 43, 43, 336), float16] {
    nn.pad(%p027, %p119, pad_width=[[0, 0], [0, 1], [0, 1], [0, 0]]) /* ty=Tensor[(16, 43, 43, 336), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 336), float16], float16) -> Tensor[(16, 43, 43, 336), float16] */;
  %900 = fn (%p0317: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    nn.relu(%p0317) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %901 = %900(%801) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %902 = fn (%p0316: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, %p1248: Tensor[(336, 1, 1, 1008), float16] /* ty=Tensor[(336, 1, 1, 1008), float16] */, %p2123: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3122: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 336), float16] {
    %898 = nn.conv2d(%p0316, %p1248, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 42, 42, 336), float16] */;
    %899 = multiply(%898, %p2123) /* ty=Tensor[(16, 42, 42, 336), float16] */;
    add(%899, %p3122) /* ty=Tensor[(16, 42, 42, 336), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16], Tensor[(336, 1, 1, 1008), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 42, 42, 336), float16] */;
  %903 = %902(%901, meta[relay.Constant][373] /* ty=Tensor[(336, 1, 1, 1008), float16] */, meta[relay.Constant][374] /* ty=Tensor[(336), float16] */, meta[relay.Constant][375] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 42, 42, 336), float16] */;
  %904 = fn (%p0315: Tensor[(16, 42, 42, 336), float16] /* ty=Tensor[(16, 42, 42, 336), float16] */, %p1247: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 47, 47, 336), float16] {
    %897 = nn.relu(%p0315) /* ty=Tensor[(16, 42, 42, 336), float16] */;
    nn.pad(%897, %p1247, pad_width=[[0, 0], [2, 3], [2, 3], [0, 0]]) /* ty=Tensor[(16, 47, 47, 336), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 336), float16], float16) -> Tensor[(16, 47, 47, 336), float16] */;
  %905 = %904(%903, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 47, 47, 336), float16] */;
  %906 = fn (%p0314: Tensor[(16, 47, 47, 336), float16] /* ty=Tensor[(16, 47, 47, 336), float16] */, %p1246: Tensor[(336, 7, 7, 1), float16] /* ty=Tensor[(336, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0314, %p1246, strides=[2, 2], padding=[0, 0, 0, 0], groups=336, channels=336, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 47, 47, 336), float16], Tensor[(336, 7, 7, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %907 = %906(%905, meta[relay.Constant][376] /* ty=Tensor[(336, 7, 7, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %908 = fn (%p0313: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1245: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2122: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3121: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %894 = nn.conv2d(%p0313, %p1245, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %895 = multiply(%894, %p2122) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %896 = add(%895, %p3121) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%896) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %909 = %908(%907, meta[relay.Constant][377] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][378] /* ty=Tensor[(336), float16] */, meta[relay.Constant][379] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %910 = fn (%p0312: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1244: Tensor[(336, 7, 7, 1), float16] /* ty=Tensor[(336, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0312, %p1244, padding=[3, 3, 3, 3], groups=336, channels=336, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 7, 7, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %911 = %910(%909, meta[relay.Constant][380] /* ty=Tensor[(336, 7, 7, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %912 = fn (%p0311: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1243: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2121: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3120: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %892 = nn.conv2d(%p0311, %p1243, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %893 = multiply(%892, %p2121) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%893, %p3120) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %913 = %891(%890, -inff16 /* ty=float16 */) /* ty=Tensor[(16, 43, 43, 336), float16] */;
  %914 = %912(%911, meta[relay.Constant][381] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][382] /* ty=Tensor[(336), float16] */, meta[relay.Constant][383] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %915 = fn (%p026: Tensor[(16, 43, 43, 336), float16] /* ty=Tensor[(16, 43, 43, 336), float16] */, %p118: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %30 = nn.max_pool2d(%p026, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%30, %p118) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 43, 43, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %917 = fn (%p0319: Tensor[(16, 42, 42, 336), float16] /* ty=Tensor[(16, 42, 42, 336), float16] */, %p1250: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 43, 43, 336), float16] {
    nn.pad(%p0319, %p1250, pad_width=[[0, 0], [0, 1], [0, 1], [0, 0]]) /* ty=Tensor[(16, 43, 43, 336), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 336), float16], float16) -> Tensor[(16, 43, 43, 336), float16] */;
  %924 = fn (%p0324: Tensor[(16, 42, 42, 336), float16] /* ty=Tensor[(16, 42, 42, 336), float16] */, %p1255: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 45, 45, 336), float16] {
    %923 = nn.relu(%p0324) /* ty=Tensor[(16, 42, 42, 336), float16] */;
    nn.pad(%923, %p1255, pad_width=[[0, 0], [1, 2], [1, 2], [0, 0]]) /* ty=Tensor[(16, 45, 45, 336), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 336), float16], float16) -> Tensor[(16, 45, 45, 336), float16] */;
  %925 = %924(%903, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 45, 45, 336), float16] */;
  %926 = fn (%p0323: Tensor[(16, 45, 45, 336), float16] /* ty=Tensor[(16, 45, 45, 336), float16] */, %p1254: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0323, %p1254, strides=[2, 2], padding=[0, 0, 0, 0], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 45, 45, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %927 = %926(%925, meta[relay.Constant][384] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %928 = fn (%p0322: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1253: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2125: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3124: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %920 = nn.conv2d(%p0322, %p1253, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %921 = multiply(%920, %p2125) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %922 = add(%921, %p3124) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%922) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %929 = %928(%927, meta[relay.Constant][385] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][386] /* ty=Tensor[(336), float16] */, meta[relay.Constant][387] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %930 = fn (%p0321: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1252: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0321, %p1252, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %931 = %930(%929, meta[relay.Constant][388] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %932 = fn (%p0320: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1251: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2124: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3123: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %918 = nn.conv2d(%p0320, %p1251, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %919 = multiply(%918, %p2124) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%919, %p3123) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %933 = %917(%890, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 43, 43, 336), float16] */;
  %934 = %932(%931, meta[relay.Constant][389] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][390] /* ty=Tensor[(336), float16] */, meta[relay.Constant][391] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %935 = fn (%p0318: Tensor[(16, 43, 43, 336), float16] /* ty=Tensor[(16, 43, 43, 336), float16] */, %p1249: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %916 = nn.avg_pool2d(%p0318, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%916, %p1249) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 43, 43, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %944 = fn (%p0330: Tensor[(16, 42, 42, 336), float16] /* ty=Tensor[(16, 42, 42, 336), float16] */, %p1261: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 45, 45, 336), float16] {
    %943 = nn.relu(%p0330) /* ty=Tensor[(16, 42, 42, 336), float16] */;
    nn.pad(%943, %p1261, pad_width=[[0, 0], [1, 2], [1, 2], [0, 0]]) /* ty=Tensor[(16, 45, 45, 336), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 336), float16], float16) -> Tensor[(16, 45, 45, 336), float16] */;
  %945 = %944(%890, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 45, 45, 336), float16] */;
  %946 = fn (%p0329: Tensor[(16, 45, 45, 336), float16] /* ty=Tensor[(16, 45, 45, 336), float16] */, %p1260: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0329, %p1260, strides=[2, 2], padding=[0, 0, 0, 0], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 45, 45, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %947 = %946(%945, meta[relay.Constant][392] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %948 = fn (%p0328: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1259: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2127: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3126: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %940 = nn.conv2d(%p0328, %p1259, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %941 = multiply(%940, %p2127) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %942 = add(%941, %p3126) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%942) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %949 = %948(%947, meta[relay.Constant][393] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][394] /* ty=Tensor[(336), float16] */, meta[relay.Constant][395] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %950 = fn (%p0327: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1258: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0327, %p1258, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %957 = fn (%p0335: Tensor[(16, 42, 42, 336), float16] /* ty=Tensor[(16, 42, 42, 336), float16] */, %p1266: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 47, 47, 336), float16] {
    %956 = nn.relu(%p0335) /* ty=Tensor[(16, 42, 42, 336), float16] */;
    nn.pad(%956, %p1266, pad_width=[[0, 0], [2, 3], [2, 3], [0, 0]]) /* ty=Tensor[(16, 47, 47, 336), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 336), float16], float16) -> Tensor[(16, 47, 47, 336), float16] */;
  %958 = %957(%903, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 47, 47, 336), float16] */;
  %959 = fn (%p0334: Tensor[(16, 47, 47, 336), float16] /* ty=Tensor[(16, 47, 47, 336), float16] */, %p1265: Tensor[(336, 7, 7, 1), float16] /* ty=Tensor[(336, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0334, %p1265, strides=[2, 2], padding=[0, 0, 0, 0], groups=336, channels=336, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 47, 47, 336), float16], Tensor[(336, 7, 7, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %960 = %959(%958, meta[relay.Constant][400] /* ty=Tensor[(336, 7, 7, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %961 = fn (%p0333: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1264: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2129: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3128: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %953 = nn.conv2d(%p0333, %p1264, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %954 = multiply(%953, %p2129) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %955 = add(%954, %p3128) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%955) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %962 = %961(%960, meta[relay.Constant][401] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][402] /* ty=Tensor[(336), float16] */, meta[relay.Constant][403] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %963 = fn (%p0332: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1263: Tensor[(336, 7, 7, 1), float16] /* ty=Tensor[(336, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0332, %p1263, padding=[3, 3, 3, 3], groups=336, channels=336, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 7, 7, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %964 = %963(%962, meta[relay.Constant][404] /* ty=Tensor[(336, 7, 7, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %965 = fn (%p0331: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1262: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2128: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3127: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %951 = nn.conv2d(%p0331, %p1262, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %952 = multiply(%951, %p2128) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%952, %p3127) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %966 = %950(%949, meta[relay.Constant][396] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %967 = %965(%964, meta[relay.Constant][405] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][406] /* ty=Tensor[(336), float16] */, meta[relay.Constant][407] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %968 = fn (%p0326: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1257: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2126: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3125: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p434: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %937 = nn.conv2d(%p0326, %p1257, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %938 = multiply(%937, %p2126) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %939 = add(%938, %p3125) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%939, %p434) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %969 = %968(%966, meta[relay.Constant][397] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][398] /* ty=Tensor[(336), float16] */, meta[relay.Constant][399] /* ty=Tensor[(336), float16] */, %967) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %970 = %915(%913, %914) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %971 = fn (%p0325: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1256: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %936 = nn.avg_pool2d(%p0325, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%936, %p1256) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %978 = fn (%p0340: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0340) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %979 = %978(%969) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %980 = fn (%p0339: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1270: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0339, %p1270, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %981 = %980(%979, meta[relay.Constant][408] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %982 = fn (%p0338: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1269: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2131: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3130: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %975 = nn.conv2d(%p0338, %p1269, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %976 = multiply(%975, %p2131) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %977 = add(%976, %p3130) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%977) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %983 = %982(%981, meta[relay.Constant][409] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][410] /* ty=Tensor[(336), float16] */, meta[relay.Constant][411] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %984 = fn (%p0337: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1268: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0337, %p1268, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %985 = fn (%p0342: Tensor[(16, 42, 42, 336), float16] /* ty=Tensor[(16, 42, 42, 336), float16] */, %p1271: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 43, 43, 336), float16] {
    nn.pad(%p0342, %p1271, pad_width=[[0, 0], [0, 1], [0, 1], [0, 0]]) /* ty=Tensor[(16, 43, 43, 336), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 336), float16], float16) -> Tensor[(16, 43, 43, 336), float16] */;
  %986 = %985(%890, -inff16 /* ty=float16 */) /* ty=Tensor[(16, 43, 43, 336), float16] */;
  %987 = fn (%p0341: Tensor[(16, 43, 43, 336), float16] /* ty=Tensor[(16, 43, 43, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.max_pool2d(%p0341, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 43, 43, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %988 = %984(%983, meta[relay.Constant][412] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %989 = %987(%986) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %990 = fn (%p0336: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1267: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2130: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3129: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p435: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %972 = nn.conv2d(%p0336, %p1267, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %973 = multiply(%972, %p2130) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %974 = add(%973, %p3129) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%974, %p435) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %991 = %935(%933, %934) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %992 = %971(%969, %970) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %993 = %990(%988, meta[relay.Constant][413] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][414] /* ty=Tensor[(336), float16] */, meta[relay.Constant][415] /* ty=Tensor[(336), float16] */, %989) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %994 = fn (%p025: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p117: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p215: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p314: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 1344), float16] {
    %29 = (%p025, %p117, %p215, %p314) /* ty=(Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) span=aten::cat_10:0:0 */;
    concatenate(%29, axis=3) /* ty=Tensor[(16, 21, 21, 1344), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 1344), float16] */;
  %995 = %994(%970, %991, %992, %993) /* ty=Tensor[(16, 21, 21, 1344), float16] */;
  %996 = fn (%p024: Tensor[(16, 21, 21, 1344), float16] /* ty=Tensor[(16, 21, 21, 1344), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 1344), float16] {
    nn.relu(%p024) /* ty=Tensor[(16, 21, 21, 1344), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 1344), float16]) -> Tensor[(16, 21, 21, 1344), float16] */;
  %997 = %996(%995) /* ty=Tensor[(16, 21, 21, 1344), float16] */;
  %998 = fn (%p023: Tensor[(16, 21, 21, 1344), float16] /* ty=Tensor[(16, 21, 21, 1344), float16] */, %p116: Tensor[(336, 1, 1, 1344), float16] /* ty=Tensor[(336, 1, 1, 1344), float16] */, %p214: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p313: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %27 = nn.conv2d(%p023, %p116, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %28 = multiply(%27, %p214) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%28, %p313) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 1344), float16], Tensor[(336, 1, 1, 1344), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1011 = fn (%p0354: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    nn.relu(%p0354) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16]) -> Tensor[(16, 42, 42, 1008), float16] */;
  %1012 = %1011(%801) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %1013 = fn (%p0353: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 1008), float16] {
    nn.avg_pool2d(%p0353, pool_size=[1, 1], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16]) -> Tensor[(16, 21, 21, 1008), float16] */;
  %1014 = %1013(%1012) /* ty=Tensor[(16, 21, 21, 1008), float16] */;
  %1015 = fn (%p0352: Tensor[(16, 21, 21, 1008), float16] /* ty=Tensor[(16, 21, 21, 1008), float16] */, %p1279: Tensor[(168, 1, 1, 1008), float16] /* ty=Tensor[(168, 1, 1, 1008), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 168), float16] {
    nn.conv2d(%p0352, %p1279, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 168), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 1008), float16], Tensor[(168, 1, 1, 1008), float16]) -> Tensor[(16, 21, 21, 168), float16] */;
  %1016 = fn (%p0357: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, %p1281: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 42, 42, 1008), float16] {
    nn.pad(%p0357, %p1281, pad_width=[[0, 0], [-1, 1], [-1, 1], [0, 0]]) /* ty=Tensor[(16, 42, 42, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16], float16) -> Tensor[(16, 42, 42, 1008), float16] */;
  %1017 = %1016(%1012, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 42, 42, 1008), float16] */;
  %1018 = fn (%p0356: Tensor[(16, 42, 42, 1008), float16] /* ty=Tensor[(16, 42, 42, 1008), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 1008), float16] {
    nn.avg_pool2d(%p0356, pool_size=[1, 1], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 1008), float16] */
  } /* ty=fn (Tensor[(16, 42, 42, 1008), float16]) -> Tensor[(16, 21, 21, 1008), float16] */;
  %1019 = %1018(%1017) /* ty=Tensor[(16, 21, 21, 1008), float16] */;
  %1020 = fn (%p0355: Tensor[(16, 21, 21, 1008), float16] /* ty=Tensor[(16, 21, 21, 1008), float16] */, %p1280: Tensor[(168, 1, 1, 1008), float16] /* ty=Tensor[(168, 1, 1, 1008), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 168), float16] {
    nn.conv2d(%p0355, %p1280, padding=[0, 0, 0, 0], channels=168, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 168), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 1008), float16], Tensor[(168, 1, 1, 1008), float16]) -> Tensor[(16, 21, 21, 168), float16] */;
  %1021 = %1015(%1014, meta[relay.Constant][419] /* ty=Tensor[(168, 1, 1, 1008), float16] */) /* ty=Tensor[(16, 21, 21, 168), float16] */;
  %1022 = %1020(%1019, meta[relay.Constant][420] /* ty=Tensor[(168, 1, 1, 1008), float16] */) /* ty=Tensor[(16, 21, 21, 168), float16] */;
  %1023 = fn (%p0351: Tensor[(16, 21, 21, 168), float16] /* ty=Tensor[(16, 21, 21, 168), float16] */, %p1278: Tensor[(16, 21, 21, 168), float16] /* ty=Tensor[(16, 21, 21, 168), float16] */, %p2136: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3135: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1008 = (%p0351, %p1278) /* ty=(Tensor[(16, 21, 21, 168), float16], Tensor[(16, 21, 21, 168), float16]) span=aten::cat_11:0:0 */;
    %1009 = concatenate(%1008, axis=3) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1010 = multiply(%1009, %p2136) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1010, %p3135) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 168), float16], Tensor[(16, 21, 21, 168), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1032 = fn (%p0364: Tensor[(16, 21, 21, 1344), float16] /* ty=Tensor[(16, 21, 21, 1344), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 1344), float16] {
    nn.relu(%p0364) /* ty=Tensor[(16, 21, 21, 1344), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 1344), float16]) -> Tensor[(16, 21, 21, 1344), float16] */;
  %1033 = %1032(%995) /* ty=Tensor[(16, 21, 21, 1344), float16] */;
  %1034 = fn (%p0363: Tensor[(16, 21, 21, 1344), float16] /* ty=Tensor[(16, 21, 21, 1344), float16] */, %p1286: Tensor[(336, 1, 1, 1344), float16] /* ty=Tensor[(336, 1, 1, 1344), float16] */, %p2139: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3138: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1030 = nn.conv2d(%p0363, %p1286, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1031 = multiply(%1030, %p2139) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1031, %p3138) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 1344), float16], Tensor[(336, 1, 1, 1344), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1035 = %1034(%1033, meta[relay.Constant][423] /* ty=Tensor[(336, 1, 1, 1344), float16] */, meta[relay.Constant][424] /* ty=Tensor[(336), float16] */, meta[relay.Constant][425] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1036 = fn (%p0362: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0362) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1037 = %1036(%1035) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1038 = fn (%p0361: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1285: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0361, %p1285, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1039 = %1038(%1037, meta[relay.Constant][426] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1040 = fn (%p0360: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1284: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2138: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3137: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1027 = nn.conv2d(%p0360, %p1284, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1028 = multiply(%1027, %p2138) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1029 = add(%1028, %p3137) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1029) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1041 = %1040(%1039, meta[relay.Constant][427] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][428] /* ty=Tensor[(336), float16] */, meta[relay.Constant][429] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1042 = fn (%p0359: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1283: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0359, %p1283, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1048 = %1023(%1021, %1022, meta[relay.Constant][421] /* ty=Tensor[(336), float16] */, meta[relay.Constant][422] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1049 = fn (%p0369: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0369) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1050 = %1049(%1048) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1051 = fn (%p0368: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1290: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0368, %p1290, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1052 = %1051(%1050, meta[relay.Constant][434] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1053 = fn (%p0367: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1289: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2141: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3140: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1045 = nn.conv2d(%p0367, %p1289, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1046 = multiply(%1045, %p2141) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1047 = add(%1046, %p3140) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1047) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1054 = %1053(%1052, meta[relay.Constant][435] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][436] /* ty=Tensor[(336), float16] */, meta[relay.Constant][437] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1055 = fn (%p0366: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1288: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0366, %p1288, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1056 = %1055(%1054, meta[relay.Constant][438] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1057 = fn (%p0365: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1287: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2140: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3139: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1043 = nn.conv2d(%p0365, %p1287, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1044 = multiply(%1043, %p2140) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1044, %p3139) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1058 = %1042(%1041, meta[relay.Constant][430] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1059 = %1057(%1056, meta[relay.Constant][439] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][440] /* ty=Tensor[(336), float16] */, meta[relay.Constant][441] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1060 = fn (%p0358: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1282: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2137: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3136: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p438: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1024 = nn.conv2d(%p0358, %p1282, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1025 = multiply(%1024, %p2137) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1026 = add(%1025, %p3136) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1026, %p438) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1067 = fn (%p0374: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0374) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1068 = %1067(%1048) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1069 = fn (%p0373: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1294: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0373, %p1294, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1070 = %1069(%1068, meta[relay.Constant][442] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1071 = fn (%p0372: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1293: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2143: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3142: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1064 = nn.conv2d(%p0372, %p1293, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1065 = multiply(%1064, %p2143) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1066 = add(%1065, %p3142) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1066) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1072 = %1071(%1070, meta[relay.Constant][443] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][444] /* ty=Tensor[(336), float16] */, meta[relay.Constant][445] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1073 = fn (%p0371: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1292: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0371, %p1292, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1079 = fn (%p0379: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0379) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1080 = %1079(%1048) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1081 = fn (%p0378: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1298: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0378, %p1298, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1082 = %1081(%1080, meta[relay.Constant][450] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1083 = fn (%p0377: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1297: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2145: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3144: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1076 = nn.conv2d(%p0377, %p1297, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1077 = multiply(%1076, %p2145) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1078 = add(%1077, %p3144) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1078) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1084 = %1083(%1082, meta[relay.Constant][451] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][452] /* ty=Tensor[(336), float16] */, meta[relay.Constant][453] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1085 = fn (%p0376: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1296: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0376, %p1296, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1086 = %1085(%1084, meta[relay.Constant][454] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1087 = fn (%p0375: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1295: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2144: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3143: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1074 = nn.conv2d(%p0375, %p1295, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1075 = multiply(%1074, %p2144) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1075, %p3143) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1088 = %1073(%1072, meta[relay.Constant][446] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1089 = %1087(%1086, meta[relay.Constant][455] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][456] /* ty=Tensor[(336), float16] */, meta[relay.Constant][457] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1090 = fn (%p0370: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1291: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2142: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3141: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p439: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1061 = nn.conv2d(%p0370, %p1291, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1062 = multiply(%1061, %p2142) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1063 = add(%1062, %p3141) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1063, %p439) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1092 = fn (%p0380: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1299: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1091 = nn.avg_pool2d(%p0380, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1091, %p1299) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1094 = fn (%p0382: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.avg_pool2d(%p0382, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1095 = %1094(%1048) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1096 = fn (%p0381: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1300: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1093 = nn.avg_pool2d(%p0381, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1093, %p1300) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1103 = fn (%p0387: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0387) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1104 = %1103(%1035) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1105 = fn (%p0386: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1304: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0386, %p1304, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1106 = %1105(%1104, meta[relay.Constant][458] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1107 = fn (%p0385: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1303: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2147: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3146: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1100 = nn.conv2d(%p0385, %p1303, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1101 = multiply(%1100, %p2147) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1102 = add(%1101, %p3146) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1102) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1108 = %1107(%1106, meta[relay.Constant][459] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][460] /* ty=Tensor[(336), float16] */, meta[relay.Constant][461] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1109 = fn (%p0384: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1302: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0384, %p1302, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1110 = %1109(%1108, meta[relay.Constant][462] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1111 = fn (%p0383: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1301: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2146: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3145: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p440: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1097 = nn.conv2d(%p0383, %p1301, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1098 = multiply(%1097, %p2146) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1099 = add(%1098, %p3145) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1099, %p440) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1112 = %1060(%1058, meta[relay.Constant][431] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][432] /* ty=Tensor[(336), float16] */, meta[relay.Constant][433] /* ty=Tensor[(336), float16] */, %1059) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1113 = %1090(%1088, meta[relay.Constant][447] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][448] /* ty=Tensor[(336), float16] */, meta[relay.Constant][449] /* ty=Tensor[(336), float16] */, %1089) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1114 = %1092(%1035, %1048) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1115 = %1096(%1048, %1095) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1116 = %1111(%1110, meta[relay.Constant][463] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][464] /* ty=Tensor[(336), float16] */, meta[relay.Constant][465] /* ty=Tensor[(336), float16] */, %1035) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1117 = fn (%p0350: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1277: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p2135: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p3134: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p437: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p512: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    %1007 = (%p0350, %p1277, %p2135, %p3134, %p437, %p512) /* ty=(Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) span=aten::cat_12:0:0 */;
    concatenate(%1007, axis=3) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1118 = %1117(%1048, %1112, %1113, %1114, %1115, %1116) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1119 = fn (%p0349: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    nn.relu(%p0349) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1120 = %1119(%1118) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1121 = fn (%p0348: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, %p1276: Tensor[(336, 1, 1, 2016), float16] /* ty=Tensor[(336, 1, 1, 2016), float16] */, %p2134: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3133: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1005 = nn.conv2d(%p0348, %p1276, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1006 = multiply(%1005, %p2134) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1006, %p3133) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16], Tensor[(336, 1, 1, 2016), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1122 = %1121(%1120, meta[relay.Constant][466] /* ty=Tensor[(336, 1, 1, 2016), float16] */, meta[relay.Constant][467] /* ty=Tensor[(336), float16] */, meta[relay.Constant][468] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1123 = fn (%p0347: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0347) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1124 = %1123(%1122) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1125 = fn (%p0346: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1275: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0346, %p1275, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1126 = %1125(%1124, meta[relay.Constant][469] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1127 = fn (%p0345: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1274: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2133: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3132: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1002 = nn.conv2d(%p0345, %p1274, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1003 = multiply(%1002, %p2133) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1004 = add(%1003, %p3132) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1004) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1128 = %1127(%1126, meta[relay.Constant][470] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][471] /* ty=Tensor[(336), float16] */, meta[relay.Constant][472] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1129 = fn (%p0344: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1273: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0344, %p1273, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1135 = %998(%997, meta[relay.Constant][416] /* ty=Tensor[(336, 1, 1, 1344), float16] */, meta[relay.Constant][417] /* ty=Tensor[(336), float16] */, meta[relay.Constant][418] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1136 = fn (%p0392: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0392) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1137 = %1136(%1135) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1138 = fn (%p0391: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1308: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0391, %p1308, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1139 = %1138(%1137, meta[relay.Constant][477] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1140 = fn (%p0390: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1307: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2149: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3148: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1132 = nn.conv2d(%p0390, %p1307, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1133 = multiply(%1132, %p2149) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1134 = add(%1133, %p3148) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1134) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1141 = %1140(%1139, meta[relay.Constant][478] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][479] /* ty=Tensor[(336), float16] */, meta[relay.Constant][480] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1142 = fn (%p0389: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1306: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0389, %p1306, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1143 = %1142(%1141, meta[relay.Constant][481] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1144 = fn (%p0388: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1305: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2148: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3147: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1130 = nn.conv2d(%p0388, %p1305, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1131 = multiply(%1130, %p2148) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1131, %p3147) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1145 = %1129(%1128, meta[relay.Constant][473] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1146 = %1144(%1143, meta[relay.Constant][482] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][483] /* ty=Tensor[(336), float16] */, meta[relay.Constant][484] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1147 = fn (%p0343: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1272: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2132: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3131: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p436: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %999 = nn.conv2d(%p0343, %p1272, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1000 = multiply(%999, %p2132) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1001 = add(%1000, %p3131) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1001, %p436) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1154 = fn (%p0397: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0397) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1155 = %1154(%1135) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1156 = fn (%p0396: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1312: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0396, %p1312, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1157 = %1156(%1155, meta[relay.Constant][485] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1158 = fn (%p0395: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1311: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2151: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3150: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1151 = nn.conv2d(%p0395, %p1311, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1152 = multiply(%1151, %p2151) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1153 = add(%1152, %p3150) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1153) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1159 = %1158(%1157, meta[relay.Constant][486] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][487] /* ty=Tensor[(336), float16] */, meta[relay.Constant][488] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1160 = fn (%p0394: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1310: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0394, %p1310, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1166 = fn (%p0402: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0402) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1167 = %1166(%1135) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1168 = fn (%p0401: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1316: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0401, %p1316, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1169 = %1168(%1167, meta[relay.Constant][493] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1170 = fn (%p0400: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1315: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2153: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3152: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1163 = nn.conv2d(%p0400, %p1315, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1164 = multiply(%1163, %p2153) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1165 = add(%1164, %p3152) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1165) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1171 = %1170(%1169, meta[relay.Constant][494] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][495] /* ty=Tensor[(336), float16] */, meta[relay.Constant][496] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1172 = fn (%p0399: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1314: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0399, %p1314, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1173 = %1172(%1171, meta[relay.Constant][497] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1174 = fn (%p0398: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1313: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2152: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3151: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1161 = nn.conv2d(%p0398, %p1313, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1162 = multiply(%1161, %p2152) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1162, %p3151) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1175 = %1160(%1159, meta[relay.Constant][489] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1176 = %1174(%1173, meta[relay.Constant][498] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][499] /* ty=Tensor[(336), float16] */, meta[relay.Constant][500] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1177 = fn (%p0393: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1309: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2150: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3149: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p441: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1148 = nn.conv2d(%p0393, %p1309, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1149 = multiply(%1148, %p2150) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1150 = add(%1149, %p3149) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1150, %p441) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1179 = fn (%p0403: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1317: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1178 = nn.avg_pool2d(%p0403, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1178, %p1317) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1181 = fn (%p0405: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.avg_pool2d(%p0405, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1182 = %1181(%1135) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1183 = fn (%p0404: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1318: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1180 = nn.avg_pool2d(%p0404, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1180, %p1318) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1190 = fn (%p0410: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0410) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1191 = %1190(%1122) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1192 = fn (%p0409: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1322: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0409, %p1322, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1193 = %1192(%1191, meta[relay.Constant][501] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1194 = fn (%p0408: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1321: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2155: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3154: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1187 = nn.conv2d(%p0408, %p1321, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1188 = multiply(%1187, %p2155) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1189 = add(%1188, %p3154) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1189) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1195 = %1194(%1193, meta[relay.Constant][502] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][503] /* ty=Tensor[(336), float16] */, meta[relay.Constant][504] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1196 = fn (%p0407: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1320: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0407, %p1320, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1197 = %1196(%1195, meta[relay.Constant][505] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1198 = fn (%p0406: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1319: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2154: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3153: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p442: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1184 = nn.conv2d(%p0406, %p1319, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1185 = multiply(%1184, %p2154) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1186 = add(%1185, %p3153) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1186, %p442) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1199 = %1147(%1145, meta[relay.Constant][474] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][475] /* ty=Tensor[(336), float16] */, meta[relay.Constant][476] /* ty=Tensor[(336), float16] */, %1146) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1200 = %1177(%1175, meta[relay.Constant][490] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][491] /* ty=Tensor[(336), float16] */, meta[relay.Constant][492] /* ty=Tensor[(336), float16] */, %1176) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1201 = %1179(%1122, %1135) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1202 = %1183(%1135, %1182) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1203 = %1198(%1197, meta[relay.Constant][506] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][507] /* ty=Tensor[(336), float16] */, meta[relay.Constant][508] /* ty=Tensor[(336), float16] */, %1122) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1204 = fn (%p022: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p115: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p213: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p312: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p45: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p55: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    %26 = (%p022, %p115, %p213, %p312, %p45, %p55) /* ty=(Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) span=aten::cat_13:0:0 */;
    concatenate(%26, axis=3) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1205 = %1204(%1135, %1199, %1200, %1201, %1202, %1203) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1206 = fn (%p021: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    nn.relu(%p021) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1207 = %1206(%1205) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1208 = fn (%p020: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, %p114: Tensor[(336, 1, 1, 2016), float16] /* ty=Tensor[(336, 1, 1, 2016), float16] */, %p212: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p311: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %24 = nn.conv2d(%p020, %p114, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %25 = multiply(%24, %p212) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%25, %p311) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16], Tensor[(336, 1, 1, 2016), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1220 = fn (%p0420: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    nn.relu(%p0420) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1221 = %1220(%1118) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1222 = fn (%p0419: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, %p1329: Tensor[(336, 1, 1, 2016), float16] /* ty=Tensor[(336, 1, 1, 2016), float16] */, %p2160: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3159: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1218 = nn.conv2d(%p0419, %p1329, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1219 = multiply(%1218, %p2160) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1219, %p3159) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16], Tensor[(336, 1, 1, 2016), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1231 = fn (%p0427: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    nn.relu(%p0427) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1232 = %1231(%1205) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1233 = fn (%p0426: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, %p1334: Tensor[(336, 1, 1, 2016), float16] /* ty=Tensor[(336, 1, 1, 2016), float16] */, %p2163: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3162: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1229 = nn.conv2d(%p0426, %p1334, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1230 = multiply(%1229, %p2163) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1230, %p3162) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16], Tensor[(336, 1, 1, 2016), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1234 = %1233(%1232, meta[relay.Constant][515] /* ty=Tensor[(336, 1, 1, 2016), float16] */, meta[relay.Constant][516] /* ty=Tensor[(336), float16] */, meta[relay.Constant][517] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1235 = fn (%p0425: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0425) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1236 = %1235(%1234) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1237 = fn (%p0424: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1333: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0424, %p1333, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1238 = %1237(%1236, meta[relay.Constant][518] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1239 = fn (%p0423: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1332: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2162: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3161: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1226 = nn.conv2d(%p0423, %p1332, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1227 = multiply(%1226, %p2162) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1228 = add(%1227, %p3161) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1228) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1240 = %1239(%1238, meta[relay.Constant][519] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][520] /* ty=Tensor[(336), float16] */, meta[relay.Constant][521] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1241 = fn (%p0422: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1331: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0422, %p1331, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1247 = %1222(%1221, meta[relay.Constant][512] /* ty=Tensor[(336, 1, 1, 2016), float16] */, meta[relay.Constant][513] /* ty=Tensor[(336), float16] */, meta[relay.Constant][514] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1248 = fn (%p0432: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0432) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1249 = %1248(%1247) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1250 = fn (%p0431: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1338: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0431, %p1338, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1251 = %1250(%1249, meta[relay.Constant][526] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1252 = fn (%p0430: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1337: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2165: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3164: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1244 = nn.conv2d(%p0430, %p1337, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1245 = multiply(%1244, %p2165) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1246 = add(%1245, %p3164) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1246) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1253 = %1252(%1251, meta[relay.Constant][527] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][528] /* ty=Tensor[(336), float16] */, meta[relay.Constant][529] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1254 = fn (%p0429: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1336: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0429, %p1336, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1255 = %1254(%1253, meta[relay.Constant][530] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1256 = fn (%p0428: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1335: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2164: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3163: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1242 = nn.conv2d(%p0428, %p1335, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1243 = multiply(%1242, %p2164) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1243, %p3163) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1257 = %1241(%1240, meta[relay.Constant][522] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1258 = %1256(%1255, meta[relay.Constant][531] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][532] /* ty=Tensor[(336), float16] */, meta[relay.Constant][533] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1259 = fn (%p0421: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1330: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2161: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3160: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p445: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1223 = nn.conv2d(%p0421, %p1330, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1224 = multiply(%1223, %p2161) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1225 = add(%1224, %p3160) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1225, %p445) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1266 = fn (%p0437: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0437) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1267 = %1266(%1247) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1268 = fn (%p0436: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1342: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0436, %p1342, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1269 = %1268(%1267, meta[relay.Constant][534] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1270 = fn (%p0435: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1341: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2167: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3166: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1263 = nn.conv2d(%p0435, %p1341, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1264 = multiply(%1263, %p2167) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1265 = add(%1264, %p3166) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1265) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1271 = %1270(%1269, meta[relay.Constant][535] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][536] /* ty=Tensor[(336), float16] */, meta[relay.Constant][537] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1272 = fn (%p0434: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1340: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0434, %p1340, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1278 = fn (%p0442: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0442) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1279 = %1278(%1247) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1280 = fn (%p0441: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1346: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0441, %p1346, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1281 = %1280(%1279, meta[relay.Constant][542] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1282 = fn (%p0440: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1345: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2169: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3168: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1275 = nn.conv2d(%p0440, %p1345, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1276 = multiply(%1275, %p2169) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1277 = add(%1276, %p3168) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1277) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1283 = %1282(%1281, meta[relay.Constant][543] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][544] /* ty=Tensor[(336), float16] */, meta[relay.Constant][545] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1284 = fn (%p0439: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1344: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0439, %p1344, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1285 = %1284(%1283, meta[relay.Constant][546] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1286 = fn (%p0438: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1343: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2168: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3167: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1273 = nn.conv2d(%p0438, %p1343, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1274 = multiply(%1273, %p2168) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1274, %p3167) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1287 = %1272(%1271, meta[relay.Constant][538] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1288 = %1286(%1285, meta[relay.Constant][547] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][548] /* ty=Tensor[(336), float16] */, meta[relay.Constant][549] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1289 = fn (%p0433: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1339: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2166: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3165: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p446: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1260 = nn.conv2d(%p0433, %p1339, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1261 = multiply(%1260, %p2166) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1262 = add(%1261, %p3165) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1262, %p446) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1291 = fn (%p0443: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1347: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1290 = nn.avg_pool2d(%p0443, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1290, %p1347) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1293 = fn (%p0445: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.avg_pool2d(%p0445, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1294 = %1293(%1247) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1295 = fn (%p0444: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1348: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1292 = nn.avg_pool2d(%p0444, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1292, %p1348) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1302 = fn (%p0450: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0450) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1303 = %1302(%1234) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1304 = fn (%p0449: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1352: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0449, %p1352, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1305 = %1304(%1303, meta[relay.Constant][550] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1306 = fn (%p0448: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1351: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2171: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3170: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1299 = nn.conv2d(%p0448, %p1351, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1300 = multiply(%1299, %p2171) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1301 = add(%1300, %p3170) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1301) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1307 = %1306(%1305, meta[relay.Constant][551] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][552] /* ty=Tensor[(336), float16] */, meta[relay.Constant][553] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1308 = fn (%p0447: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1350: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0447, %p1350, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1309 = %1308(%1307, meta[relay.Constant][554] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1310 = fn (%p0446: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1349: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2170: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3169: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p447: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1296 = nn.conv2d(%p0446, %p1349, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1297 = multiply(%1296, %p2170) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1298 = add(%1297, %p3169) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1298, %p447) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1311 = %1259(%1257, meta[relay.Constant][523] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][524] /* ty=Tensor[(336), float16] */, meta[relay.Constant][525] /* ty=Tensor[(336), float16] */, %1258) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1312 = %1289(%1287, meta[relay.Constant][539] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][540] /* ty=Tensor[(336), float16] */, meta[relay.Constant][541] /* ty=Tensor[(336), float16] */, %1288) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1313 = %1291(%1234, %1247) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1314 = %1295(%1247, %1294) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1315 = %1310(%1309, meta[relay.Constant][555] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][556] /* ty=Tensor[(336), float16] */, meta[relay.Constant][557] /* ty=Tensor[(336), float16] */, %1234) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1316 = fn (%p0418: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1328: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p2159: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p3158: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p444: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p513: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    %1217 = (%p0418, %p1328, %p2159, %p3158, %p444, %p513) /* ty=(Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) span=aten::cat_14:0:0 */;
    concatenate(%1217, axis=3) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1317 = %1316(%1247, %1311, %1312, %1313, %1314, %1315) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1318 = fn (%p0417: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    nn.relu(%p0417) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1319 = %1318(%1317) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1320 = fn (%p0416: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, %p1327: Tensor[(336, 1, 1, 2016), float16] /* ty=Tensor[(336, 1, 1, 2016), float16] */, %p2158: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3157: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1215 = nn.conv2d(%p0416, %p1327, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1216 = multiply(%1215, %p2158) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1216, %p3157) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16], Tensor[(336, 1, 1, 2016), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1321 = %1320(%1319, meta[relay.Constant][558] /* ty=Tensor[(336, 1, 1, 2016), float16] */, meta[relay.Constant][559] /* ty=Tensor[(336), float16] */, meta[relay.Constant][560] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1322 = fn (%p0415: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0415) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1323 = %1322(%1321) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1324 = fn (%p0414: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1326: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0414, %p1326, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1325 = %1324(%1323, meta[relay.Constant][561] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1326 = fn (%p0413: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1325: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2157: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3156: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1212 = nn.conv2d(%p0413, %p1325, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1213 = multiply(%1212, %p2157) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1214 = add(%1213, %p3156) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1214) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1327 = %1326(%1325, meta[relay.Constant][562] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][563] /* ty=Tensor[(336), float16] */, meta[relay.Constant][564] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1328 = fn (%p0412: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1324: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0412, %p1324, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1334 = %1208(%1207, meta[relay.Constant][509] /* ty=Tensor[(336, 1, 1, 2016), float16] */, meta[relay.Constant][510] /* ty=Tensor[(336), float16] */, meta[relay.Constant][511] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1335 = fn (%p0455: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0455) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1336 = %1335(%1334) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1337 = fn (%p0454: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1356: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0454, %p1356, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1338 = %1337(%1336, meta[relay.Constant][569] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1339 = fn (%p0453: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1355: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2173: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3172: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1331 = nn.conv2d(%p0453, %p1355, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1332 = multiply(%1331, %p2173) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1333 = add(%1332, %p3172) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1333) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1340 = %1339(%1338, meta[relay.Constant][570] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][571] /* ty=Tensor[(336), float16] */, meta[relay.Constant][572] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1341 = fn (%p0452: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1354: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0452, %p1354, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1342 = %1341(%1340, meta[relay.Constant][573] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1343 = fn (%p0451: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1353: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2172: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3171: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1329 = nn.conv2d(%p0451, %p1353, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1330 = multiply(%1329, %p2172) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1330, %p3171) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1344 = %1328(%1327, meta[relay.Constant][565] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1345 = %1343(%1342, meta[relay.Constant][574] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][575] /* ty=Tensor[(336), float16] */, meta[relay.Constant][576] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1346 = fn (%p0411: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1323: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2156: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3155: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p443: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1209 = nn.conv2d(%p0411, %p1323, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1210 = multiply(%1209, %p2156) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1211 = add(%1210, %p3155) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1211, %p443) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1353 = fn (%p0460: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0460) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1354 = %1353(%1334) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1355 = fn (%p0459: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1360: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0459, %p1360, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1356 = %1355(%1354, meta[relay.Constant][577] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1357 = fn (%p0458: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1359: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2175: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3174: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1350 = nn.conv2d(%p0458, %p1359, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1351 = multiply(%1350, %p2175) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1352 = add(%1351, %p3174) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1352) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1358 = %1357(%1356, meta[relay.Constant][578] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][579] /* ty=Tensor[(336), float16] */, meta[relay.Constant][580] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1359 = fn (%p0457: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1358: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0457, %p1358, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1365 = fn (%p0465: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0465) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1366 = %1365(%1334) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1367 = fn (%p0464: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1364: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0464, %p1364, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1368 = %1367(%1366, meta[relay.Constant][585] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1369 = fn (%p0463: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1363: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2177: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3176: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1362 = nn.conv2d(%p0463, %p1363, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1363 = multiply(%1362, %p2177) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1364 = add(%1363, %p3176) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1364) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1370 = %1369(%1368, meta[relay.Constant][586] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][587] /* ty=Tensor[(336), float16] */, meta[relay.Constant][588] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1371 = fn (%p0462: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1362: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0462, %p1362, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1372 = %1371(%1370, meta[relay.Constant][589] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1373 = fn (%p0461: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1361: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2176: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3175: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1360 = nn.conv2d(%p0461, %p1361, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1361 = multiply(%1360, %p2176) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1361, %p3175) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1374 = %1359(%1358, meta[relay.Constant][581] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1375 = %1373(%1372, meta[relay.Constant][590] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][591] /* ty=Tensor[(336), float16] */, meta[relay.Constant][592] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1376 = fn (%p0456: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1357: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2174: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3173: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p448: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1347 = nn.conv2d(%p0456, %p1357, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1348 = multiply(%1347, %p2174) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1349 = add(%1348, %p3173) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1349, %p448) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1378 = fn (%p0466: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1365: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1377 = nn.avg_pool2d(%p0466, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1377, %p1365) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1380 = fn (%p0468: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.avg_pool2d(%p0468, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1381 = %1380(%1334) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1382 = fn (%p0467: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1366: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1379 = nn.avg_pool2d(%p0467, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1379, %p1366) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1389 = fn (%p0473: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0473) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1390 = %1389(%1321) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1391 = fn (%p0472: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1370: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0472, %p1370, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1392 = %1391(%1390, meta[relay.Constant][593] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1393 = fn (%p0471: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1369: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2179: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3178: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1386 = nn.conv2d(%p0471, %p1369, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1387 = multiply(%1386, %p2179) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1388 = add(%1387, %p3178) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1388) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1394 = %1393(%1392, meta[relay.Constant][594] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][595] /* ty=Tensor[(336), float16] */, meta[relay.Constant][596] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1395 = fn (%p0470: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1368: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0470, %p1368, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1396 = %1395(%1394, meta[relay.Constant][597] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1397 = fn (%p0469: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1367: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2178: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3177: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p449: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1383 = nn.conv2d(%p0469, %p1367, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1384 = multiply(%1383, %p2178) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1385 = add(%1384, %p3177) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1385, %p449) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1398 = %1346(%1344, meta[relay.Constant][566] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][567] /* ty=Tensor[(336), float16] */, meta[relay.Constant][568] /* ty=Tensor[(336), float16] */, %1345) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1399 = %1376(%1374, meta[relay.Constant][582] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][583] /* ty=Tensor[(336), float16] */, meta[relay.Constant][584] /* ty=Tensor[(336), float16] */, %1375) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1400 = %1378(%1321, %1334) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1401 = %1382(%1334, %1381) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1402 = %1397(%1396, meta[relay.Constant][598] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][599] /* ty=Tensor[(336), float16] */, meta[relay.Constant][600] /* ty=Tensor[(336), float16] */, %1321) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1403 = fn (%p019: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p113: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p211: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p310: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p44: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p54: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    %23 = (%p019, %p113, %p211, %p310, %p44, %p54) /* ty=(Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) span=aten::cat_15:0:0 */;
    concatenate(%23, axis=3) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1404 = %1403(%1334, %1398, %1399, %1400, %1401, %1402) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1405 = fn (%p018: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    nn.relu(%p018) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1406 = %1405(%1404) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1407 = fn (%p017: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, %p112: Tensor[(336, 1, 1, 2016), float16] /* ty=Tensor[(336, 1, 1, 2016), float16] */, %p210: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p39: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %21 = nn.conv2d(%p017, %p112, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %22 = multiply(%21, %p210) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%22, %p39) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16], Tensor[(336, 1, 1, 2016), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1419 = fn (%p0483: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    nn.relu(%p0483) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1420 = %1419(%1317) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1421 = fn (%p0482: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, %p1377: Tensor[(336, 1, 1, 2016), float16] /* ty=Tensor[(336, 1, 1, 2016), float16] */, %p2184: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3183: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1417 = nn.conv2d(%p0482, %p1377, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1418 = multiply(%1417, %p2184) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1418, %p3183) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16], Tensor[(336, 1, 1, 2016), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1430 = fn (%p0490: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    nn.relu(%p0490) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1431 = %1430(%1404) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1432 = fn (%p0489: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, %p1382: Tensor[(336, 1, 1, 2016), float16] /* ty=Tensor[(336, 1, 1, 2016), float16] */, %p2187: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3186: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1428 = nn.conv2d(%p0489, %p1382, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1429 = multiply(%1428, %p2187) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1429, %p3186) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16], Tensor[(336, 1, 1, 2016), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1433 = %1432(%1431, meta[relay.Constant][607] /* ty=Tensor[(336, 1, 1, 2016), float16] */, meta[relay.Constant][608] /* ty=Tensor[(336), float16] */, meta[relay.Constant][609] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1434 = fn (%p0488: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0488) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1435 = %1434(%1433) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1436 = fn (%p0487: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1381: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0487, %p1381, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1437 = %1436(%1435, meta[relay.Constant][610] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1438 = fn (%p0486: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1380: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2186: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3185: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1425 = nn.conv2d(%p0486, %p1380, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1426 = multiply(%1425, %p2186) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1427 = add(%1426, %p3185) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1427) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1439 = %1438(%1437, meta[relay.Constant][611] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][612] /* ty=Tensor[(336), float16] */, meta[relay.Constant][613] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1440 = fn (%p0485: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1379: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0485, %p1379, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1446 = %1421(%1420, meta[relay.Constant][604] /* ty=Tensor[(336, 1, 1, 2016), float16] */, meta[relay.Constant][605] /* ty=Tensor[(336), float16] */, meta[relay.Constant][606] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1447 = fn (%p0495: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0495) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1448 = %1447(%1446) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1449 = fn (%p0494: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1386: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0494, %p1386, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1450 = %1449(%1448, meta[relay.Constant][618] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1451 = fn (%p0493: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1385: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2189: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3188: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1443 = nn.conv2d(%p0493, %p1385, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1444 = multiply(%1443, %p2189) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1445 = add(%1444, %p3188) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1445) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1452 = %1451(%1450, meta[relay.Constant][619] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][620] /* ty=Tensor[(336), float16] */, meta[relay.Constant][621] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1453 = fn (%p0492: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1384: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0492, %p1384, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1454 = %1453(%1452, meta[relay.Constant][622] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1455 = fn (%p0491: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1383: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2188: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3187: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1441 = nn.conv2d(%p0491, %p1383, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1442 = multiply(%1441, %p2188) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1442, %p3187) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1456 = %1440(%1439, meta[relay.Constant][614] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1457 = %1455(%1454, meta[relay.Constant][623] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][624] /* ty=Tensor[(336), float16] */, meta[relay.Constant][625] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1458 = fn (%p0484: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1378: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2185: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3184: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p452: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1422 = nn.conv2d(%p0484, %p1378, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1423 = multiply(%1422, %p2185) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1424 = add(%1423, %p3184) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1424, %p452) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1465 = fn (%p0500: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0500) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1466 = %1465(%1446) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1467 = fn (%p0499: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1390: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0499, %p1390, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1468 = %1467(%1466, meta[relay.Constant][626] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1469 = fn (%p0498: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1389: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2191: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3190: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1462 = nn.conv2d(%p0498, %p1389, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1463 = multiply(%1462, %p2191) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1464 = add(%1463, %p3190) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1464) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1470 = %1469(%1468, meta[relay.Constant][627] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][628] /* ty=Tensor[(336), float16] */, meta[relay.Constant][629] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1471 = fn (%p0497: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1388: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0497, %p1388, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1477 = fn (%p0505: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0505) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1478 = %1477(%1446) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1479 = fn (%p0504: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1394: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0504, %p1394, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1480 = %1479(%1478, meta[relay.Constant][634] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1481 = fn (%p0503: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1393: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2193: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3192: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1474 = nn.conv2d(%p0503, %p1393, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1475 = multiply(%1474, %p2193) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1476 = add(%1475, %p3192) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1476) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1482 = %1481(%1480, meta[relay.Constant][635] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][636] /* ty=Tensor[(336), float16] */, meta[relay.Constant][637] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1483 = fn (%p0502: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1392: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0502, %p1392, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1484 = %1483(%1482, meta[relay.Constant][638] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1485 = fn (%p0501: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1391: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2192: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3191: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1472 = nn.conv2d(%p0501, %p1391, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1473 = multiply(%1472, %p2192) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1473, %p3191) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1486 = %1471(%1470, meta[relay.Constant][630] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1487 = %1485(%1484, meta[relay.Constant][639] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][640] /* ty=Tensor[(336), float16] */, meta[relay.Constant][641] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1488 = fn (%p0496: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1387: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2190: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3189: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p453: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1459 = nn.conv2d(%p0496, %p1387, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1460 = multiply(%1459, %p2190) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1461 = add(%1460, %p3189) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1461, %p453) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1490 = fn (%p0506: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1395: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1489 = nn.avg_pool2d(%p0506, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1489, %p1395) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1492 = fn (%p0508: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.avg_pool2d(%p0508, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1493 = %1492(%1446) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1494 = fn (%p0507: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1396: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1491 = nn.avg_pool2d(%p0507, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1491, %p1396) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1501 = fn (%p0513: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0513) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1502 = %1501(%1433) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1503 = fn (%p0512: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1400: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0512, %p1400, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1504 = %1503(%1502, meta[relay.Constant][642] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1505 = fn (%p0511: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1399: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2195: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3194: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1498 = nn.conv2d(%p0511, %p1399, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1499 = multiply(%1498, %p2195) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1500 = add(%1499, %p3194) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1500) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1506 = %1505(%1504, meta[relay.Constant][643] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][644] /* ty=Tensor[(336), float16] */, meta[relay.Constant][645] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1507 = fn (%p0510: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1398: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0510, %p1398, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1508 = %1507(%1506, meta[relay.Constant][646] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1509 = fn (%p0509: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1397: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2194: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3193: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p454: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1495 = nn.conv2d(%p0509, %p1397, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1496 = multiply(%1495, %p2194) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1497 = add(%1496, %p3193) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1497, %p454) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1510 = %1458(%1456, meta[relay.Constant][615] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][616] /* ty=Tensor[(336), float16] */, meta[relay.Constant][617] /* ty=Tensor[(336), float16] */, %1457) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1511 = %1488(%1486, meta[relay.Constant][631] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][632] /* ty=Tensor[(336), float16] */, meta[relay.Constant][633] /* ty=Tensor[(336), float16] */, %1487) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1512 = %1490(%1433, %1446) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1513 = %1494(%1446, %1493) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1514 = %1509(%1508, meta[relay.Constant][647] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][648] /* ty=Tensor[(336), float16] */, meta[relay.Constant][649] /* ty=Tensor[(336), float16] */, %1433) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1515 = fn (%p0481: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1376: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p2183: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p3182: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p451: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p514: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    %1416 = (%p0481, %p1376, %p2183, %p3182, %p451, %p514) /* ty=(Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) span=aten::cat_16:0:0 */;
    concatenate(%1416, axis=3) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1516 = %1515(%1446, %1510, %1511, %1512, %1513, %1514) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1517 = fn (%p0480: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    nn.relu(%p0480) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1518 = %1517(%1516) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1519 = fn (%p0479: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, %p1375: Tensor[(336, 1, 1, 2016), float16] /* ty=Tensor[(336, 1, 1, 2016), float16] */, %p2182: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3181: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1414 = nn.conv2d(%p0479, %p1375, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1415 = multiply(%1414, %p2182) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1415, %p3181) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16], Tensor[(336, 1, 1, 2016), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1520 = %1519(%1518, meta[relay.Constant][650] /* ty=Tensor[(336, 1, 1, 2016), float16] */, meta[relay.Constant][651] /* ty=Tensor[(336), float16] */, meta[relay.Constant][652] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1521 = fn (%p0478: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0478) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1522 = %1521(%1520) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1523 = fn (%p0477: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1374: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0477, %p1374, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1524 = %1523(%1522, meta[relay.Constant][653] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1525 = fn (%p0476: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1373: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2181: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3180: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1411 = nn.conv2d(%p0476, %p1373, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1412 = multiply(%1411, %p2181) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1413 = add(%1412, %p3180) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1413) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1526 = %1525(%1524, meta[relay.Constant][654] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][655] /* ty=Tensor[(336), float16] */, meta[relay.Constant][656] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1527 = fn (%p0475: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1372: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0475, %p1372, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1533 = %1407(%1406, meta[relay.Constant][601] /* ty=Tensor[(336, 1, 1, 2016), float16] */, meta[relay.Constant][602] /* ty=Tensor[(336), float16] */, meta[relay.Constant][603] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1534 = fn (%p0518: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0518) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1535 = %1534(%1533) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1536 = fn (%p0517: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1404: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0517, %p1404, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1537 = %1536(%1535, meta[relay.Constant][661] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1538 = fn (%p0516: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1403: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2197: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3196: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1530 = nn.conv2d(%p0516, %p1403, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1531 = multiply(%1530, %p2197) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1532 = add(%1531, %p3196) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1532) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1539 = %1538(%1537, meta[relay.Constant][662] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][663] /* ty=Tensor[(336), float16] */, meta[relay.Constant][664] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1540 = fn (%p0515: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1402: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0515, %p1402, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1541 = %1540(%1539, meta[relay.Constant][665] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1542 = fn (%p0514: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1401: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2196: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3195: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1528 = nn.conv2d(%p0514, %p1401, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1529 = multiply(%1528, %p2196) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1529, %p3195) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1543 = %1527(%1526, meta[relay.Constant][657] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1544 = %1542(%1541, meta[relay.Constant][666] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][667] /* ty=Tensor[(336), float16] */, meta[relay.Constant][668] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1545 = fn (%p0474: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1371: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2180: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3179: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p450: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1408 = nn.conv2d(%p0474, %p1371, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1409 = multiply(%1408, %p2180) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1410 = add(%1409, %p3179) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1410, %p450) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1552 = fn (%p0523: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0523) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1553 = %1552(%1533) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1554 = fn (%p0522: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1408: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0522, %p1408, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1555 = %1554(%1553, meta[relay.Constant][669] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1556 = fn (%p0521: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1407: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2199: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3198: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1549 = nn.conv2d(%p0521, %p1407, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1550 = multiply(%1549, %p2199) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1551 = add(%1550, %p3198) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1551) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1557 = %1556(%1555, meta[relay.Constant][670] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][671] /* ty=Tensor[(336), float16] */, meta[relay.Constant][672] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1558 = fn (%p0520: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1406: Tensor[(336, 5, 5, 1), float16] /* ty=Tensor[(336, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0520, %p1406, padding=[2, 2, 2, 2], groups=336, channels=336, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 5, 5, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1564 = fn (%p0528: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0528) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1565 = %1564(%1533) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1566 = fn (%p0527: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1412: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0527, %p1412, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1567 = %1566(%1565, meta[relay.Constant][677] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1568 = fn (%p0526: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1411: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2201: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3200: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1561 = nn.conv2d(%p0526, %p1411, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1562 = multiply(%1561, %p2201) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1563 = add(%1562, %p3200) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1563) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1569 = %1568(%1567, meta[relay.Constant][678] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][679] /* ty=Tensor[(336), float16] */, meta[relay.Constant][680] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1570 = fn (%p0525: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1410: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0525, %p1410, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1571 = %1570(%1569, meta[relay.Constant][681] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1572 = fn (%p0524: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1409: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2200: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3199: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1559 = nn.conv2d(%p0524, %p1409, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1560 = multiply(%1559, %p2200) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1560, %p3199) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1573 = %1558(%1557, meta[relay.Constant][673] /* ty=Tensor[(336, 5, 5, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1574 = %1572(%1571, meta[relay.Constant][682] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][683] /* ty=Tensor[(336), float16] */, meta[relay.Constant][684] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1575 = fn (%p0519: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1405: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2198: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3197: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p455: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1546 = nn.conv2d(%p0519, %p1405, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1547 = multiply(%1546, %p2198) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1548 = add(%1547, %p3197) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1548, %p455) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1577 = fn (%p0529: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1413: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1576 = nn.avg_pool2d(%p0529, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1576, %p1413) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1579 = fn (%p0531: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.avg_pool2d(%p0531, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1580 = %1579(%1533) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1581 = fn (%p0530: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1414: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1578 = nn.avg_pool2d(%p0530, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1578, %p1414) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1588 = fn (%p0536: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.relu(%p0536) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1589 = %1588(%1520) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1590 = fn (%p0535: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1418: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0535, %p1418, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1591 = %1590(%1589, meta[relay.Constant][685] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1592 = fn (%p0534: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1417: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2203: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3202: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1585 = nn.conv2d(%p0534, %p1417, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1586 = multiply(%1585, %p2203) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1587 = add(%1586, %p3202) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    nn.relu(%1587) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1593 = %1592(%1591, meta[relay.Constant][686] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][687] /* ty=Tensor[(336), float16] */, meta[relay.Constant][688] /* ty=Tensor[(336), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1594 = fn (%p0533: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1416: Tensor[(336, 3, 3, 1), float16] /* ty=Tensor[(336, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    nn.conv2d(%p0533, %p1416, padding=[1, 1, 1, 1], groups=336, channels=336, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 3, 3, 1), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1595 = %1594(%1593, meta[relay.Constant][689] /* ty=Tensor[(336, 3, 3, 1), float16] */) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1596 = fn (%p0532: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p1415: Tensor[(336, 1, 1, 336), float16] /* ty=Tensor[(336, 1, 1, 336), float16] */, %p2202: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p3201: Tensor[(336), float16] /* ty=Tensor[(336), float16] */, %p456: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 336), float16] {
    %1582 = nn.conv2d(%p0532, %p1415, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1583 = multiply(%1582, %p2202) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    %1584 = add(%1583, %p3201) /* ty=Tensor[(16, 21, 21, 336), float16] */;
    add(%1584, %p456) /* ty=Tensor[(16, 21, 21, 336), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(336, 1, 1, 336), float16], Tensor[(336), float16], Tensor[(336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 336), float16] */;
  %1597 = %1545(%1543, meta[relay.Constant][658] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][659] /* ty=Tensor[(336), float16] */, meta[relay.Constant][660] /* ty=Tensor[(336), float16] */, %1544) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1598 = %1575(%1573, meta[relay.Constant][674] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][675] /* ty=Tensor[(336), float16] */, meta[relay.Constant][676] /* ty=Tensor[(336), float16] */, %1574) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1599 = %1577(%1520, %1533) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1600 = %1581(%1533, %1580) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1601 = %1596(%1595, meta[relay.Constant][690] /* ty=Tensor[(336, 1, 1, 336), float16] */, meta[relay.Constant][691] /* ty=Tensor[(336), float16] */, meta[relay.Constant][692] /* ty=Tensor[(336), float16] */, %1520) /* ty=Tensor[(16, 21, 21, 336), float16] */;
  %1602 = fn (%p016: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p111: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p29: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p38: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p43: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, %p53: Tensor[(16, 21, 21, 336), float16] /* ty=Tensor[(16, 21, 21, 336), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    %19 = (%p016, %p111, %p29, %p38, %p43, %p53) /* ty=(Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) span=aten::cat_17:0:0 */;
    %20 = concatenate(%19, axis=3) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
    nn.relu(%20) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16], Tensor[(16, 21, 21, 336), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1603 = %1602(%1533, %1597, %1598, %1599, %1600, %1601) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1604 = fn (%p015: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, %p110: Tensor[(672, 1, 1, 2016), float16] /* ty=Tensor[(672, 1, 1, 2016), float16] */, %p28: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p37: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 672), float16] {
    %17 = nn.conv2d(%p015, %p110, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 672), float16] */;
    %18 = multiply(%17, %p28) /* ty=Tensor[(16, 21, 21, 672), float16] */;
    add(%18, %p37) /* ty=Tensor[(16, 21, 21, 672), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16], Tensor[(672, 1, 1, 2016), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 21, 21, 672), float16] */;
  %1605 = %1604(%1603, meta[relay.Constant][693] /* ty=Tensor[(672, 1, 1, 2016), float16] */, meta[relay.Constant][694] /* ty=Tensor[(672), float16] */, meta[relay.Constant][695] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 21, 21, 672), float16] */;
  %1606 = fn (%p014: Tensor[(16, 21, 21, 672), float16] /* ty=Tensor[(16, 21, 21, 672), float16] */, %p19: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 23, 23, 672), float16] {
    nn.pad(%p014, %p19, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(16, 23, 23, 672), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 672), float16], float16) -> Tensor[(16, 23, 23, 672), float16] */;
  %1615 = fn (%p0543: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    nn.relu(%p0543) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1616 = %1615(%1516) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1617 = fn (%p0542: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, %p1424: Tensor[(672, 1, 1, 2016), float16] /* ty=Tensor[(672, 1, 1, 2016), float16] */, %p2206: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3205: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 672), float16] {
    %1613 = nn.conv2d(%p0542, %p1424, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 21, 21, 672), float16] */;
    %1614 = multiply(%1613, %p2206) /* ty=Tensor[(16, 21, 21, 672), float16] */;
    add(%1614, %p3205) /* ty=Tensor[(16, 21, 21, 672), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16], Tensor[(672, 1, 1, 2016), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 21, 21, 672), float16] */;
  %1618 = %1617(%1616, meta[relay.Constant][696] /* ty=Tensor[(672, 1, 1, 2016), float16] */, meta[relay.Constant][697] /* ty=Tensor[(672), float16] */, meta[relay.Constant][698] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 21, 21, 672), float16] */;
  %1619 = fn (%p0541: Tensor[(16, 21, 21, 672), float16] /* ty=Tensor[(16, 21, 21, 672), float16] */, %p1423: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 27, 27, 672), float16] {
    %1612 = nn.relu(%p0541) /* ty=Tensor[(16, 21, 21, 672), float16] */;
    nn.pad(%1612, %p1423, pad_width=[[0, 0], [3, 3], [3, 3], [0, 0]]) /* ty=Tensor[(16, 27, 27, 672), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 672), float16], float16) -> Tensor[(16, 27, 27, 672), float16] */;
  %1620 = %1619(%1618, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 27, 27, 672), float16] */;
  %1621 = fn (%p0540: Tensor[(16, 27, 27, 672), float16] /* ty=Tensor[(16, 27, 27, 672), float16] */, %p1422: Tensor[(672, 7, 7, 1), float16] /* ty=Tensor[(672, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0540, %p1422, strides=[2, 2], padding=[0, 0, 0, 0], groups=672, channels=672, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 27, 27, 672), float16], Tensor[(672, 7, 7, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1622 = %1621(%1620, meta[relay.Constant][699] /* ty=Tensor[(672, 7, 7, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1623 = fn (%p0539: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1421: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2205: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3204: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1609 = nn.conv2d(%p0539, %p1421, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1610 = multiply(%1609, %p2205) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1611 = add(%1610, %p3204) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1611) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1624 = %1623(%1622, meta[relay.Constant][700] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][701] /* ty=Tensor[(672), float16] */, meta[relay.Constant][702] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1625 = fn (%p0538: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1420: Tensor[(672, 7, 7, 1), float16] /* ty=Tensor[(672, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0538, %p1420, padding=[3, 3, 3, 3], groups=672, channels=672, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 7, 7, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1626 = %1625(%1624, meta[relay.Constant][703] /* ty=Tensor[(672, 7, 7, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1627 = fn (%p0537: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1419: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2204: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3203: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1607 = nn.conv2d(%p0537, %p1419, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1608 = multiply(%1607, %p2204) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1608, %p3203) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1628 = %1606(%1605, -inff16 /* ty=float16 */) /* ty=Tensor[(16, 23, 23, 672), float16] */;
  %1629 = %1627(%1626, meta[relay.Constant][704] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][705] /* ty=Tensor[(672), float16] */, meta[relay.Constant][706] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1630 = fn (%p013: Tensor[(16, 23, 23, 672), float16] /* ty=Tensor[(16, 23, 23, 672), float16] */, %p18: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %16 = nn.max_pool2d(%p013, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%16, %p18) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 23, 23, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1632 = fn (%p0545: Tensor[(16, 21, 21, 672), float16] /* ty=Tensor[(16, 21, 21, 672), float16] */, %p1426: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 23, 23, 672), float16] {
    nn.pad(%p0545, %p1426, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(16, 23, 23, 672), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 672), float16], float16) -> Tensor[(16, 23, 23, 672), float16] */;
  %1639 = fn (%p0550: Tensor[(16, 21, 21, 672), float16] /* ty=Tensor[(16, 21, 21, 672), float16] */, %p1431: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 25, 25, 672), float16] {
    %1638 = nn.relu(%p0550) /* ty=Tensor[(16, 21, 21, 672), float16] */;
    nn.pad(%1638, %p1431, pad_width=[[0, 0], [2, 2], [2, 2], [0, 0]]) /* ty=Tensor[(16, 25, 25, 672), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 672), float16], float16) -> Tensor[(16, 25, 25, 672), float16] */;
  %1640 = %1639(%1618, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 25, 25, 672), float16] */;
  %1641 = fn (%p0549: Tensor[(16, 25, 25, 672), float16] /* ty=Tensor[(16, 25, 25, 672), float16] */, %p1430: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0549, %p1430, strides=[2, 2], padding=[0, 0, 0, 0], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 25, 25, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1642 = %1641(%1640, meta[relay.Constant][707] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1643 = fn (%p0548: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1429: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2208: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3207: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1635 = nn.conv2d(%p0548, %p1429, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1636 = multiply(%1635, %p2208) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1637 = add(%1636, %p3207) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1637) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1644 = %1643(%1642, meta[relay.Constant][708] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][709] /* ty=Tensor[(672), float16] */, meta[relay.Constant][710] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1645 = fn (%p0547: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1428: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0547, %p1428, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1646 = %1645(%1644, meta[relay.Constant][711] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1647 = fn (%p0546: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1427: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2207: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3206: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1633 = nn.conv2d(%p0546, %p1427, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1634 = multiply(%1633, %p2207) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1634, %p3206) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1648 = %1632(%1605, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 23, 23, 672), float16] */;
  %1649 = %1647(%1646, meta[relay.Constant][712] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][713] /* ty=Tensor[(672), float16] */, meta[relay.Constant][714] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1650 = fn (%p0544: Tensor[(16, 23, 23, 672), float16] /* ty=Tensor[(16, 23, 23, 672), float16] */, %p1425: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1631 = nn.avg_pool2d(%p0544, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1631, %p1425) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 23, 23, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1659 = fn (%p0556: Tensor[(16, 21, 21, 672), float16] /* ty=Tensor[(16, 21, 21, 672), float16] */, %p1437: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 25, 25, 672), float16] {
    %1658 = nn.relu(%p0556) /* ty=Tensor[(16, 21, 21, 672), float16] */;
    nn.pad(%1658, %p1437, pad_width=[[0, 0], [2, 2], [2, 2], [0, 0]]) /* ty=Tensor[(16, 25, 25, 672), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 672), float16], float16) -> Tensor[(16, 25, 25, 672), float16] */;
  %1660 = %1659(%1605, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 25, 25, 672), float16] */;
  %1661 = fn (%p0555: Tensor[(16, 25, 25, 672), float16] /* ty=Tensor[(16, 25, 25, 672), float16] */, %p1436: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0555, %p1436, strides=[2, 2], padding=[0, 0, 0, 0], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 25, 25, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1662 = %1661(%1660, meta[relay.Constant][715] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1663 = fn (%p0554: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1435: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2210: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3209: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1655 = nn.conv2d(%p0554, %p1435, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1656 = multiply(%1655, %p2210) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1657 = add(%1656, %p3209) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1657) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1664 = %1663(%1662, meta[relay.Constant][716] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][717] /* ty=Tensor[(672), float16] */, meta[relay.Constant][718] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1665 = fn (%p0553: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1434: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0553, %p1434, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1672 = fn (%p0561: Tensor[(16, 21, 21, 672), float16] /* ty=Tensor[(16, 21, 21, 672), float16] */, %p1442: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 27, 27, 672), float16] {
    %1671 = nn.relu(%p0561) /* ty=Tensor[(16, 21, 21, 672), float16] */;
    nn.pad(%1671, %p1442, pad_width=[[0, 0], [3, 3], [3, 3], [0, 0]]) /* ty=Tensor[(16, 27, 27, 672), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 672), float16], float16) -> Tensor[(16, 27, 27, 672), float16] */;
  %1673 = %1672(%1618, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 27, 27, 672), float16] */;
  %1674 = fn (%p0560: Tensor[(16, 27, 27, 672), float16] /* ty=Tensor[(16, 27, 27, 672), float16] */, %p1441: Tensor[(672, 7, 7, 1), float16] /* ty=Tensor[(672, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0560, %p1441, strides=[2, 2], padding=[0, 0, 0, 0], groups=672, channels=672, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 27, 27, 672), float16], Tensor[(672, 7, 7, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1675 = %1674(%1673, meta[relay.Constant][723] /* ty=Tensor[(672, 7, 7, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1676 = fn (%p0559: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1440: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2212: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3211: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1668 = nn.conv2d(%p0559, %p1440, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1669 = multiply(%1668, %p2212) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1670 = add(%1669, %p3211) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1670) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1677 = %1676(%1675, meta[relay.Constant][724] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][725] /* ty=Tensor[(672), float16] */, meta[relay.Constant][726] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1678 = fn (%p0558: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1439: Tensor[(672, 7, 7, 1), float16] /* ty=Tensor[(672, 7, 7, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0558, %p1439, padding=[3, 3, 3, 3], groups=672, channels=672, kernel_size=[7, 7], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 7, 7, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1679 = %1678(%1677, meta[relay.Constant][727] /* ty=Tensor[(672, 7, 7, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1680 = fn (%p0557: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1438: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2211: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3210: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1666 = nn.conv2d(%p0557, %p1438, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1667 = multiply(%1666, %p2211) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1667, %p3210) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1681 = %1665(%1664, meta[relay.Constant][719] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1682 = %1680(%1679, meta[relay.Constant][728] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][729] /* ty=Tensor[(672), float16] */, meta[relay.Constant][730] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1683 = fn (%p0552: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1433: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2209: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3208: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p457: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1652 = nn.conv2d(%p0552, %p1433, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1653 = multiply(%1652, %p2209) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1654 = add(%1653, %p3208) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1654, %p457) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1684 = %1683(%1681, meta[relay.Constant][720] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][721] /* ty=Tensor[(672), float16] */, meta[relay.Constant][722] /* ty=Tensor[(672), float16] */, %1682) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1685 = %1630(%1628, %1629) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1686 = fn (%p0551: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1432: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1651 = nn.avg_pool2d(%p0551, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1651, %p1432) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1693 = fn (%p0566: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0566) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1694 = %1693(%1684) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1695 = fn (%p0565: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1446: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0565, %p1446, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1696 = %1695(%1694, meta[relay.Constant][731] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1697 = fn (%p0564: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1445: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2214: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3213: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1690 = nn.conv2d(%p0564, %p1445, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1691 = multiply(%1690, %p2214) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1692 = add(%1691, %p3213) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1692) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1698 = %1697(%1696, meta[relay.Constant][732] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][733] /* ty=Tensor[(672), float16] */, meta[relay.Constant][734] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1699 = fn (%p0563: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1444: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0563, %p1444, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1700 = fn (%p0568: Tensor[(16, 21, 21, 672), float16] /* ty=Tensor[(16, 21, 21, 672), float16] */, %p1447: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 23, 23, 672), float16] {
    nn.pad(%p0568, %p1447, pad_width=[[0, 0], [1, 1], [1, 1], [0, 0]]) /* ty=Tensor[(16, 23, 23, 672), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 672), float16], float16) -> Tensor[(16, 23, 23, 672), float16] */;
  %1701 = %1700(%1605, -inff16 /* ty=float16 */) /* ty=Tensor[(16, 23, 23, 672), float16] */;
  %1702 = fn (%p0567: Tensor[(16, 23, 23, 672), float16] /* ty=Tensor[(16, 23, 23, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.max_pool2d(%p0567, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 23, 23, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1703 = %1699(%1698, meta[relay.Constant][735] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1704 = %1702(%1701) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1705 = fn (%p0562: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1443: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2213: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3212: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p458: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1687 = nn.conv2d(%p0562, %p1443, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1688 = multiply(%1687, %p2213) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1689 = add(%1688, %p3212) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1689, %p458) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1706 = %1650(%1648, %1649) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1707 = %1686(%1684, %1685) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1708 = %1705(%1703, meta[relay.Constant][736] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][737] /* ty=Tensor[(672), float16] */, meta[relay.Constant][738] /* ty=Tensor[(672), float16] */, %1704) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1709 = fn (%p012: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p17: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p27: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p36: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 2688), float16] {
    %15 = (%p012, %p17, %p27, %p36) /* ty=(Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) span=aten::cat_18:0:0 */;
    concatenate(%15, axis=3) /* ty=Tensor[(16, 11, 11, 2688), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 2688), float16] */;
  %1710 = %1709(%1685, %1706, %1707, %1708) /* ty=Tensor[(16, 11, 11, 2688), float16] */;
  %1711 = fn (%p011: Tensor[(16, 11, 11, 2688), float16] /* ty=Tensor[(16, 11, 11, 2688), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 2688), float16] {
    nn.relu(%p011) /* ty=Tensor[(16, 11, 11, 2688), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 2688), float16]) -> Tensor[(16, 11, 11, 2688), float16] */;
  %1712 = %1711(%1710) /* ty=Tensor[(16, 11, 11, 2688), float16] */;
  %1713 = fn (%p010: Tensor[(16, 11, 11, 2688), float16] /* ty=Tensor[(16, 11, 11, 2688), float16] */, %p16: Tensor[(672, 1, 1, 2688), float16] /* ty=Tensor[(672, 1, 1, 2688), float16] */, %p26: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p35: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %13 = nn.conv2d(%p010, %p16, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %14 = multiply(%13, %p26) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%14, %p35) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 2688), float16], Tensor[(672, 1, 1, 2688), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1726 = fn (%p0580: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    nn.relu(%p0580) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16]) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1727 = %1726(%1516) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1728 = fn (%p0579: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 2016), float16] {
    nn.avg_pool2d(%p0579, pool_size=[1, 1], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16]) -> Tensor[(16, 11, 11, 2016), float16] */;
  %1729 = %1728(%1727) /* ty=Tensor[(16, 11, 11, 2016), float16] */;
  %1730 = fn (%p0578: Tensor[(16, 11, 11, 2016), float16] /* ty=Tensor[(16, 11, 11, 2016), float16] */, %p1455: Tensor[(336, 1, 1, 2016), float16] /* ty=Tensor[(336, 1, 1, 2016), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 336), float16] {
    nn.conv2d(%p0578, %p1455, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 336), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 2016), float16], Tensor[(336, 1, 1, 2016), float16]) -> Tensor[(16, 11, 11, 336), float16] */;
  %1731 = fn (%p0583: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, %p1457: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 21, 21, 2016), float16] {
    nn.pad(%p0583, %p1457, pad_width=[[0, 0], [-1, 1], [-1, 1], [0, 0]]) /* ty=Tensor[(16, 21, 21, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16], float16) -> Tensor[(16, 21, 21, 2016), float16] */;
  %1732 = %1731(%1727, 0f16 /* ty=float16 */) /* ty=Tensor[(16, 21, 21, 2016), float16] */;
  %1733 = fn (%p0582: Tensor[(16, 21, 21, 2016), float16] /* ty=Tensor[(16, 21, 21, 2016), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 2016), float16] {
    nn.avg_pool2d(%p0582, pool_size=[1, 1], strides=[2, 2], padding=[0, 0, 0, 0], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 2016), float16] */
  } /* ty=fn (Tensor[(16, 21, 21, 2016), float16]) -> Tensor[(16, 11, 11, 2016), float16] */;
  %1734 = %1733(%1732) /* ty=Tensor[(16, 11, 11, 2016), float16] */;
  %1735 = fn (%p0581: Tensor[(16, 11, 11, 2016), float16] /* ty=Tensor[(16, 11, 11, 2016), float16] */, %p1456: Tensor[(336, 1, 1, 2016), float16] /* ty=Tensor[(336, 1, 1, 2016), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 336), float16] {
    nn.conv2d(%p0581, %p1456, padding=[0, 0, 0, 0], channels=336, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 336), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 2016), float16], Tensor[(336, 1, 1, 2016), float16]) -> Tensor[(16, 11, 11, 336), float16] */;
  %1736 = %1730(%1729, meta[relay.Constant][742] /* ty=Tensor[(336, 1, 1, 2016), float16] */) /* ty=Tensor[(16, 11, 11, 336), float16] */;
  %1737 = %1735(%1734, meta[relay.Constant][743] /* ty=Tensor[(336, 1, 1, 2016), float16] */) /* ty=Tensor[(16, 11, 11, 336), float16] */;
  %1738 = fn (%p0577: Tensor[(16, 11, 11, 336), float16] /* ty=Tensor[(16, 11, 11, 336), float16] */, %p1454: Tensor[(16, 11, 11, 336), float16] /* ty=Tensor[(16, 11, 11, 336), float16] */, %p2219: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3218: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1723 = (%p0577, %p1454) /* ty=(Tensor[(16, 11, 11, 336), float16], Tensor[(16, 11, 11, 336), float16]) span=aten::cat_19:0:0 */;
    %1724 = concatenate(%1723, axis=3) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1725 = multiply(%1724, %p2219) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1725, %p3218) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 336), float16], Tensor[(16, 11, 11, 336), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1747 = fn (%p0590: Tensor[(16, 11, 11, 2688), float16] /* ty=Tensor[(16, 11, 11, 2688), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 2688), float16] {
    nn.relu(%p0590) /* ty=Tensor[(16, 11, 11, 2688), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 2688), float16]) -> Tensor[(16, 11, 11, 2688), float16] */;
  %1748 = %1747(%1710) /* ty=Tensor[(16, 11, 11, 2688), float16] */;
  %1749 = fn (%p0589: Tensor[(16, 11, 11, 2688), float16] /* ty=Tensor[(16, 11, 11, 2688), float16] */, %p1462: Tensor[(672, 1, 1, 2688), float16] /* ty=Tensor[(672, 1, 1, 2688), float16] */, %p2222: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3221: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1745 = nn.conv2d(%p0589, %p1462, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1746 = multiply(%1745, %p2222) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1746, %p3221) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 2688), float16], Tensor[(672, 1, 1, 2688), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1750 = %1749(%1748, meta[relay.Constant][746] /* ty=Tensor[(672, 1, 1, 2688), float16] */, meta[relay.Constant][747] /* ty=Tensor[(672), float16] */, meta[relay.Constant][748] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1751 = fn (%p0588: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0588) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1752 = %1751(%1750) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1753 = fn (%p0587: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1461: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0587, %p1461, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1754 = %1753(%1752, meta[relay.Constant][749] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1755 = fn (%p0586: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1460: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2221: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3220: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1742 = nn.conv2d(%p0586, %p1460, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1743 = multiply(%1742, %p2221) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1744 = add(%1743, %p3220) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1744) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1756 = %1755(%1754, meta[relay.Constant][750] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][751] /* ty=Tensor[(672), float16] */, meta[relay.Constant][752] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1757 = fn (%p0585: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1459: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0585, %p1459, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1763 = %1738(%1736, %1737, meta[relay.Constant][744] /* ty=Tensor[(672), float16] */, meta[relay.Constant][745] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1764 = fn (%p0595: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0595) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1765 = %1764(%1763) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1766 = fn (%p0594: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1466: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0594, %p1466, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1767 = %1766(%1765, meta[relay.Constant][757] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1768 = fn (%p0593: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1465: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2224: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3223: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1760 = nn.conv2d(%p0593, %p1465, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1761 = multiply(%1760, %p2224) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1762 = add(%1761, %p3223) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1762) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1769 = %1768(%1767, meta[relay.Constant][758] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][759] /* ty=Tensor[(672), float16] */, meta[relay.Constant][760] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1770 = fn (%p0592: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1464: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0592, %p1464, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1771 = %1770(%1769, meta[relay.Constant][761] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1772 = fn (%p0591: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1463: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2223: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3222: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1758 = nn.conv2d(%p0591, %p1463, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1759 = multiply(%1758, %p2223) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1759, %p3222) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1773 = %1757(%1756, meta[relay.Constant][753] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1774 = %1772(%1771, meta[relay.Constant][762] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][763] /* ty=Tensor[(672), float16] */, meta[relay.Constant][764] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1775 = fn (%p0584: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1458: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2220: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3219: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p461: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1739 = nn.conv2d(%p0584, %p1458, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1740 = multiply(%1739, %p2220) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1741 = add(%1740, %p3219) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1741, %p461) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1782 = fn (%p0600: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0600) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1783 = %1782(%1763) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1784 = fn (%p0599: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1470: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0599, %p1470, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1785 = %1784(%1783, meta[relay.Constant][765] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1786 = fn (%p0598: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1469: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2226: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3225: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1779 = nn.conv2d(%p0598, %p1469, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1780 = multiply(%1779, %p2226) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1781 = add(%1780, %p3225) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1781) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1787 = %1786(%1785, meta[relay.Constant][766] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][767] /* ty=Tensor[(672), float16] */, meta[relay.Constant][768] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1788 = fn (%p0597: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1468: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0597, %p1468, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1794 = fn (%p0605: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0605) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1795 = %1794(%1763) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1796 = fn (%p0604: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1474: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0604, %p1474, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1797 = %1796(%1795, meta[relay.Constant][773] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1798 = fn (%p0603: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1473: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2228: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3227: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1791 = nn.conv2d(%p0603, %p1473, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1792 = multiply(%1791, %p2228) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1793 = add(%1792, %p3227) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1793) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1799 = %1798(%1797, meta[relay.Constant][774] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][775] /* ty=Tensor[(672), float16] */, meta[relay.Constant][776] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1800 = fn (%p0602: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1472: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0602, %p1472, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1801 = %1800(%1799, meta[relay.Constant][777] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1802 = fn (%p0601: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1471: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2227: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3226: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1789 = nn.conv2d(%p0601, %p1471, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1790 = multiply(%1789, %p2227) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1790, %p3226) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1803 = %1788(%1787, meta[relay.Constant][769] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1804 = %1802(%1801, meta[relay.Constant][778] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][779] /* ty=Tensor[(672), float16] */, meta[relay.Constant][780] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1805 = fn (%p0596: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1467: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2225: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3224: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p462: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1776 = nn.conv2d(%p0596, %p1467, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1777 = multiply(%1776, %p2225) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1778 = add(%1777, %p3224) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1778, %p462) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1807 = fn (%p0606: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1475: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1806 = nn.avg_pool2d(%p0606, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1806, %p1475) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1809 = fn (%p0608: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.avg_pool2d(%p0608, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1810 = %1809(%1763) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1811 = fn (%p0607: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1476: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1808 = nn.avg_pool2d(%p0607, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1808, %p1476) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1818 = fn (%p0613: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0613) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1819 = %1818(%1750) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1820 = fn (%p0612: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1480: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0612, %p1480, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1821 = %1820(%1819, meta[relay.Constant][781] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1822 = fn (%p0611: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1479: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2230: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3229: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1815 = nn.conv2d(%p0611, %p1479, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1816 = multiply(%1815, %p2230) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1817 = add(%1816, %p3229) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1817) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1823 = %1822(%1821, meta[relay.Constant][782] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][783] /* ty=Tensor[(672), float16] */, meta[relay.Constant][784] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1824 = fn (%p0610: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1478: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0610, %p1478, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1825 = %1824(%1823, meta[relay.Constant][785] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1826 = fn (%p0609: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1477: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2229: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3228: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p463: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1812 = nn.conv2d(%p0609, %p1477, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1813 = multiply(%1812, %p2229) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1814 = add(%1813, %p3228) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1814, %p463) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1827 = %1775(%1773, meta[relay.Constant][754] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][755] /* ty=Tensor[(672), float16] */, meta[relay.Constant][756] /* ty=Tensor[(672), float16] */, %1774) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1828 = %1805(%1803, meta[relay.Constant][770] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][771] /* ty=Tensor[(672), float16] */, meta[relay.Constant][772] /* ty=Tensor[(672), float16] */, %1804) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1829 = %1807(%1750, %1763) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1830 = %1811(%1763, %1810) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1831 = %1826(%1825, meta[relay.Constant][786] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][787] /* ty=Tensor[(672), float16] */, meta[relay.Constant][788] /* ty=Tensor[(672), float16] */, %1750) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1832 = fn (%p0576: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1453: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p2218: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p3217: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p460: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p515: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float16] {
    %1722 = (%p0576, %p1453, %p2218, %p3217, %p460, %p515) /* ty=(Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) span=aten::cat_20:0:0 */;
    concatenate(%1722, axis=3) /* ty=Tensor[(16, 11, 11, 4032), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 4032), float16] */;
  %1833 = %1832(%1763, %1827, %1828, %1829, %1830, %1831) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
  %1834 = fn (%p0575: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float16] {
    nn.relu(%p0575) /* ty=Tensor[(16, 11, 11, 4032), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16]) -> Tensor[(16, 11, 11, 4032), float16] */;
  %1835 = %1834(%1833) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
  %1836 = fn (%p0574: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, %p1452: Tensor[(672, 1, 1, 4032), float16] /* ty=Tensor[(672, 1, 1, 4032), float16] */, %p2217: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3216: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1720 = nn.conv2d(%p0574, %p1452, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1721 = multiply(%1720, %p2217) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1721, %p3216) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16], Tensor[(672, 1, 1, 4032), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1837 = %1836(%1835, meta[relay.Constant][789] /* ty=Tensor[(672, 1, 1, 4032), float16] */, meta[relay.Constant][790] /* ty=Tensor[(672), float16] */, meta[relay.Constant][791] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1838 = fn (%p0573: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0573) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1839 = %1838(%1837) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1840 = fn (%p0572: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1451: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0572, %p1451, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1841 = %1840(%1839, meta[relay.Constant][792] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1842 = fn (%p0571: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1450: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2216: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3215: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1717 = nn.conv2d(%p0571, %p1450, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1718 = multiply(%1717, %p2216) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1719 = add(%1718, %p3215) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1719) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1843 = %1842(%1841, meta[relay.Constant][793] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][794] /* ty=Tensor[(672), float16] */, meta[relay.Constant][795] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1844 = fn (%p0570: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1449: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0570, %p1449, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1850 = %1713(%1712, meta[relay.Constant][739] /* ty=Tensor[(672, 1, 1, 2688), float16] */, meta[relay.Constant][740] /* ty=Tensor[(672), float16] */, meta[relay.Constant][741] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1851 = fn (%p0618: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0618) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1852 = %1851(%1850) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1853 = fn (%p0617: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1484: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0617, %p1484, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1854 = %1853(%1852, meta[relay.Constant][800] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1855 = fn (%p0616: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1483: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2232: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3231: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1847 = nn.conv2d(%p0616, %p1483, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1848 = multiply(%1847, %p2232) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1849 = add(%1848, %p3231) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1849) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1856 = %1855(%1854, meta[relay.Constant][801] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][802] /* ty=Tensor[(672), float16] */, meta[relay.Constant][803] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1857 = fn (%p0615: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1482: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0615, %p1482, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1858 = %1857(%1856, meta[relay.Constant][804] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1859 = fn (%p0614: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1481: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2231: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3230: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1845 = nn.conv2d(%p0614, %p1481, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1846 = multiply(%1845, %p2231) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1846, %p3230) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1860 = %1844(%1843, meta[relay.Constant][796] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1861 = %1859(%1858, meta[relay.Constant][805] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][806] /* ty=Tensor[(672), float16] */, meta[relay.Constant][807] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1862 = fn (%p0569: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1448: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2215: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3214: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p459: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1714 = nn.conv2d(%p0569, %p1448, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1715 = multiply(%1714, %p2215) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1716 = add(%1715, %p3214) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1716, %p459) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1869 = fn (%p0623: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0623) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1870 = %1869(%1850) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1871 = fn (%p0622: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1488: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0622, %p1488, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1872 = %1871(%1870, meta[relay.Constant][808] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1873 = fn (%p0621: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1487: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2234: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3233: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1866 = nn.conv2d(%p0621, %p1487, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1867 = multiply(%1866, %p2234) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1868 = add(%1867, %p3233) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1868) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1874 = %1873(%1872, meta[relay.Constant][809] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][810] /* ty=Tensor[(672), float16] */, meta[relay.Constant][811] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1875 = fn (%p0620: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1486: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0620, %p1486, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1881 = fn (%p0628: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0628) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1882 = %1881(%1850) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1883 = fn (%p0627: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1492: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0627, %p1492, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1884 = %1883(%1882, meta[relay.Constant][816] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1885 = fn (%p0626: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1491: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2236: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3235: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1878 = nn.conv2d(%p0626, %p1491, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1879 = multiply(%1878, %p2236) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1880 = add(%1879, %p3235) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1880) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1886 = %1885(%1884, meta[relay.Constant][817] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][818] /* ty=Tensor[(672), float16] */, meta[relay.Constant][819] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1887 = fn (%p0625: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1490: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0625, %p1490, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1888 = %1887(%1886, meta[relay.Constant][820] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1889 = fn (%p0624: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1489: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2235: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3234: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1876 = nn.conv2d(%p0624, %p1489, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1877 = multiply(%1876, %p2235) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1877, %p3234) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1890 = %1875(%1874, meta[relay.Constant][812] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1891 = %1889(%1888, meta[relay.Constant][821] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][822] /* ty=Tensor[(672), float16] */, meta[relay.Constant][823] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1892 = fn (%p0619: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1485: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2233: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3232: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p464: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1863 = nn.conv2d(%p0619, %p1485, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1864 = multiply(%1863, %p2233) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1865 = add(%1864, %p3232) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1865, %p464) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1894 = fn (%p0629: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1493: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1893 = nn.avg_pool2d(%p0629, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1893, %p1493) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1896 = fn (%p0631: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.avg_pool2d(%p0631, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1897 = %1896(%1850) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1898 = fn (%p0630: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1494: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1895 = nn.avg_pool2d(%p0630, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1895, %p1494) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1905 = fn (%p0636: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0636) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1906 = %1905(%1837) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1907 = fn (%p0635: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1498: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0635, %p1498, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1908 = %1907(%1906, meta[relay.Constant][824] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1909 = fn (%p0634: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1497: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2238: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3237: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1902 = nn.conv2d(%p0634, %p1497, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1903 = multiply(%1902, %p2238) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1904 = add(%1903, %p3237) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1904) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1910 = %1909(%1908, meta[relay.Constant][825] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][826] /* ty=Tensor[(672), float16] */, meta[relay.Constant][827] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1911 = fn (%p0633: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1496: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0633, %p1496, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1912 = %1911(%1910, meta[relay.Constant][828] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1913 = fn (%p0632: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1495: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2237: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3236: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p465: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1899 = nn.conv2d(%p0632, %p1495, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1900 = multiply(%1899, %p2237) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1901 = add(%1900, %p3236) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1901, %p465) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1914 = %1862(%1860, meta[relay.Constant][797] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][798] /* ty=Tensor[(672), float16] */, meta[relay.Constant][799] /* ty=Tensor[(672), float16] */, %1861) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1915 = %1892(%1890, meta[relay.Constant][813] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][814] /* ty=Tensor[(672), float16] */, meta[relay.Constant][815] /* ty=Tensor[(672), float16] */, %1891) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1916 = %1894(%1837, %1850) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1917 = %1898(%1850, %1897) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1918 = %1913(%1912, meta[relay.Constant][829] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][830] /* ty=Tensor[(672), float16] */, meta[relay.Constant][831] /* ty=Tensor[(672), float16] */, %1837) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1919 = fn (%p09: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p15: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p25: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p34: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p42: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p52: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float16] {
    %12 = (%p09, %p15, %p25, %p34, %p42, %p52) /* ty=(Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) span=aten::cat_21:0:0 */;
    concatenate(%12, axis=3) /* ty=Tensor[(16, 11, 11, 4032), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 4032), float16] */;
  %1920 = %1919(%1850, %1914, %1915, %1916, %1917, %1918) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
  %1921 = fn (%p08: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float16] {
    nn.relu(%p08) /* ty=Tensor[(16, 11, 11, 4032), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16]) -> Tensor[(16, 11, 11, 4032), float16] */;
  %1922 = %1921(%1920) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
  %1923 = fn (%p07: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, %p14: Tensor[(672, 1, 1, 4032), float16] /* ty=Tensor[(672, 1, 1, 4032), float16] */, %p24: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p33: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %10 = nn.conv2d(%p07, %p14, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %11 = multiply(%10, %p24) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%11, %p33) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16], Tensor[(672, 1, 1, 4032), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1935 = fn (%p0646: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float16] {
    nn.relu(%p0646) /* ty=Tensor[(16, 11, 11, 4032), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16]) -> Tensor[(16, 11, 11, 4032), float16] */;
  %1936 = %1935(%1833) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
  %1937 = fn (%p0645: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, %p1505: Tensor[(672, 1, 1, 4032), float16] /* ty=Tensor[(672, 1, 1, 4032), float16] */, %p2243: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3242: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1933 = nn.conv2d(%p0645, %p1505, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1934 = multiply(%1933, %p2243) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1934, %p3242) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16], Tensor[(672, 1, 1, 4032), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1946 = fn (%p0653: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float16] {
    nn.relu(%p0653) /* ty=Tensor[(16, 11, 11, 4032), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16]) -> Tensor[(16, 11, 11, 4032), float16] */;
  %1947 = %1946(%1920) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
  %1948 = fn (%p0652: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, %p1510: Tensor[(672, 1, 1, 4032), float16] /* ty=Tensor[(672, 1, 1, 4032), float16] */, %p2246: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3245: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1944 = nn.conv2d(%p0652, %p1510, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1945 = multiply(%1944, %p2246) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1945, %p3245) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16], Tensor[(672, 1, 1, 4032), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1949 = %1948(%1947, meta[relay.Constant][838] /* ty=Tensor[(672, 1, 1, 4032), float16] */, meta[relay.Constant][839] /* ty=Tensor[(672), float16] */, meta[relay.Constant][840] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1950 = fn (%p0651: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0651) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1951 = %1950(%1949) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1952 = fn (%p0650: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1509: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0650, %p1509, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1953 = %1952(%1951, meta[relay.Constant][841] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1954 = fn (%p0649: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1508: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2245: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3244: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1941 = nn.conv2d(%p0649, %p1508, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1942 = multiply(%1941, %p2245) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1943 = add(%1942, %p3244) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1943) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1955 = %1954(%1953, meta[relay.Constant][842] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][843] /* ty=Tensor[(672), float16] */, meta[relay.Constant][844] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1956 = fn (%p0648: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1507: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0648, %p1507, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1962 = %1937(%1936, meta[relay.Constant][835] /* ty=Tensor[(672, 1, 1, 4032), float16] */, meta[relay.Constant][836] /* ty=Tensor[(672), float16] */, meta[relay.Constant][837] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1963 = fn (%p0658: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0658) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1964 = %1963(%1962) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1965 = fn (%p0657: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1514: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0657, %p1514, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1966 = %1965(%1964, meta[relay.Constant][849] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1967 = fn (%p0656: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1513: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2248: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3247: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1959 = nn.conv2d(%p0656, %p1513, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1960 = multiply(%1959, %p2248) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1961 = add(%1960, %p3247) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1961) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1968 = %1967(%1966, meta[relay.Constant][850] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][851] /* ty=Tensor[(672), float16] */, meta[relay.Constant][852] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1969 = fn (%p0655: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1512: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0655, %p1512, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1970 = %1969(%1968, meta[relay.Constant][853] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1971 = fn (%p0654: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1511: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2247: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3246: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1957 = nn.conv2d(%p0654, %p1511, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1958 = multiply(%1957, %p2247) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1958, %p3246) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1972 = %1956(%1955, meta[relay.Constant][845] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1973 = %1971(%1970, meta[relay.Constant][854] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][855] /* ty=Tensor[(672), float16] */, meta[relay.Constant][856] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1974 = fn (%p0647: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1506: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2244: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3243: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p468: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1938 = nn.conv2d(%p0647, %p1506, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1939 = multiply(%1938, %p2244) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1940 = add(%1939, %p3243) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1940, %p468) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1981 = fn (%p0663: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0663) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1982 = %1981(%1962) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1983 = fn (%p0662: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1518: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0662, %p1518, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1984 = %1983(%1982, meta[relay.Constant][857] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1985 = fn (%p0661: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1517: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2250: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3249: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1978 = nn.conv2d(%p0661, %p1517, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1979 = multiply(%1978, %p2250) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1980 = add(%1979, %p3249) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1980) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1986 = %1985(%1984, meta[relay.Constant][858] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][859] /* ty=Tensor[(672), float16] */, meta[relay.Constant][860] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1987 = fn (%p0660: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1516: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0660, %p1516, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1993 = fn (%p0668: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0668) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1994 = %1993(%1962) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1995 = fn (%p0667: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1522: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0667, %p1522, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1996 = %1995(%1994, meta[relay.Constant][865] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1997 = fn (%p0666: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1521: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2252: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3251: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1990 = nn.conv2d(%p0666, %p1521, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1991 = multiply(%1990, %p2252) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1992 = add(%1991, %p3251) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1992) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %1998 = %1997(%1996, meta[relay.Constant][866] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][867] /* ty=Tensor[(672), float16] */, meta[relay.Constant][868] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %1999 = fn (%p0665: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1520: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0665, %p1520, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2000 = %1999(%1998, meta[relay.Constant][869] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2001 = fn (%p0664: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1519: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2251: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3250: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1988 = nn.conv2d(%p0664, %p1519, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1989 = multiply(%1988, %p2251) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1989, %p3250) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2002 = %1987(%1986, meta[relay.Constant][861] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2003 = %2001(%2000, meta[relay.Constant][870] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][871] /* ty=Tensor[(672), float16] */, meta[relay.Constant][872] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2004 = fn (%p0659: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1515: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2249: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3248: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p469: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1975 = nn.conv2d(%p0659, %p1515, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1976 = multiply(%1975, %p2249) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1977 = add(%1976, %p3248) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1977, %p469) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2006 = fn (%p0669: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1523: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2005 = nn.avg_pool2d(%p0669, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2005, %p1523) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2008 = fn (%p0671: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.avg_pool2d(%p0671, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2009 = %2008(%1962) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2010 = fn (%p0670: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1524: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2007 = nn.avg_pool2d(%p0670, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2007, %p1524) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2017 = fn (%p0676: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0676) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2018 = %2017(%1949) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2019 = fn (%p0675: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1528: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0675, %p1528, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2020 = %2019(%2018, meta[relay.Constant][873] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2021 = fn (%p0674: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1527: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2254: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3253: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2014 = nn.conv2d(%p0674, %p1527, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2015 = multiply(%2014, %p2254) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2016 = add(%2015, %p3253) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2016) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2022 = %2021(%2020, meta[relay.Constant][874] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][875] /* ty=Tensor[(672), float16] */, meta[relay.Constant][876] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2023 = fn (%p0673: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1526: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0673, %p1526, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2024 = %2023(%2022, meta[relay.Constant][877] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2025 = fn (%p0672: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1525: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2253: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3252: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p470: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2011 = nn.conv2d(%p0672, %p1525, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2012 = multiply(%2011, %p2253) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2013 = add(%2012, %p3252) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2013, %p470) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2026 = %1974(%1972, meta[relay.Constant][846] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][847] /* ty=Tensor[(672), float16] */, meta[relay.Constant][848] /* ty=Tensor[(672), float16] */, %1973) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2027 = %2004(%2002, meta[relay.Constant][862] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][863] /* ty=Tensor[(672), float16] */, meta[relay.Constant][864] /* ty=Tensor[(672), float16] */, %2003) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2028 = %2006(%1949, %1962) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2029 = %2010(%1962, %2009) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2030 = %2025(%2024, meta[relay.Constant][878] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][879] /* ty=Tensor[(672), float16] */, meta[relay.Constant][880] /* ty=Tensor[(672), float16] */, %1949) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2031 = fn (%p0644: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1504: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p2242: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p3241: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p467: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p516: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float16] {
    %1932 = (%p0644, %p1504, %p2242, %p3241, %p467, %p516) /* ty=(Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) span=aten::cat_22:0:0 */;
    concatenate(%1932, axis=3) /* ty=Tensor[(16, 11, 11, 4032), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 4032), float16] */;
  %2032 = %2031(%1962, %2026, %2027, %2028, %2029, %2030) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
  %2033 = fn (%p0643: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float16] {
    nn.relu(%p0643) /* ty=Tensor[(16, 11, 11, 4032), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16]) -> Tensor[(16, 11, 11, 4032), float16] */;
  %2034 = %2033(%2032) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
  %2035 = fn (%p0642: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, %p1503: Tensor[(672, 1, 1, 4032), float16] /* ty=Tensor[(672, 1, 1, 4032), float16] */, %p2241: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3240: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1930 = nn.conv2d(%p0642, %p1503, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1931 = multiply(%1930, %p2241) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1931, %p3240) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16], Tensor[(672, 1, 1, 4032), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2036 = %2035(%2034, meta[relay.Constant][881] /* ty=Tensor[(672, 1, 1, 4032), float16] */, meta[relay.Constant][882] /* ty=Tensor[(672), float16] */, meta[relay.Constant][883] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2037 = fn (%p0641: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0641) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2038 = %2037(%2036) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2039 = fn (%p0640: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1502: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0640, %p1502, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2040 = %2039(%2038, meta[relay.Constant][884] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2041 = fn (%p0639: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1501: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2240: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3239: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1927 = nn.conv2d(%p0639, %p1501, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1928 = multiply(%1927, %p2240) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1929 = add(%1928, %p3239) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%1929) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2042 = %2041(%2040, meta[relay.Constant][885] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][886] /* ty=Tensor[(672), float16] */, meta[relay.Constant][887] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2043 = fn (%p0638: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1500: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0638, %p1500, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2049 = %1923(%1922, meta[relay.Constant][832] /* ty=Tensor[(672, 1, 1, 4032), float16] */, meta[relay.Constant][833] /* ty=Tensor[(672), float16] */, meta[relay.Constant][834] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2050 = fn (%p0681: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0681) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2051 = %2050(%2049) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2052 = fn (%p0680: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1532: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0680, %p1532, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2053 = %2052(%2051, meta[relay.Constant][892] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2054 = fn (%p0679: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1531: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2256: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3255: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2046 = nn.conv2d(%p0679, %p1531, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2047 = multiply(%2046, %p2256) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2048 = add(%2047, %p3255) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2048) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2055 = %2054(%2053, meta[relay.Constant][893] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][894] /* ty=Tensor[(672), float16] */, meta[relay.Constant][895] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2056 = fn (%p0678: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1530: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0678, %p1530, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2057 = %2056(%2055, meta[relay.Constant][896] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2058 = fn (%p0677: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1529: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2255: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3254: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2044 = nn.conv2d(%p0677, %p1529, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2045 = multiply(%2044, %p2255) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2045, %p3254) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2059 = %2043(%2042, meta[relay.Constant][888] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2060 = %2058(%2057, meta[relay.Constant][897] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][898] /* ty=Tensor[(672), float16] */, meta[relay.Constant][899] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2061 = fn (%p0637: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1499: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2239: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3238: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p466: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %1924 = nn.conv2d(%p0637, %p1499, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1925 = multiply(%1924, %p2239) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %1926 = add(%1925, %p3238) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%1926, %p466) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2068 = fn (%p0686: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0686) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2069 = %2068(%2049) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2070 = fn (%p0685: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1536: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0685, %p1536, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2071 = %2070(%2069, meta[relay.Constant][900] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2072 = fn (%p0684: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1535: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2258: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3257: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2065 = nn.conv2d(%p0684, %p1535, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2066 = multiply(%2065, %p2258) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2067 = add(%2066, %p3257) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2067) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2073 = %2072(%2071, meta[relay.Constant][901] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][902] /* ty=Tensor[(672), float16] */, meta[relay.Constant][903] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2074 = fn (%p0683: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1534: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0683, %p1534, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2080 = fn (%p0691: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0691) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2081 = %2080(%2049) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2082 = fn (%p0690: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1540: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0690, %p1540, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2083 = %2082(%2081, meta[relay.Constant][908] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2084 = fn (%p0689: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1539: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2260: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3259: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2077 = nn.conv2d(%p0689, %p1539, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2078 = multiply(%2077, %p2260) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2079 = add(%2078, %p3259) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2079) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2085 = %2084(%2083, meta[relay.Constant][909] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][910] /* ty=Tensor[(672), float16] */, meta[relay.Constant][911] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2086 = fn (%p0688: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1538: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0688, %p1538, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2087 = %2086(%2085, meta[relay.Constant][912] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2088 = fn (%p0687: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1537: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2259: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3258: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2075 = nn.conv2d(%p0687, %p1537, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2076 = multiply(%2075, %p2259) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2076, %p3258) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2089 = %2074(%2073, meta[relay.Constant][904] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2090 = %2088(%2087, meta[relay.Constant][913] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][914] /* ty=Tensor[(672), float16] */, meta[relay.Constant][915] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2091 = fn (%p0682: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1533: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2257: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3256: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p471: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2062 = nn.conv2d(%p0682, %p1533, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2063 = multiply(%2062, %p2257) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2064 = add(%2063, %p3256) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2064, %p471) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2093 = fn (%p0692: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1541: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2092 = nn.avg_pool2d(%p0692, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2092, %p1541) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2095 = fn (%p0694: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.avg_pool2d(%p0694, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2096 = %2095(%2049) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2097 = fn (%p0693: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1542: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2094 = nn.avg_pool2d(%p0693, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2094, %p1542) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2104 = fn (%p0699: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0699) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2105 = %2104(%2036) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2106 = fn (%p0698: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1546: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0698, %p1546, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2107 = %2106(%2105, meta[relay.Constant][916] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2108 = fn (%p0697: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1545: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2262: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3261: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2101 = nn.conv2d(%p0697, %p1545, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2102 = multiply(%2101, %p2262) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2103 = add(%2102, %p3261) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2103) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2109 = %2108(%2107, meta[relay.Constant][917] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][918] /* ty=Tensor[(672), float16] */, meta[relay.Constant][919] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2110 = fn (%p0696: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1544: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0696, %p1544, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2111 = %2110(%2109, meta[relay.Constant][920] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2112 = fn (%p0695: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1543: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2261: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3260: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p472: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2098 = nn.conv2d(%p0695, %p1543, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2099 = multiply(%2098, %p2261) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2100 = add(%2099, %p3260) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2100, %p472) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2113 = %2061(%2059, meta[relay.Constant][889] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][890] /* ty=Tensor[(672), float16] */, meta[relay.Constant][891] /* ty=Tensor[(672), float16] */, %2060) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2114 = %2091(%2089, meta[relay.Constant][905] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][906] /* ty=Tensor[(672), float16] */, meta[relay.Constant][907] /* ty=Tensor[(672), float16] */, %2090) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2115 = %2093(%2036, %2049) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2116 = %2097(%2049, %2096) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2117 = %2112(%2111, meta[relay.Constant][921] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][922] /* ty=Tensor[(672), float16] */, meta[relay.Constant][923] /* ty=Tensor[(672), float16] */, %2036) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2118 = fn (%p06: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p13: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p23: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p32: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p41: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p51: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float16] {
    %9 = (%p06, %p13, %p23, %p32, %p41, %p51) /* ty=(Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) span=aten::cat_23:0:0 */;
    concatenate(%9, axis=3) /* ty=Tensor[(16, 11, 11, 4032), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 4032), float16] */;
  %2119 = %2118(%2049, %2113, %2114, %2115, %2116, %2117) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
  %2120 = fn (%p05: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float16] {
    nn.relu(%p05) /* ty=Tensor[(16, 11, 11, 4032), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16]) -> Tensor[(16, 11, 11, 4032), float16] */;
  %2121 = %2120(%2119) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
  %2122 = fn (%p04: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, %p12: Tensor[(672, 1, 1, 4032), float16] /* ty=Tensor[(672, 1, 1, 4032), float16] */, %p22: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p31: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %7 = nn.conv2d(%p04, %p12, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %8 = multiply(%7, %p22) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%8, %p31) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16], Tensor[(672, 1, 1, 4032), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2135 = fn (%p0708: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float16] {
    nn.relu(%p0708) /* ty=Tensor[(16, 11, 11, 4032), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16]) -> Tensor[(16, 11, 11, 4032), float16] */;
  %2136 = %2135(%2032) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
  %2137 = fn (%p0707: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, %p1553: Tensor[(672, 1, 1, 4032), float16] /* ty=Tensor[(672, 1, 1, 4032), float16] */, %p2267: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3266: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2133 = nn.conv2d(%p0707, %p1553, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2134 = multiply(%2133, %p2267) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2134, %p3266) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16], Tensor[(672, 1, 1, 4032), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2146 = fn (%p0715: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float16] {
    nn.relu(%p0715) /* ty=Tensor[(16, 11, 11, 4032), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16]) -> Tensor[(16, 11, 11, 4032), float16] */;
  %2147 = %2146(%2119) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
  %2148 = fn (%p0714: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, %p1558: Tensor[(672, 1, 1, 4032), float16] /* ty=Tensor[(672, 1, 1, 4032), float16] */, %p2270: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3269: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2144 = nn.conv2d(%p0714, %p1558, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2145 = multiply(%2144, %p2270) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2145, %p3269) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16], Tensor[(672, 1, 1, 4032), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2149 = %2148(%2147, meta[relay.Constant][930] /* ty=Tensor[(672, 1, 1, 4032), float16] */, meta[relay.Constant][931] /* ty=Tensor[(672), float16] */, meta[relay.Constant][932] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2150 = fn (%p0713: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0713) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2151 = %2150(%2149) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2152 = fn (%p0712: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1557: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0712, %p1557, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2153 = %2152(%2151, meta[relay.Constant][933] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2154 = fn (%p0711: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1556: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2269: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3268: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2141 = nn.conv2d(%p0711, %p1556, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2142 = multiply(%2141, %p2269) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2143 = add(%2142, %p3268) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2143) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2155 = %2154(%2153, meta[relay.Constant][934] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][935] /* ty=Tensor[(672), float16] */, meta[relay.Constant][936] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2156 = fn (%p0710: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1555: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0710, %p1555, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2162 = %2137(%2136, meta[relay.Constant][927] /* ty=Tensor[(672, 1, 1, 4032), float16] */, meta[relay.Constant][928] /* ty=Tensor[(672), float16] */, meta[relay.Constant][929] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2163 = fn (%p0720: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0720) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2164 = %2163(%2162) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2165 = fn (%p0719: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1562: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0719, %p1562, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2166 = %2165(%2164, meta[relay.Constant][941] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2167 = fn (%p0718: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1561: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2272: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3271: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2159 = nn.conv2d(%p0718, %p1561, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2160 = multiply(%2159, %p2272) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2161 = add(%2160, %p3271) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2161) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2168 = %2167(%2166, meta[relay.Constant][942] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][943] /* ty=Tensor[(672), float16] */, meta[relay.Constant][944] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2169 = fn (%p0717: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1560: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0717, %p1560, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2170 = %2169(%2168, meta[relay.Constant][945] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2171 = fn (%p0716: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1559: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2271: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3270: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2157 = nn.conv2d(%p0716, %p1559, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2158 = multiply(%2157, %p2271) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2158, %p3270) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2172 = %2156(%2155, meta[relay.Constant][937] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2173 = %2171(%2170, meta[relay.Constant][946] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][947] /* ty=Tensor[(672), float16] */, meta[relay.Constant][948] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2174 = fn (%p0709: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1554: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2268: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3267: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p475: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2138 = nn.conv2d(%p0709, %p1554, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2139 = multiply(%2138, %p2268) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2140 = add(%2139, %p3267) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2140, %p475) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2181 = fn (%p0725: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0725) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2182 = %2181(%2162) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2183 = fn (%p0724: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1566: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0724, %p1566, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2184 = %2183(%2182, meta[relay.Constant][949] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2185 = fn (%p0723: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1565: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2274: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3273: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2178 = nn.conv2d(%p0723, %p1565, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2179 = multiply(%2178, %p2274) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2180 = add(%2179, %p3273) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2180) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2186 = %2185(%2184, meta[relay.Constant][950] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][951] /* ty=Tensor[(672), float16] */, meta[relay.Constant][952] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2187 = fn (%p0722: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1564: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0722, %p1564, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2193 = fn (%p0730: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0730) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2194 = %2193(%2162) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2195 = fn (%p0729: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1570: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0729, %p1570, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2196 = %2195(%2194, meta[relay.Constant][957] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2197 = fn (%p0728: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1569: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2276: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3275: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2190 = nn.conv2d(%p0728, %p1569, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2191 = multiply(%2190, %p2276) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2192 = add(%2191, %p3275) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2192) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2198 = %2197(%2196, meta[relay.Constant][958] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][959] /* ty=Tensor[(672), float16] */, meta[relay.Constant][960] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2199 = fn (%p0727: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1568: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0727, %p1568, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2200 = %2199(%2198, meta[relay.Constant][961] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2201 = fn (%p0726: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1567: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2275: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3274: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2188 = nn.conv2d(%p0726, %p1567, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2189 = multiply(%2188, %p2275) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2189, %p3274) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2202 = %2187(%2186, meta[relay.Constant][953] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2203 = %2201(%2200, meta[relay.Constant][962] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][963] /* ty=Tensor[(672), float16] */, meta[relay.Constant][964] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2204 = fn (%p0721: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1563: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2273: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3272: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p476: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2175 = nn.conv2d(%p0721, %p1563, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2176 = multiply(%2175, %p2273) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2177 = add(%2176, %p3272) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2177, %p476) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2206 = fn (%p0731: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1571: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2205 = nn.avg_pool2d(%p0731, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2205, %p1571) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2208 = fn (%p0733: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.avg_pool2d(%p0733, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2209 = %2208(%2162) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2210 = fn (%p0732: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1572: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2207 = nn.avg_pool2d(%p0732, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2207, %p1572) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2217 = fn (%p0738: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0738) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2218 = %2217(%2149) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2219 = fn (%p0737: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1576: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0737, %p1576, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2220 = %2219(%2218, meta[relay.Constant][965] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2221 = fn (%p0736: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1575: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2278: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3277: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2214 = nn.conv2d(%p0736, %p1575, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2215 = multiply(%2214, %p2278) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2216 = add(%2215, %p3277) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2216) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2222 = %2221(%2220, meta[relay.Constant][966] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][967] /* ty=Tensor[(672), float16] */, meta[relay.Constant][968] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2223 = fn (%p0735: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1574: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0735, %p1574, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2224 = %2223(%2222, meta[relay.Constant][969] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2225 = fn (%p0734: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1573: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2277: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3276: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p477: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2211 = nn.conv2d(%p0734, %p1573, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2212 = multiply(%2211, %p2277) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2213 = add(%2212, %p3276) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2213, %p477) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2226 = %2174(%2172, meta[relay.Constant][938] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][939] /* ty=Tensor[(672), float16] */, meta[relay.Constant][940] /* ty=Tensor[(672), float16] */, %2173) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2227 = %2204(%2202, meta[relay.Constant][954] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][955] /* ty=Tensor[(672), float16] */, meta[relay.Constant][956] /* ty=Tensor[(672), float16] */, %2203) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2228 = %2206(%2149, %2162) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2229 = %2210(%2162, %2209) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2230 = %2225(%2224, meta[relay.Constant][970] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][971] /* ty=Tensor[(672), float16] */, meta[relay.Constant][972] /* ty=Tensor[(672), float16] */, %2149) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2231 = fn (%p0706: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1552: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p2266: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p3265: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p474: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p517: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float16] {
    %2131 = (%p0706, %p1552, %p2266, %p3265, %p474, %p517) /* ty=(Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) span=aten::cat_24:0:0 */;
    %2132 = concatenate(%2131, axis=3) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
    nn.relu(%2132) /* ty=Tensor[(16, 11, 11, 4032), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 4032), float16] */;
  %2232 = %2231(%2162, %2226, %2227, %2228, %2229, %2230) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
  %2233 = fn (%p0705: Tensor[(16, 11, 11, 4032), float16] /* ty=Tensor[(16, 11, 11, 4032), float16] */, %p1551: Tensor[(672, 1, 1, 4032), float16] /* ty=Tensor[(672, 1, 1, 4032), float16] */, %p2265: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3264: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2129 = nn.conv2d(%p0705, %p1551, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2130 = multiply(%2129, %p2265) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2130, %p3264) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float16], Tensor[(672, 1, 1, 4032), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2234 = %2233(%2232, meta[relay.Constant][973] /* ty=Tensor[(672, 1, 1, 4032), float16] */, meta[relay.Constant][974] /* ty=Tensor[(672), float16] */, meta[relay.Constant][975] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2235 = fn (%p0704: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0704) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2236 = %2235(%2234) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2237 = fn (%p0703: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1550: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0703, %p1550, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2238 = %2237(%2236, meta[relay.Constant][976] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2239 = fn (%p0702: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1549: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2264: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3263: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2126 = nn.conv2d(%p0702, %p1549, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2127 = multiply(%2126, %p2264) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2128 = add(%2127, %p3263) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2128) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2240 = %2239(%2238, meta[relay.Constant][977] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][978] /* ty=Tensor[(672), float16] */, meta[relay.Constant][979] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2241 = fn (%p0701: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1548: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0701, %p1548, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2247 = %2122(%2121, meta[relay.Constant][924] /* ty=Tensor[(672, 1, 1, 4032), float16] */, meta[relay.Constant][925] /* ty=Tensor[(672), float16] */, meta[relay.Constant][926] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2248 = fn (%p0743: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0743) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2249 = %2248(%2247) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2250 = fn (%p0742: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1580: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0742, %p1580, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2251 = %2250(%2249, meta[relay.Constant][984] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2252 = fn (%p0741: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1579: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2280: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3279: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2244 = nn.conv2d(%p0741, %p1579, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2245 = multiply(%2244, %p2280) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2246 = add(%2245, %p3279) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2246) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2253 = %2252(%2251, meta[relay.Constant][985] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][986] /* ty=Tensor[(672), float16] */, meta[relay.Constant][987] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2254 = fn (%p0740: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1578: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0740, %p1578, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2255 = %2254(%2253, meta[relay.Constant][988] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2256 = fn (%p0739: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1577: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2279: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3278: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2242 = nn.conv2d(%p0739, %p1577, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2243 = multiply(%2242, %p2279) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2243, %p3278) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2257 = %2241(%2240, meta[relay.Constant][980] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2258 = %2256(%2255, meta[relay.Constant][989] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][990] /* ty=Tensor[(672), float16] */, meta[relay.Constant][991] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2259 = fn (%p0700: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1547: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2263: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3262: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p473: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2123 = nn.conv2d(%p0700, %p1547, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2124 = multiply(%2123, %p2263) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2125 = add(%2124, %p3262) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2125, %p473) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2266 = fn (%p0748: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0748) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2267 = %2266(%2247) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2268 = fn (%p0747: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1584: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0747, %p1584, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2269 = %2268(%2267, meta[relay.Constant][992] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2270 = fn (%p0746: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1583: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2282: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3281: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2263 = nn.conv2d(%p0746, %p1583, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2264 = multiply(%2263, %p2282) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2265 = add(%2264, %p3281) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2265) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2271 = %2270(%2269, meta[relay.Constant][993] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][994] /* ty=Tensor[(672), float16] */, meta[relay.Constant][995] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2272 = fn (%p0745: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1582: Tensor[(672, 5, 5, 1), float16] /* ty=Tensor[(672, 5, 5, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0745, %p1582, padding=[2, 2, 2, 2], groups=672, channels=672, kernel_size=[5, 5], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 5, 5, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2278 = fn (%p0753: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0753) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2279 = %2278(%2247) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2280 = fn (%p0752: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1588: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0752, %p1588, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2281 = %2280(%2279, meta[relay.Constant][1000] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2282 = fn (%p0751: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1587: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2284: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3283: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2275 = nn.conv2d(%p0751, %p1587, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2276 = multiply(%2275, %p2284) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2277 = add(%2276, %p3283) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2277) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2283 = %2282(%2281, meta[relay.Constant][1001] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][1002] /* ty=Tensor[(672), float16] */, meta[relay.Constant][1003] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2284 = fn (%p0750: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1586: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0750, %p1586, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2285 = %2284(%2283, meta[relay.Constant][1004] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2286 = fn (%p0749: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1585: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2283: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3282: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2273 = nn.conv2d(%p0749, %p1585, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2274 = multiply(%2273, %p2283) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2274, %p3282) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2287 = %2272(%2271, meta[relay.Constant][996] /* ty=Tensor[(672, 5, 5, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2288 = %2286(%2285, meta[relay.Constant][1005] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][1006] /* ty=Tensor[(672), float16] */, meta[relay.Constant][1007] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2289 = fn (%p0744: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1581: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2281: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3280: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p478: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2260 = nn.conv2d(%p0744, %p1581, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2261 = multiply(%2260, %p2281) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2262 = add(%2261, %p3280) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2262, %p478) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2291 = fn (%p0754: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1589: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2290 = nn.avg_pool2d(%p0754, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2290, %p1589) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2293 = fn (%p0756: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.avg_pool2d(%p0756, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2294 = %2293(%2247) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2295 = fn (%p0755: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1590: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2292 = nn.avg_pool2d(%p0755, pool_size=[3, 3], padding=[1, 1, 1, 1], layout="NHWC", out_layout="NHWC") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2292, %p1590) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2302 = fn (%p0761: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.relu(%p0761) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2303 = %2302(%2234) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2304 = fn (%p0760: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1594: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0760, %p1594, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2305 = %2304(%2303, meta[relay.Constant][1008] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2306 = fn (%p0759: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1593: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2286: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3285: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2299 = nn.conv2d(%p0759, %p1593, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2300 = multiply(%2299, %p2286) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2301 = add(%2300, %p3285) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    nn.relu(%2301) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2307 = %2306(%2305, meta[relay.Constant][1009] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][1010] /* ty=Tensor[(672), float16] */, meta[relay.Constant][1011] /* ty=Tensor[(672), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2308 = fn (%p0758: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1592: Tensor[(672, 3, 3, 1), float16] /* ty=Tensor[(672, 3, 3, 1), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    nn.conv2d(%p0758, %p1592, padding=[1, 1, 1, 1], groups=672, channels=672, kernel_size=[3, 3], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 3, 3, 1), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2309 = %2308(%2307, meta[relay.Constant][1012] /* ty=Tensor[(672, 3, 3, 1), float16] */) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2310 = fn (%p0757: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p1591: Tensor[(672, 1, 1, 672), float16] /* ty=Tensor[(672, 1, 1, 672), float16] */, %p2285: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p3284: Tensor[(672), float16] /* ty=Tensor[(672), float16] */, %p479: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 672), float16] {
    %2296 = nn.conv2d(%p0757, %p1591, padding=[0, 0, 0, 0], channels=672, kernel_size=[1, 1], data_layout="NHWC", kernel_layout="OHWI", out_dtype="float16") /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2297 = multiply(%2296, %p2285) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    %2298 = add(%2297, %p3284) /* ty=Tensor[(16, 11, 11, 672), float16] */;
    add(%2298, %p479) /* ty=Tensor[(16, 11, 11, 672), float16] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(672, 1, 1, 672), float16], Tensor[(672), float16], Tensor[(672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 672), float16] */;
  %2311 = %2259(%2257, meta[relay.Constant][981] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][982] /* ty=Tensor[(672), float16] */, meta[relay.Constant][983] /* ty=Tensor[(672), float16] */, %2258) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2312 = %2289(%2287, meta[relay.Constant][997] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][998] /* ty=Tensor[(672), float16] */, meta[relay.Constant][999] /* ty=Tensor[(672), float16] */, %2288) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2313 = %2291(%2234, %2247) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2314 = %2295(%2247, %2294) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2315 = %2310(%2309, meta[relay.Constant][1013] /* ty=Tensor[(672, 1, 1, 672), float16] */, meta[relay.Constant][1014] /* ty=Tensor[(672), float16] */, meta[relay.Constant][1015] /* ty=Tensor[(672), float16] */, %2234) /* ty=Tensor[(16, 11, 11, 672), float16] */;
  %2316 = fn (%p03: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p11: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p21: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p3: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p4: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, %p5: Tensor[(16, 11, 11, 672), float16] /* ty=Tensor[(16, 11, 11, 672), float16] */, Primitive=1) -> Tensor[(16, 11, 11, 4032), float32] {
    %4 = (%p03, %p11, %p21, %p3, %p4, %p5) /* ty=(Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) span=aten::cat_25:0:0 */;
    %5 = concatenate(%4, axis=3) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
    %6 = nn.relu(%5) /* ty=Tensor[(16, 11, 11, 4032), float16] */;
    cast(%6, dtype="float32") /* ty=Tensor[(16, 11, 11, 4032), float32] */
  } /* ty=fn (Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16], Tensor[(16, 11, 11, 672), float16]) -> Tensor[(16, 11, 11, 4032), float32] */;
  %2317 = %2316(%2247, %2311, %2312, %2313, %2314, %2315) /* ty=Tensor[(16, 11, 11, 4032), float32] */;
  %2318 = fn (%p02: Tensor[(16, 11, 11, 4032), float32] /* ty=Tensor[(16, 11, 11, 4032), float32] */, Primitive=1) -> Tensor[(16, 1, 1, 4032), float32] {
    nn.adaptive_avg_pool2d(%p02, output_size=[1, 1], layout="NHWC") /* ty=Tensor[(16, 1, 1, 4032), float32] */
  } /* ty=fn (Tensor[(16, 11, 11, 4032), float32]) -> Tensor[(16, 1, 1, 4032), float32] */;
  %2319 = %2318(%2317) /* ty=Tensor[(16, 1, 1, 4032), float32] */;
  %2320 = fn (%p01: Tensor[(16, 1, 1, 4032), float32] /* ty=Tensor[(16, 1, 1, 4032), float32] */, Primitive=1) -> Tensor[(16, 4032), float16] {
    %1 = layout_transform(%p01, src_layout="NHWC", dst_layout="NCHW") /* ty=Tensor[(16, 4032, 1, 1), float32] */;
    %2 = reshape(%1, newshape=[0, -1, 1, 1]) /* ty=Tensor[(16, 4032, 1, 1), float32] */;
    %3 = squeeze(%2, axis=[2, 3]) /* ty=Tensor[(16, 4032), float32] */;
    cast(%3, dtype="float16") /* ty=Tensor[(16, 4032), float16] */
  } /* ty=fn (Tensor[(16, 1, 1, 4032), float32]) -> Tensor[(16, 4032), float16] */;
  %2321 = %2320(%2319) /* ty=Tensor[(16, 4032), float16] */;
  %2322 = fn (%p0: Tensor[(16, 4032), float16] /* ty=Tensor[(16, 4032), float16] */, %p1: Tensor[(1000, 4032), float16] /* ty=Tensor[(1000, 4032), float16] */, %p2: Tensor[(1, 1000), float16] /* ty=Tensor[(1, 1000), float16] */, Primitive=1) -> Tensor[(16, 1000), float16] {
    %0 = nn.dense(%p0, %p1, units=None, out_dtype="float16") /* ty=Tensor[(16, 1000), float16] */;
    add(%0, %p2) /* ty=Tensor[(16, 1000), float16] */
  } /* ty=fn (Tensor[(16, 4032), float16], Tensor[(1000, 4032), float16], Tensor[(1, 1000), float16]) -> Tensor[(16, 1000), float16] */;
  %2322(%2321, meta[relay.Constant][1016] /* ty=Tensor[(1000, 4032), float16] */, meta[relay.Constant][1017] /* ty=Tensor[(1, 1000), float16] */) /* ty=Tensor[(16, 1000), float16] */
}


