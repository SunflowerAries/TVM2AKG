type List[A] {
  Cons(A, List[A]),
  Nil,
}

type Option[A] {
  Some(A),
  None,
}

type Tree[A] {
  Rose(A, List[Tree[A]]),
}

type tensor_float16_t {
  tensor_nil_float16,
  tensor0_float16(float16),
  tensor1_float16(Tensor[(?), float16]),
  tensor2_float16(Tensor[(?, ?), float16]),
  tensor3_float16(Tensor[(?, ?, ?), float16]),
  tensor4_float16(Tensor[(?, ?, ?, ?), float16]),
  tensor5_float16(Tensor[(?, ?, ?, ?, ?), float16]),
  tensor6_float16(Tensor[(?, ?, ?, ?, ?, ?), float16]),
}

type tensor_float32_t {
  tensor_nil_float32,
  tensor0_float32(float32),
  tensor1_float32(Tensor[(?), float32]),
  tensor2_float32(Tensor[(?, ?), float32]),
  tensor3_float32(Tensor[(?, ?, ?), float32]),
  tensor4_float32(Tensor[(?, ?, ?, ?), float32]),
  tensor5_float32(Tensor[(?, ?, ?, ?, ?), float32]),
  tensor6_float32(Tensor[(?, ?, ?, ?, ?, ?), float32]),
}

type tensor_float64_t {
  tensor_nil_float64,
  tensor0_float64(float64),
  tensor1_float64(Tensor[(?), float64]),
  tensor2_float64(Tensor[(?, ?), float64]),
  tensor3_float64(Tensor[(?, ?, ?), float64]),
  tensor4_float64(Tensor[(?, ?, ?, ?), float64]),
  tensor5_float64(Tensor[(?, ?, ?, ?, ?), float64]),
  tensor6_float64(Tensor[(?, ?, ?, ?, ?, ?), float64]),
}

type tensor_int16_t {
  tensor_nil_int16,
  tensor0_int16(int16),
  tensor1_int16(Tensor[(?), int16]),
  tensor2_int16(Tensor[(?, ?), int16]),
  tensor3_int16(Tensor[(?, ?, ?), int16]),
  tensor4_int16(Tensor[(?, ?, ?, ?), int16]),
  tensor5_int16(Tensor[(?, ?, ?, ?, ?), int16]),
  tensor6_int16(Tensor[(?, ?, ?, ?, ?, ?), int16]),
}

type tensor_int32_t {
  tensor_nil_int32,
  tensor0_int32(int32),
  tensor1_int32(Tensor[(?), int32]),
  tensor2_int32(Tensor[(?, ?), int32]),
  tensor3_int32(Tensor[(?, ?, ?), int32]),
  tensor4_int32(Tensor[(?, ?, ?, ?), int32]),
  tensor5_int32(Tensor[(?, ?, ?, ?, ?), int32]),
  tensor6_int32(Tensor[(?, ?, ?, ?, ?, ?), int32]),
}

type tensor_int64_t {
  tensor_nil_int64,
  tensor0_int64(int64),
  tensor1_int64(Tensor[(?), int64]),
  tensor2_int64(Tensor[(?, ?), int64]),
  tensor3_int64(Tensor[(?, ?, ?), int64]),
  tensor4_int64(Tensor[(?, ?, ?, ?), int64]),
  tensor5_int64(Tensor[(?, ?, ?, ?, ?), int64]),
  tensor6_int64(Tensor[(?, ?, ?, ?, ?, ?), int64]),
}

type tensor_int8_t {
  tensor_nil_int8,
  tensor0_int8(int8),
  tensor1_int8(Tensor[(?), int8]),
  tensor2_int8(Tensor[(?, ?), int8]),
  tensor3_int8(Tensor[(?, ?, ?), int8]),
  tensor4_int8(Tensor[(?, ?, ?, ?), int8]),
  tensor5_int8(Tensor[(?, ?, ?, ?, ?), int8]),
  tensor6_int8(Tensor[(?, ?, ?, ?, ?, ?), int8]),
}

type tensor_uint16_t {
  tensor_nil_uint16,
  tensor0_uint16(uint16),
  tensor1_uint16(Tensor[(?), uint16]),
  tensor2_uint16(Tensor[(?, ?), uint16]),
  tensor3_uint16(Tensor[(?, ?, ?), uint16]),
  tensor4_uint16(Tensor[(?, ?, ?, ?), uint16]),
  tensor5_uint16(Tensor[(?, ?, ?, ?, ?), uint16]),
  tensor6_uint16(Tensor[(?, ?, ?, ?, ?, ?), uint16]),
}

type tensor_uint8_t {
  tensor_nil_uint8,
  tensor0_uint8(uint8),
  tensor1_uint8(Tensor[(?), uint8]),
  tensor2_uint8(Tensor[(?, ?), uint8]),
  tensor3_uint8(Tensor[(?, ?, ?), uint8]),
  tensor4_uint8(Tensor[(?, ?, ?, ?), uint8]),
  tensor5_uint8(Tensor[(?, ?, ?, ?, ?), uint8]),
  tensor6_uint8(Tensor[(?, ?, ?, ?, ?, ?), uint8]),
}

def @main(%input_ids: Tensor[(16, 256), int64] /* ty=Tensor[(16, 256), int64] span=aten::size_0.input_ids:0:0 */) -> (Tensor[(16, 256, 768), float32], Tensor[(16, 768), float16]) {
  %560 = fn (%p0217: Tensor[(16, 256), int64] /* ty=Tensor[(16, 256), int64] */, %p1157: Tensor[(30522, 768), float16] /* ty=Tensor[(30522, 768), float16] */, %p273: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %557 = cast(%p0217, dtype="int32") /* ty=Tensor[(16, 256), int32] */;
    %558 = take(%p1157, %557, axis=0) /* ty=Tensor[(16, 256, 768), float16] */;
    %559 = add(%558, %p273) /* ty=Tensor[(16, 256, 768), float16] */;
    cast(%559, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256), int64], Tensor[(30522, 768), float16], Tensor[(16, 256, 768), float16]) -> Tensor[(16, 256, 768), float32] */;
  %561 = %560(%input_ids, meta[relay.Constant][0] /* ty=Tensor[(30522, 768), float16] */, meta[relay.Constant][1] /* ty=Tensor[(16, 256, 768), float16] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %562 = fn (%p0218: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0218, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %563 = %562(%561) /* ty=Tensor[(16, 256, 1), float32] */;
  %564 = fn (%p0219: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1158: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0219, %p1158, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %565 = %564(%561, %563) /* ty=Tensor[(16, 256, 1), float32] */;
  %566 = fn (%p0216: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1156: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p272: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p336: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p436: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %552 = add(%p272, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %553 = subtract(%p0216, %p1156) /* ty=Tensor[(16, 256, 768), float32] */;
    %554 = rsqrt(%552) /* ty=Tensor[(16, 256, 1), float32] */;
    %555 = multiply(%553, %554) /* ty=Tensor[(16, 256, 768), float32] */;
    %556 = multiply(%555, %p336) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%556, %p436) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %567 = %566(%561, %563, %565, meta[relay.Constant][2] /* ty=Tensor[(768), float32] */, meta[relay.Constant][3] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %568 = fn (%p0215: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %550 = broadcast_to(%p0215, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %551 = reshape(%550, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%551, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %569 = %568(%567) /* ty=Tensor[(16, 256, 768), float16] */;
  %570 = fn (%p0214: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1155: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0214, %p1155, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %571 = %570(%569, meta[relay.Constant][4] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %572 = fn (%p0213: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1154: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %544 = reshape(%p0213, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %545 = squeeze(%544, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %546 = add(%545, %p1154) /* ty=Tensor[(16, 256, 768), float16] */;
    %547 = reshape(%546, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %548 = transpose(%547, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %549 = broadcast_to(%548, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%549, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %581 = fn (%p0222: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %579 = broadcast_to(%p0222, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %580 = reshape(%579, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%580, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %582 = %581(%567) /* ty=Tensor[(16, 256, 768), float16] */;
  %583 = fn (%p0221: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1160: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0221, %p1160, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %584 = %583(%582, meta[relay.Constant][6] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %585 = fn (%p0220: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1159: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 64, 256), float16] {
    %573 = reshape(%p0220, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %574 = squeeze(%573, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %575 = add(%574, %p1159) /* ty=Tensor[(16, 256, 768), float16] */;
    %576 = reshape(%575, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %577 = transpose(%576, axes=[0, 2, 3, 1]) /* ty=Tensor[(16, 12, 64, 256), float16] */;
    %578 = broadcast_to(%577, shape=[16, 12, 64, 256], dtype="float16") /* ty=Tensor[(16, 12, 64, 256), float16] */;
    reshape(%578, newshape=[-1, 64, 256]) /* ty=Tensor[(192, 64, 256), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 64, 256), float16] */;
  %586 = %572(%571, meta[relay.Constant][5] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %587 = %585(%584, meta[relay.Constant][7] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 64, 256), float16] */;
  %588 = fn (%p0212: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, %p1153: Tensor[(192, 64, 256), float16] /* ty=Tensor[(192, 64, 256), float16] */, Primitive=1) -> Tensor[(192, 256, 256), float16] {
    nn.batch_matmul(%p0212, %p1153, out_dtype="float16") /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16], Tensor[(192, 64, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %589 = %588(%586, %587) /* ty=Tensor[(192, 256, 256), float16] */;
  %590 = fn (%p0211: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p1152: float16 /* ty=float16 */, %p271: Tensor[(16, 1, 1, 256), float16] /* ty=Tensor[(16, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %541 = reshape(%p0211, newshape=[16, 12, 256, 256]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %542 = squeeze(%541, axis=[]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %543 = divide(%542, %p1152) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    add(%543, %p271) /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], float16, Tensor[(16, 1, 1, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %591 = %590(%589, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(16, 1, 1, 256), float16] */) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %592 = fn (%p0210: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %540 = nn.fast_softmax(%p0210) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    broadcast_to(%540, shape=[16, 12, 256, 256], dtype="float16") /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %593 = %592(%591) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %594 = fn (%p0209: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 256, 256), float16] {
    reshape(%p0209, newshape=[-1, 256, 256]) /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %603 = fn (%p0225: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %601 = broadcast_to(%p0225, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %602 = reshape(%601, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%602, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %604 = %603(%567) /* ty=Tensor[(16, 256, 768), float16] */;
  %605 = fn (%p0224: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1162: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0224, %p1162, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %606 = %605(%604, meta[relay.Constant][9] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %607 = fn (%p0223: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1161: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %595 = reshape(%p0223, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %596 = squeeze(%595, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %597 = add(%596, %p1161) /* ty=Tensor[(16, 256, 768), float16] */;
    %598 = reshape(%597, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %599 = transpose(%598, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %600 = broadcast_to(%599, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%600, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %608 = %594(%593) /* ty=Tensor[(192, 256, 256), float16] */;
  %609 = %607(%606, meta[relay.Constant][10] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %610 = fn (%p0208: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p1151: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    nn.batch_matmul(%p0208, %p1151, out_dtype="float16") /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], Tensor[(192, 256, 64), float16]) -> Tensor[(192, 256, 64), float16] */;
  %611 = %610(%608, %609) /* ty=Tensor[(192, 256, 64), float16] */;
  %612 = fn (%p0207: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %535 = reshape(%p0207, newshape=[16, 12, 256, 64]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %536 = squeeze(%535, axis=[]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %537 = transpose(%536, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %538 = reshape(%537, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %539 = broadcast_to(%538, shape=[16, 256, 768], dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */;
    reshape(%539, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16]) -> Tensor[(16, 256, 768), float16] */;
  %613 = %612(%611) /* ty=Tensor[(16, 256, 768), float16] */;
  %614 = fn (%p0206: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1150: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0206, %p1150, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %615 = %614(%613, meta[relay.Constant][11] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %616 = fn (%p0205: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1149: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p270: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %531 = reshape(%p0205, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %532 = squeeze(%531, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %533 = add(%532, %p1149) /* ty=Tensor[(16, 256, 768), float16] */;
    %534 = cast(%533, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%534, %p270) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %617 = %616(%615, meta[relay.Constant][12] /* ty=Tensor[(768), float16] */, %567) /* ty=Tensor[(16, 256, 768), float32] */;
  %618 = fn (%p0226: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0226, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %619 = %618(%617) /* ty=Tensor[(16, 256, 1), float32] */;
  %620 = fn (%p0227: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1163: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0227, %p1163, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %621 = %620(%617, %619) /* ty=Tensor[(16, 256, 1), float32] */;
  %622 = fn (%p0204: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1148: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p269: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p335: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p435: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %526 = add(%p269, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %527 = subtract(%p0204, %p1148) /* ty=Tensor[(16, 256, 768), float32] */;
    %528 = rsqrt(%526) /* ty=Tensor[(16, 256, 1), float32] */;
    %529 = multiply(%527, %528) /* ty=Tensor[(16, 256, 768), float32] */;
    %530 = multiply(%529, %p335) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%530, %p435) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %623 = %622(%617, %619, %621, meta[relay.Constant][13] /* ty=Tensor[(768), float32] */, meta[relay.Constant][14] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %624 = fn (%p0203: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %524 = broadcast_to(%p0203, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %525 = reshape(%524, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%525, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %625 = %624(%623) /* ty=Tensor[(16, 256, 768), float16] */;
  %626 = fn (%p0202: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1147: Tensor[(16, 768, 3072), float16] /* ty=Tensor[(16, 768, 3072), float16] */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    nn.batch_matmul(%p0202, %p1147, out_dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 3072), float16]) -> Tensor[(16, 256, 3072), float16] */;
  %627 = %626(%625, meta[relay.Constant][15] /* ty=Tensor[(16, 768, 3072), float16] */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %628 = fn (%p0201: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p1146: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p268: float16 /* ty=float16 */, %p334: float16 /* ty=float16 */, %p434: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    %515 = reshape(%p0201, newshape=[16, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %516 = squeeze(%515, axis=[]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %517 = add(%516, %p1146) /* ty=Tensor[(16, 256, 3072), float16] */;
    %518 = multiply(%517, %p268) /* ty=Tensor[(16, 256, 3072), float16] */;
    %519 = fast_erf(%518) /* ty=Tensor[(16, 256, 3072), float16] */;
    %520 = multiply(%519, %p334) /* ty=Tensor[(16, 256, 3072), float16] */;
    %521 = add(%p434, %520) /* ty=Tensor[(16, 256, 3072), float16] */;
    %522 = multiply(%517, %521) /* ty=Tensor[(16, 256, 3072), float16] */;
    %523 = broadcast_to(%522, shape=[16, 256, 3072], dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */;
    reshape(%523, newshape=[-1, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(3072), float16], float16, float16, float16) -> Tensor[(16, 256, 3072), float16] */;
  %629 = %628(%627, meta[relay.Constant][16] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %630 = fn (%p0200: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p1145: Tensor[(16, 3072, 768), float16] /* ty=Tensor[(16, 3072, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0200, %p1145, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(16, 3072, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %631 = %630(%629, meta[relay.Constant][17] /* ty=Tensor[(16, 3072, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %632 = fn (%p0199: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1144: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p267: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %511 = reshape(%p0199, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %512 = squeeze(%511, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %513 = add(%512, %p1144) /* ty=Tensor[(16, 256, 768), float16] */;
    %514 = cast(%513, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%514, %p267) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %633 = %632(%631, meta[relay.Constant][18] /* ty=Tensor[(768), float16] */, %623) /* ty=Tensor[(16, 256, 768), float32] */;
  %634 = fn (%p0228: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0228, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %635 = %634(%633) /* ty=Tensor[(16, 256, 1), float32] */;
  %636 = fn (%p0229: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1164: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0229, %p1164, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %637 = %636(%633, %635) /* ty=Tensor[(16, 256, 1), float32] */;
  %638 = fn (%p0198: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1143: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p266: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p333: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p433: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %506 = add(%p266, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %507 = subtract(%p0198, %p1143) /* ty=Tensor[(16, 256, 768), float32] */;
    %508 = rsqrt(%506) /* ty=Tensor[(16, 256, 1), float32] */;
    %509 = multiply(%507, %508) /* ty=Tensor[(16, 256, 768), float32] */;
    %510 = multiply(%509, %p333) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%510, %p433) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %639 = %638(%633, %635, %637, meta[relay.Constant][19] /* ty=Tensor[(768), float32] */, meta[relay.Constant][20] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %640 = fn (%p0197: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %504 = broadcast_to(%p0197, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %505 = reshape(%504, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%505, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %641 = %640(%639) /* ty=Tensor[(16, 256, 768), float16] */;
  %642 = fn (%p0196: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1142: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0196, %p1142, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %643 = %642(%641, meta[relay.Constant][21] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %644 = fn (%p0195: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1141: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %498 = reshape(%p0195, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %499 = squeeze(%498, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %500 = add(%499, %p1141) /* ty=Tensor[(16, 256, 768), float16] */;
    %501 = reshape(%500, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %502 = transpose(%501, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %503 = broadcast_to(%502, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%503, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %653 = fn (%p0232: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %651 = broadcast_to(%p0232, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %652 = reshape(%651, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%652, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %654 = %653(%639) /* ty=Tensor[(16, 256, 768), float16] */;
  %655 = fn (%p0231: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1166: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0231, %p1166, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %656 = %655(%654, meta[relay.Constant][23] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %657 = fn (%p0230: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1165: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 64, 256), float16] {
    %645 = reshape(%p0230, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %646 = squeeze(%645, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %647 = add(%646, %p1165) /* ty=Tensor[(16, 256, 768), float16] */;
    %648 = reshape(%647, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %649 = transpose(%648, axes=[0, 2, 3, 1]) /* ty=Tensor[(16, 12, 64, 256), float16] */;
    %650 = broadcast_to(%649, shape=[16, 12, 64, 256], dtype="float16") /* ty=Tensor[(16, 12, 64, 256), float16] */;
    reshape(%650, newshape=[-1, 64, 256]) /* ty=Tensor[(192, 64, 256), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 64, 256), float16] */;
  %658 = %644(%643, meta[relay.Constant][22] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %659 = %657(%656, meta[relay.Constant][24] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 64, 256), float16] */;
  %660 = fn (%p0194: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, %p1140: Tensor[(192, 64, 256), float16] /* ty=Tensor[(192, 64, 256), float16] */, Primitive=1) -> Tensor[(192, 256, 256), float16] {
    nn.batch_matmul(%p0194, %p1140, out_dtype="float16") /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16], Tensor[(192, 64, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %661 = %660(%658, %659) /* ty=Tensor[(192, 256, 256), float16] */;
  %662 = fn (%p0193: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p1139: float16 /* ty=float16 */, %p265: Tensor[(16, 1, 1, 256), float16] /* ty=Tensor[(16, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %495 = reshape(%p0193, newshape=[16, 12, 256, 256]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %496 = squeeze(%495, axis=[]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %497 = divide(%496, %p1139) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    add(%497, %p265) /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], float16, Tensor[(16, 1, 1, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %663 = %662(%661, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(16, 1, 1, 256), float16] */) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %664 = fn (%p0192: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %494 = nn.fast_softmax(%p0192) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    broadcast_to(%494, shape=[16, 12, 256, 256], dtype="float16") /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %665 = %664(%663) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %666 = fn (%p0191: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 256, 256), float16] {
    reshape(%p0191, newshape=[-1, 256, 256]) /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %675 = fn (%p0235: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %673 = broadcast_to(%p0235, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %674 = reshape(%673, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%674, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %676 = %675(%639) /* ty=Tensor[(16, 256, 768), float16] */;
  %677 = fn (%p0234: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1168: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0234, %p1168, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %678 = %677(%676, meta[relay.Constant][25] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %679 = fn (%p0233: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1167: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %667 = reshape(%p0233, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %668 = squeeze(%667, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %669 = add(%668, %p1167) /* ty=Tensor[(16, 256, 768), float16] */;
    %670 = reshape(%669, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %671 = transpose(%670, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %672 = broadcast_to(%671, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%672, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %680 = %666(%665) /* ty=Tensor[(192, 256, 256), float16] */;
  %681 = %679(%678, meta[relay.Constant][26] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %682 = fn (%p0190: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p1138: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    nn.batch_matmul(%p0190, %p1138, out_dtype="float16") /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], Tensor[(192, 256, 64), float16]) -> Tensor[(192, 256, 64), float16] */;
  %683 = %682(%680, %681) /* ty=Tensor[(192, 256, 64), float16] */;
  %684 = fn (%p0189: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %489 = reshape(%p0189, newshape=[16, 12, 256, 64]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %490 = squeeze(%489, axis=[]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %491 = transpose(%490, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %492 = reshape(%491, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %493 = broadcast_to(%492, shape=[16, 256, 768], dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */;
    reshape(%493, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16]) -> Tensor[(16, 256, 768), float16] */;
  %685 = %684(%683) /* ty=Tensor[(16, 256, 768), float16] */;
  %686 = fn (%p0188: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1137: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0188, %p1137, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %687 = %686(%685, meta[relay.Constant][27] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %688 = fn (%p0187: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1136: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p264: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %485 = reshape(%p0187, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %486 = squeeze(%485, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %487 = add(%486, %p1136) /* ty=Tensor[(16, 256, 768), float16] */;
    %488 = cast(%487, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%488, %p264) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %689 = %688(%687, meta[relay.Constant][28] /* ty=Tensor[(768), float16] */, %639) /* ty=Tensor[(16, 256, 768), float32] */;
  %690 = fn (%p0236: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0236, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %691 = %690(%689) /* ty=Tensor[(16, 256, 1), float32] */;
  %692 = fn (%p0237: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1169: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0237, %p1169, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %693 = %692(%689, %691) /* ty=Tensor[(16, 256, 1), float32] */;
  %694 = fn (%p0186: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1135: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p263: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p332: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p432: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %480 = add(%p263, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %481 = subtract(%p0186, %p1135) /* ty=Tensor[(16, 256, 768), float32] */;
    %482 = rsqrt(%480) /* ty=Tensor[(16, 256, 1), float32] */;
    %483 = multiply(%481, %482) /* ty=Tensor[(16, 256, 768), float32] */;
    %484 = multiply(%483, %p332) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%484, %p432) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %695 = %694(%689, %691, %693, meta[relay.Constant][29] /* ty=Tensor[(768), float32] */, meta[relay.Constant][30] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %696 = fn (%p0185: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %478 = broadcast_to(%p0185, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %479 = reshape(%478, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%479, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %697 = %696(%695) /* ty=Tensor[(16, 256, 768), float16] */;
  %698 = fn (%p0184: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1134: Tensor[(16, 768, 3072), float16] /* ty=Tensor[(16, 768, 3072), float16] */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    nn.batch_matmul(%p0184, %p1134, out_dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 3072), float16]) -> Tensor[(16, 256, 3072), float16] */;
  %699 = %698(%697, meta[relay.Constant][31] /* ty=Tensor[(16, 768, 3072), float16] */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %700 = fn (%p0183: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p1133: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p262: float16 /* ty=float16 */, %p331: float16 /* ty=float16 */, %p431: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    %469 = reshape(%p0183, newshape=[16, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %470 = squeeze(%469, axis=[]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %471 = add(%470, %p1133) /* ty=Tensor[(16, 256, 3072), float16] */;
    %472 = multiply(%471, %p262) /* ty=Tensor[(16, 256, 3072), float16] */;
    %473 = fast_erf(%472) /* ty=Tensor[(16, 256, 3072), float16] */;
    %474 = multiply(%473, %p331) /* ty=Tensor[(16, 256, 3072), float16] */;
    %475 = add(%p431, %474) /* ty=Tensor[(16, 256, 3072), float16] */;
    %476 = multiply(%471, %475) /* ty=Tensor[(16, 256, 3072), float16] */;
    %477 = broadcast_to(%476, shape=[16, 256, 3072], dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */;
    reshape(%477, newshape=[-1, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(3072), float16], float16, float16, float16) -> Tensor[(16, 256, 3072), float16] */;
  %701 = %700(%699, meta[relay.Constant][32] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %702 = fn (%p0182: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p1132: Tensor[(16, 3072, 768), float16] /* ty=Tensor[(16, 3072, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0182, %p1132, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(16, 3072, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %703 = %702(%701, meta[relay.Constant][33] /* ty=Tensor[(16, 3072, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %704 = fn (%p0181: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1131: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p261: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %465 = reshape(%p0181, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %466 = squeeze(%465, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %467 = add(%466, %p1131) /* ty=Tensor[(16, 256, 768), float16] */;
    %468 = cast(%467, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%468, %p261) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %705 = %704(%703, meta[relay.Constant][34] /* ty=Tensor[(768), float16] */, %695) /* ty=Tensor[(16, 256, 768), float32] */;
  %706 = fn (%p0238: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0238, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %707 = %706(%705) /* ty=Tensor[(16, 256, 1), float32] */;
  %708 = fn (%p0239: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1170: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0239, %p1170, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %709 = %708(%705, %707) /* ty=Tensor[(16, 256, 1), float32] */;
  %710 = fn (%p0180: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1130: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p260: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p330: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p430: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %460 = add(%p260, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %461 = subtract(%p0180, %p1130) /* ty=Tensor[(16, 256, 768), float32] */;
    %462 = rsqrt(%460) /* ty=Tensor[(16, 256, 1), float32] */;
    %463 = multiply(%461, %462) /* ty=Tensor[(16, 256, 768), float32] */;
    %464 = multiply(%463, %p330) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%464, %p430) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %711 = %710(%705, %707, %709, meta[relay.Constant][35] /* ty=Tensor[(768), float32] */, meta[relay.Constant][36] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %712 = fn (%p0179: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %458 = broadcast_to(%p0179, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %459 = reshape(%458, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%459, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %713 = %712(%711) /* ty=Tensor[(16, 256, 768), float16] */;
  %714 = fn (%p0178: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1129: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0178, %p1129, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %715 = %714(%713, meta[relay.Constant][37] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %716 = fn (%p0177: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1128: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %452 = reshape(%p0177, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %453 = squeeze(%452, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %454 = add(%453, %p1128) /* ty=Tensor[(16, 256, 768), float16] */;
    %455 = reshape(%454, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %456 = transpose(%455, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %457 = broadcast_to(%456, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%457, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %725 = fn (%p0242: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %723 = broadcast_to(%p0242, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %724 = reshape(%723, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%724, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %726 = %725(%711) /* ty=Tensor[(16, 256, 768), float16] */;
  %727 = fn (%p0241: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1172: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0241, %p1172, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %728 = %727(%726, meta[relay.Constant][39] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %729 = fn (%p0240: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1171: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 64, 256), float16] {
    %717 = reshape(%p0240, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %718 = squeeze(%717, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %719 = add(%718, %p1171) /* ty=Tensor[(16, 256, 768), float16] */;
    %720 = reshape(%719, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %721 = transpose(%720, axes=[0, 2, 3, 1]) /* ty=Tensor[(16, 12, 64, 256), float16] */;
    %722 = broadcast_to(%721, shape=[16, 12, 64, 256], dtype="float16") /* ty=Tensor[(16, 12, 64, 256), float16] */;
    reshape(%722, newshape=[-1, 64, 256]) /* ty=Tensor[(192, 64, 256), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 64, 256), float16] */;
  %730 = %716(%715, meta[relay.Constant][38] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %731 = %729(%728, meta[relay.Constant][40] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 64, 256), float16] */;
  %732 = fn (%p0176: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, %p1127: Tensor[(192, 64, 256), float16] /* ty=Tensor[(192, 64, 256), float16] */, Primitive=1) -> Tensor[(192, 256, 256), float16] {
    nn.batch_matmul(%p0176, %p1127, out_dtype="float16") /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16], Tensor[(192, 64, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %733 = %732(%730, %731) /* ty=Tensor[(192, 256, 256), float16] */;
  %734 = fn (%p0175: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p1126: float16 /* ty=float16 */, %p259: Tensor[(16, 1, 1, 256), float16] /* ty=Tensor[(16, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %449 = reshape(%p0175, newshape=[16, 12, 256, 256]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %450 = squeeze(%449, axis=[]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %451 = divide(%450, %p1126) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    add(%451, %p259) /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], float16, Tensor[(16, 1, 1, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %735 = %734(%733, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(16, 1, 1, 256), float16] */) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %736 = fn (%p0174: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %448 = nn.fast_softmax(%p0174) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    broadcast_to(%448, shape=[16, 12, 256, 256], dtype="float16") /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %737 = %736(%735) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %738 = fn (%p0173: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 256, 256), float16] {
    reshape(%p0173, newshape=[-1, 256, 256]) /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %747 = fn (%p0245: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %745 = broadcast_to(%p0245, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %746 = reshape(%745, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%746, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %748 = %747(%711) /* ty=Tensor[(16, 256, 768), float16] */;
  %749 = fn (%p0244: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1174: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0244, %p1174, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %750 = %749(%748, meta[relay.Constant][41] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %751 = fn (%p0243: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1173: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %739 = reshape(%p0243, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %740 = squeeze(%739, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %741 = add(%740, %p1173) /* ty=Tensor[(16, 256, 768), float16] */;
    %742 = reshape(%741, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %743 = transpose(%742, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %744 = broadcast_to(%743, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%744, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %752 = %738(%737) /* ty=Tensor[(192, 256, 256), float16] */;
  %753 = %751(%750, meta[relay.Constant][42] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %754 = fn (%p0172: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p1125: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    nn.batch_matmul(%p0172, %p1125, out_dtype="float16") /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], Tensor[(192, 256, 64), float16]) -> Tensor[(192, 256, 64), float16] */;
  %755 = %754(%752, %753) /* ty=Tensor[(192, 256, 64), float16] */;
  %756 = fn (%p0171: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %443 = reshape(%p0171, newshape=[16, 12, 256, 64]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %444 = squeeze(%443, axis=[]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %445 = transpose(%444, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %446 = reshape(%445, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %447 = broadcast_to(%446, shape=[16, 256, 768], dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */;
    reshape(%447, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16]) -> Tensor[(16, 256, 768), float16] */;
  %757 = %756(%755) /* ty=Tensor[(16, 256, 768), float16] */;
  %758 = fn (%p0170: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1124: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0170, %p1124, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %759 = %758(%757, meta[relay.Constant][43] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %760 = fn (%p0169: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1123: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p258: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %439 = reshape(%p0169, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %440 = squeeze(%439, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %441 = add(%440, %p1123) /* ty=Tensor[(16, 256, 768), float16] */;
    %442 = cast(%441, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%442, %p258) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %761 = %760(%759, meta[relay.Constant][44] /* ty=Tensor[(768), float16] */, %711) /* ty=Tensor[(16, 256, 768), float32] */;
  %762 = fn (%p0246: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0246, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %763 = %762(%761) /* ty=Tensor[(16, 256, 1), float32] */;
  %764 = fn (%p0247: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1175: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0247, %p1175, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %765 = %764(%761, %763) /* ty=Tensor[(16, 256, 1), float32] */;
  %766 = fn (%p0168: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1122: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p257: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p329: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p429: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %434 = add(%p257, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %435 = subtract(%p0168, %p1122) /* ty=Tensor[(16, 256, 768), float32] */;
    %436 = rsqrt(%434) /* ty=Tensor[(16, 256, 1), float32] */;
    %437 = multiply(%435, %436) /* ty=Tensor[(16, 256, 768), float32] */;
    %438 = multiply(%437, %p329) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%438, %p429) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %767 = %766(%761, %763, %765, meta[relay.Constant][45] /* ty=Tensor[(768), float32] */, meta[relay.Constant][46] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %768 = fn (%p0167: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %432 = broadcast_to(%p0167, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %433 = reshape(%432, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%433, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %769 = %768(%767) /* ty=Tensor[(16, 256, 768), float16] */;
  %770 = fn (%p0166: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1121: Tensor[(16, 768, 3072), float16] /* ty=Tensor[(16, 768, 3072), float16] */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    nn.batch_matmul(%p0166, %p1121, out_dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 3072), float16]) -> Tensor[(16, 256, 3072), float16] */;
  %771 = %770(%769, meta[relay.Constant][47] /* ty=Tensor[(16, 768, 3072), float16] */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %772 = fn (%p0165: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p1120: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p256: float16 /* ty=float16 */, %p328: float16 /* ty=float16 */, %p428: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    %423 = reshape(%p0165, newshape=[16, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %424 = squeeze(%423, axis=[]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %425 = add(%424, %p1120) /* ty=Tensor[(16, 256, 3072), float16] */;
    %426 = multiply(%425, %p256) /* ty=Tensor[(16, 256, 3072), float16] */;
    %427 = fast_erf(%426) /* ty=Tensor[(16, 256, 3072), float16] */;
    %428 = multiply(%427, %p328) /* ty=Tensor[(16, 256, 3072), float16] */;
    %429 = add(%p428, %428) /* ty=Tensor[(16, 256, 3072), float16] */;
    %430 = multiply(%425, %429) /* ty=Tensor[(16, 256, 3072), float16] */;
    %431 = broadcast_to(%430, shape=[16, 256, 3072], dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */;
    reshape(%431, newshape=[-1, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(3072), float16], float16, float16, float16) -> Tensor[(16, 256, 3072), float16] */;
  %773 = %772(%771, meta[relay.Constant][48] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %774 = fn (%p0164: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p1119: Tensor[(16, 3072, 768), float16] /* ty=Tensor[(16, 3072, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0164, %p1119, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(16, 3072, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %775 = %774(%773, meta[relay.Constant][49] /* ty=Tensor[(16, 3072, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %776 = fn (%p0163: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1118: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p255: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %419 = reshape(%p0163, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %420 = squeeze(%419, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %421 = add(%420, %p1118) /* ty=Tensor[(16, 256, 768), float16] */;
    %422 = cast(%421, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%422, %p255) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %777 = %776(%775, meta[relay.Constant][50] /* ty=Tensor[(768), float16] */, %767) /* ty=Tensor[(16, 256, 768), float32] */;
  %778 = fn (%p0248: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0248, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %779 = %778(%777) /* ty=Tensor[(16, 256, 1), float32] */;
  %780 = fn (%p0249: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1176: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0249, %p1176, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %781 = %780(%777, %779) /* ty=Tensor[(16, 256, 1), float32] */;
  %782 = fn (%p0162: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1117: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p254: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p327: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p427: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %414 = add(%p254, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %415 = subtract(%p0162, %p1117) /* ty=Tensor[(16, 256, 768), float32] */;
    %416 = rsqrt(%414) /* ty=Tensor[(16, 256, 1), float32] */;
    %417 = multiply(%415, %416) /* ty=Tensor[(16, 256, 768), float32] */;
    %418 = multiply(%417, %p327) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%418, %p427) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %783 = %782(%777, %779, %781, meta[relay.Constant][51] /* ty=Tensor[(768), float32] */, meta[relay.Constant][52] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %784 = fn (%p0161: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %412 = broadcast_to(%p0161, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %413 = reshape(%412, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%413, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %785 = %784(%783) /* ty=Tensor[(16, 256, 768), float16] */;
  %786 = fn (%p0160: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1116: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0160, %p1116, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %787 = %786(%785, meta[relay.Constant][53] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %788 = fn (%p0159: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1115: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %406 = reshape(%p0159, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %407 = squeeze(%406, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %408 = add(%407, %p1115) /* ty=Tensor[(16, 256, 768), float16] */;
    %409 = reshape(%408, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %410 = transpose(%409, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %411 = broadcast_to(%410, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%411, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %797 = fn (%p0252: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %795 = broadcast_to(%p0252, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %796 = reshape(%795, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%796, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %798 = %797(%783) /* ty=Tensor[(16, 256, 768), float16] */;
  %799 = fn (%p0251: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1178: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0251, %p1178, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %800 = %799(%798, meta[relay.Constant][55] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %801 = fn (%p0250: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1177: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 64, 256), float16] {
    %789 = reshape(%p0250, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %790 = squeeze(%789, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %791 = add(%790, %p1177) /* ty=Tensor[(16, 256, 768), float16] */;
    %792 = reshape(%791, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %793 = transpose(%792, axes=[0, 2, 3, 1]) /* ty=Tensor[(16, 12, 64, 256), float16] */;
    %794 = broadcast_to(%793, shape=[16, 12, 64, 256], dtype="float16") /* ty=Tensor[(16, 12, 64, 256), float16] */;
    reshape(%794, newshape=[-1, 64, 256]) /* ty=Tensor[(192, 64, 256), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 64, 256), float16] */;
  %802 = %788(%787, meta[relay.Constant][54] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %803 = %801(%800, meta[relay.Constant][56] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 64, 256), float16] */;
  %804 = fn (%p0158: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, %p1114: Tensor[(192, 64, 256), float16] /* ty=Tensor[(192, 64, 256), float16] */, Primitive=1) -> Tensor[(192, 256, 256), float16] {
    nn.batch_matmul(%p0158, %p1114, out_dtype="float16") /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16], Tensor[(192, 64, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %805 = %804(%802, %803) /* ty=Tensor[(192, 256, 256), float16] */;
  %806 = fn (%p0157: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p1113: float16 /* ty=float16 */, %p253: Tensor[(16, 1, 1, 256), float16] /* ty=Tensor[(16, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %403 = reshape(%p0157, newshape=[16, 12, 256, 256]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %404 = squeeze(%403, axis=[]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %405 = divide(%404, %p1113) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    add(%405, %p253) /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], float16, Tensor[(16, 1, 1, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %807 = %806(%805, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(16, 1, 1, 256), float16] */) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %808 = fn (%p0156: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %402 = nn.fast_softmax(%p0156) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    broadcast_to(%402, shape=[16, 12, 256, 256], dtype="float16") /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %809 = %808(%807) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %810 = fn (%p0155: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 256, 256), float16] {
    reshape(%p0155, newshape=[-1, 256, 256]) /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %819 = fn (%p0255: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %817 = broadcast_to(%p0255, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %818 = reshape(%817, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%818, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %820 = %819(%783) /* ty=Tensor[(16, 256, 768), float16] */;
  %821 = fn (%p0254: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1180: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0254, %p1180, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %822 = %821(%820, meta[relay.Constant][57] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %823 = fn (%p0253: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1179: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %811 = reshape(%p0253, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %812 = squeeze(%811, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %813 = add(%812, %p1179) /* ty=Tensor[(16, 256, 768), float16] */;
    %814 = reshape(%813, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %815 = transpose(%814, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %816 = broadcast_to(%815, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%816, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %824 = %810(%809) /* ty=Tensor[(192, 256, 256), float16] */;
  %825 = %823(%822, meta[relay.Constant][58] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %826 = fn (%p0154: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p1112: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    nn.batch_matmul(%p0154, %p1112, out_dtype="float16") /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], Tensor[(192, 256, 64), float16]) -> Tensor[(192, 256, 64), float16] */;
  %827 = %826(%824, %825) /* ty=Tensor[(192, 256, 64), float16] */;
  %828 = fn (%p0153: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %397 = reshape(%p0153, newshape=[16, 12, 256, 64]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %398 = squeeze(%397, axis=[]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %399 = transpose(%398, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %400 = reshape(%399, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %401 = broadcast_to(%400, shape=[16, 256, 768], dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */;
    reshape(%401, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16]) -> Tensor[(16, 256, 768), float16] */;
  %829 = %828(%827) /* ty=Tensor[(16, 256, 768), float16] */;
  %830 = fn (%p0152: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1111: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0152, %p1111, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %831 = %830(%829, meta[relay.Constant][59] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %832 = fn (%p0151: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1110: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p252: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %393 = reshape(%p0151, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %394 = squeeze(%393, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %395 = add(%394, %p1110) /* ty=Tensor[(16, 256, 768), float16] */;
    %396 = cast(%395, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%396, %p252) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %833 = %832(%831, meta[relay.Constant][60] /* ty=Tensor[(768), float16] */, %783) /* ty=Tensor[(16, 256, 768), float32] */;
  %834 = fn (%p0256: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0256, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %835 = %834(%833) /* ty=Tensor[(16, 256, 1), float32] */;
  %836 = fn (%p0257: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1181: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0257, %p1181, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %837 = %836(%833, %835) /* ty=Tensor[(16, 256, 1), float32] */;
  %838 = fn (%p0150: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1109: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p251: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p326: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p426: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %388 = add(%p251, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %389 = subtract(%p0150, %p1109) /* ty=Tensor[(16, 256, 768), float32] */;
    %390 = rsqrt(%388) /* ty=Tensor[(16, 256, 1), float32] */;
    %391 = multiply(%389, %390) /* ty=Tensor[(16, 256, 768), float32] */;
    %392 = multiply(%391, %p326) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%392, %p426) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %839 = %838(%833, %835, %837, meta[relay.Constant][61] /* ty=Tensor[(768), float32] */, meta[relay.Constant][62] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %840 = fn (%p0149: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %386 = broadcast_to(%p0149, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %387 = reshape(%386, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%387, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %841 = %840(%839) /* ty=Tensor[(16, 256, 768), float16] */;
  %842 = fn (%p0148: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1108: Tensor[(16, 768, 3072), float16] /* ty=Tensor[(16, 768, 3072), float16] */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    nn.batch_matmul(%p0148, %p1108, out_dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 3072), float16]) -> Tensor[(16, 256, 3072), float16] */;
  %843 = %842(%841, meta[relay.Constant][63] /* ty=Tensor[(16, 768, 3072), float16] */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %844 = fn (%p0147: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p1107: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p250: float16 /* ty=float16 */, %p325: float16 /* ty=float16 */, %p425: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    %377 = reshape(%p0147, newshape=[16, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %378 = squeeze(%377, axis=[]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %379 = add(%378, %p1107) /* ty=Tensor[(16, 256, 3072), float16] */;
    %380 = multiply(%379, %p250) /* ty=Tensor[(16, 256, 3072), float16] */;
    %381 = fast_erf(%380) /* ty=Tensor[(16, 256, 3072), float16] */;
    %382 = multiply(%381, %p325) /* ty=Tensor[(16, 256, 3072), float16] */;
    %383 = add(%p425, %382) /* ty=Tensor[(16, 256, 3072), float16] */;
    %384 = multiply(%379, %383) /* ty=Tensor[(16, 256, 3072), float16] */;
    %385 = broadcast_to(%384, shape=[16, 256, 3072], dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */;
    reshape(%385, newshape=[-1, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(3072), float16], float16, float16, float16) -> Tensor[(16, 256, 3072), float16] */;
  %845 = %844(%843, meta[relay.Constant][64] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %846 = fn (%p0146: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p1106: Tensor[(16, 3072, 768), float16] /* ty=Tensor[(16, 3072, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0146, %p1106, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(16, 3072, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %847 = %846(%845, meta[relay.Constant][65] /* ty=Tensor[(16, 3072, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %848 = fn (%p0145: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1105: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p249: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %373 = reshape(%p0145, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %374 = squeeze(%373, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %375 = add(%374, %p1105) /* ty=Tensor[(16, 256, 768), float16] */;
    %376 = cast(%375, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%376, %p249) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %849 = %848(%847, meta[relay.Constant][66] /* ty=Tensor[(768), float16] */, %839) /* ty=Tensor[(16, 256, 768), float32] */;
  %850 = fn (%p0258: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0258, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %851 = %850(%849) /* ty=Tensor[(16, 256, 1), float32] */;
  %852 = fn (%p0259: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1182: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0259, %p1182, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %853 = %852(%849, %851) /* ty=Tensor[(16, 256, 1), float32] */;
  %854 = fn (%p0144: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1104: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p248: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p324: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p424: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %368 = add(%p248, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %369 = subtract(%p0144, %p1104) /* ty=Tensor[(16, 256, 768), float32] */;
    %370 = rsqrt(%368) /* ty=Tensor[(16, 256, 1), float32] */;
    %371 = multiply(%369, %370) /* ty=Tensor[(16, 256, 768), float32] */;
    %372 = multiply(%371, %p324) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%372, %p424) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %855 = %854(%849, %851, %853, meta[relay.Constant][67] /* ty=Tensor[(768), float32] */, meta[relay.Constant][68] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %856 = fn (%p0143: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %366 = broadcast_to(%p0143, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %367 = reshape(%366, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%367, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %857 = %856(%855) /* ty=Tensor[(16, 256, 768), float16] */;
  %858 = fn (%p0142: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1103: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0142, %p1103, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %859 = %858(%857, meta[relay.Constant][69] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %860 = fn (%p0141: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1102: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %360 = reshape(%p0141, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %361 = squeeze(%360, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %362 = add(%361, %p1102) /* ty=Tensor[(16, 256, 768), float16] */;
    %363 = reshape(%362, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %364 = transpose(%363, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %365 = broadcast_to(%364, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%365, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %869 = fn (%p0262: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %867 = broadcast_to(%p0262, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %868 = reshape(%867, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%868, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %870 = %869(%855) /* ty=Tensor[(16, 256, 768), float16] */;
  %871 = fn (%p0261: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1184: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0261, %p1184, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %872 = %871(%870, meta[relay.Constant][71] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %873 = fn (%p0260: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1183: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 64, 256), float16] {
    %861 = reshape(%p0260, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %862 = squeeze(%861, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %863 = add(%862, %p1183) /* ty=Tensor[(16, 256, 768), float16] */;
    %864 = reshape(%863, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %865 = transpose(%864, axes=[0, 2, 3, 1]) /* ty=Tensor[(16, 12, 64, 256), float16] */;
    %866 = broadcast_to(%865, shape=[16, 12, 64, 256], dtype="float16") /* ty=Tensor[(16, 12, 64, 256), float16] */;
    reshape(%866, newshape=[-1, 64, 256]) /* ty=Tensor[(192, 64, 256), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 64, 256), float16] */;
  %874 = %860(%859, meta[relay.Constant][70] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %875 = %873(%872, meta[relay.Constant][72] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 64, 256), float16] */;
  %876 = fn (%p0140: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, %p1101: Tensor[(192, 64, 256), float16] /* ty=Tensor[(192, 64, 256), float16] */, Primitive=1) -> Tensor[(192, 256, 256), float16] {
    nn.batch_matmul(%p0140, %p1101, out_dtype="float16") /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16], Tensor[(192, 64, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %877 = %876(%874, %875) /* ty=Tensor[(192, 256, 256), float16] */;
  %878 = fn (%p0139: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p1100: float16 /* ty=float16 */, %p247: Tensor[(16, 1, 1, 256), float16] /* ty=Tensor[(16, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %357 = reshape(%p0139, newshape=[16, 12, 256, 256]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %358 = squeeze(%357, axis=[]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %359 = divide(%358, %p1100) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    add(%359, %p247) /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], float16, Tensor[(16, 1, 1, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %879 = %878(%877, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(16, 1, 1, 256), float16] */) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %880 = fn (%p0138: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %356 = nn.fast_softmax(%p0138) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    broadcast_to(%356, shape=[16, 12, 256, 256], dtype="float16") /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %881 = %880(%879) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %882 = fn (%p0137: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 256, 256), float16] {
    reshape(%p0137, newshape=[-1, 256, 256]) /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %891 = fn (%p0265: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %889 = broadcast_to(%p0265, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %890 = reshape(%889, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%890, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %892 = %891(%855) /* ty=Tensor[(16, 256, 768), float16] */;
  %893 = fn (%p0264: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1186: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0264, %p1186, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %894 = %893(%892, meta[relay.Constant][73] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %895 = fn (%p0263: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1185: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %883 = reshape(%p0263, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %884 = squeeze(%883, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %885 = add(%884, %p1185) /* ty=Tensor[(16, 256, 768), float16] */;
    %886 = reshape(%885, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %887 = transpose(%886, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %888 = broadcast_to(%887, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%888, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %896 = %882(%881) /* ty=Tensor[(192, 256, 256), float16] */;
  %897 = %895(%894, meta[relay.Constant][74] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %898 = fn (%p0136: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p199: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    nn.batch_matmul(%p0136, %p199, out_dtype="float16") /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], Tensor[(192, 256, 64), float16]) -> Tensor[(192, 256, 64), float16] */;
  %899 = %898(%896, %897) /* ty=Tensor[(192, 256, 64), float16] */;
  %900 = fn (%p0135: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %351 = reshape(%p0135, newshape=[16, 12, 256, 64]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %352 = squeeze(%351, axis=[]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %353 = transpose(%352, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %354 = reshape(%353, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %355 = broadcast_to(%354, shape=[16, 256, 768], dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */;
    reshape(%355, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16]) -> Tensor[(16, 256, 768), float16] */;
  %901 = %900(%899) /* ty=Tensor[(16, 256, 768), float16] */;
  %902 = fn (%p0134: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p198: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0134, %p198, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %903 = %902(%901, meta[relay.Constant][75] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %904 = fn (%p0133: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p197: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p246: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %347 = reshape(%p0133, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %348 = squeeze(%347, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %349 = add(%348, %p197) /* ty=Tensor[(16, 256, 768), float16] */;
    %350 = cast(%349, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%350, %p246) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %905 = %904(%903, meta[relay.Constant][76] /* ty=Tensor[(768), float16] */, %855) /* ty=Tensor[(16, 256, 768), float32] */;
  %906 = fn (%p0266: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0266, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %907 = %906(%905) /* ty=Tensor[(16, 256, 1), float32] */;
  %908 = fn (%p0267: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1187: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0267, %p1187, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %909 = %908(%905, %907) /* ty=Tensor[(16, 256, 1), float32] */;
  %910 = fn (%p0132: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p196: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p245: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p323: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p423: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %342 = add(%p245, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %343 = subtract(%p0132, %p196) /* ty=Tensor[(16, 256, 768), float32] */;
    %344 = rsqrt(%342) /* ty=Tensor[(16, 256, 1), float32] */;
    %345 = multiply(%343, %344) /* ty=Tensor[(16, 256, 768), float32] */;
    %346 = multiply(%345, %p323) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%346, %p423) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %911 = %910(%905, %907, %909, meta[relay.Constant][77] /* ty=Tensor[(768), float32] */, meta[relay.Constant][78] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %912 = fn (%p0131: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %340 = broadcast_to(%p0131, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %341 = reshape(%340, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%341, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %913 = %912(%911) /* ty=Tensor[(16, 256, 768), float16] */;
  %914 = fn (%p0130: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p195: Tensor[(16, 768, 3072), float16] /* ty=Tensor[(16, 768, 3072), float16] */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    nn.batch_matmul(%p0130, %p195, out_dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 3072), float16]) -> Tensor[(16, 256, 3072), float16] */;
  %915 = %914(%913, meta[relay.Constant][79] /* ty=Tensor[(16, 768, 3072), float16] */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %916 = fn (%p0129: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p194: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p244: float16 /* ty=float16 */, %p322: float16 /* ty=float16 */, %p422: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    %331 = reshape(%p0129, newshape=[16, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %332 = squeeze(%331, axis=[]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %333 = add(%332, %p194) /* ty=Tensor[(16, 256, 3072), float16] */;
    %334 = multiply(%333, %p244) /* ty=Tensor[(16, 256, 3072), float16] */;
    %335 = fast_erf(%334) /* ty=Tensor[(16, 256, 3072), float16] */;
    %336 = multiply(%335, %p322) /* ty=Tensor[(16, 256, 3072), float16] */;
    %337 = add(%p422, %336) /* ty=Tensor[(16, 256, 3072), float16] */;
    %338 = multiply(%333, %337) /* ty=Tensor[(16, 256, 3072), float16] */;
    %339 = broadcast_to(%338, shape=[16, 256, 3072], dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */;
    reshape(%339, newshape=[-1, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(3072), float16], float16, float16, float16) -> Tensor[(16, 256, 3072), float16] */;
  %917 = %916(%915, meta[relay.Constant][80] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %918 = fn (%p0128: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p193: Tensor[(16, 3072, 768), float16] /* ty=Tensor[(16, 3072, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0128, %p193, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(16, 3072, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %919 = %918(%917, meta[relay.Constant][81] /* ty=Tensor[(16, 3072, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %920 = fn (%p0127: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p192: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p243: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %327 = reshape(%p0127, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %328 = squeeze(%327, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %329 = add(%328, %p192) /* ty=Tensor[(16, 256, 768), float16] */;
    %330 = cast(%329, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%330, %p243) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %921 = %920(%919, meta[relay.Constant][82] /* ty=Tensor[(768), float16] */, %911) /* ty=Tensor[(16, 256, 768), float32] */;
  %922 = fn (%p0268: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0268, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %923 = %922(%921) /* ty=Tensor[(16, 256, 1), float32] */;
  %924 = fn (%p0269: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1188: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0269, %p1188, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %925 = %924(%921, %923) /* ty=Tensor[(16, 256, 1), float32] */;
  %926 = fn (%p0126: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p191: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p242: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p321: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p421: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %322 = add(%p242, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %323 = subtract(%p0126, %p191) /* ty=Tensor[(16, 256, 768), float32] */;
    %324 = rsqrt(%322) /* ty=Tensor[(16, 256, 1), float32] */;
    %325 = multiply(%323, %324) /* ty=Tensor[(16, 256, 768), float32] */;
    %326 = multiply(%325, %p321) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%326, %p421) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %927 = %926(%921, %923, %925, meta[relay.Constant][83] /* ty=Tensor[(768), float32] */, meta[relay.Constant][84] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %928 = fn (%p0125: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %320 = broadcast_to(%p0125, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %321 = reshape(%320, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%321, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %929 = %928(%927) /* ty=Tensor[(16, 256, 768), float16] */;
  %930 = fn (%p0124: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p190: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0124, %p190, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %931 = %930(%929, meta[relay.Constant][85] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %932 = fn (%p0123: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p189: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %314 = reshape(%p0123, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %315 = squeeze(%314, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %316 = add(%315, %p189) /* ty=Tensor[(16, 256, 768), float16] */;
    %317 = reshape(%316, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %318 = transpose(%317, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %319 = broadcast_to(%318, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%319, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %941 = fn (%p0272: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %939 = broadcast_to(%p0272, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %940 = reshape(%939, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%940, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %942 = %941(%927) /* ty=Tensor[(16, 256, 768), float16] */;
  %943 = fn (%p0271: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1190: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0271, %p1190, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %944 = %943(%942, meta[relay.Constant][87] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %945 = fn (%p0270: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1189: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 64, 256), float16] {
    %933 = reshape(%p0270, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %934 = squeeze(%933, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %935 = add(%934, %p1189) /* ty=Tensor[(16, 256, 768), float16] */;
    %936 = reshape(%935, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %937 = transpose(%936, axes=[0, 2, 3, 1]) /* ty=Tensor[(16, 12, 64, 256), float16] */;
    %938 = broadcast_to(%937, shape=[16, 12, 64, 256], dtype="float16") /* ty=Tensor[(16, 12, 64, 256), float16] */;
    reshape(%938, newshape=[-1, 64, 256]) /* ty=Tensor[(192, 64, 256), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 64, 256), float16] */;
  %946 = %932(%931, meta[relay.Constant][86] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %947 = %945(%944, meta[relay.Constant][88] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 64, 256), float16] */;
  %948 = fn (%p0122: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, %p188: Tensor[(192, 64, 256), float16] /* ty=Tensor[(192, 64, 256), float16] */, Primitive=1) -> Tensor[(192, 256, 256), float16] {
    nn.batch_matmul(%p0122, %p188, out_dtype="float16") /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16], Tensor[(192, 64, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %949 = %948(%946, %947) /* ty=Tensor[(192, 256, 256), float16] */;
  %950 = fn (%p0121: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p187: float16 /* ty=float16 */, %p241: Tensor[(16, 1, 1, 256), float16] /* ty=Tensor[(16, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %311 = reshape(%p0121, newshape=[16, 12, 256, 256]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %312 = squeeze(%311, axis=[]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %313 = divide(%312, %p187) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    add(%313, %p241) /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], float16, Tensor[(16, 1, 1, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %951 = %950(%949, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(16, 1, 1, 256), float16] */) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %952 = fn (%p0120: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %310 = nn.fast_softmax(%p0120) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    broadcast_to(%310, shape=[16, 12, 256, 256], dtype="float16") /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %953 = %952(%951) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %954 = fn (%p0119: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 256, 256), float16] {
    reshape(%p0119, newshape=[-1, 256, 256]) /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %963 = fn (%p0275: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %961 = broadcast_to(%p0275, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %962 = reshape(%961, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%962, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %964 = %963(%927) /* ty=Tensor[(16, 256, 768), float16] */;
  %965 = fn (%p0274: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1192: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0274, %p1192, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %966 = %965(%964, meta[relay.Constant][89] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %967 = fn (%p0273: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1191: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %955 = reshape(%p0273, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %956 = squeeze(%955, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %957 = add(%956, %p1191) /* ty=Tensor[(16, 256, 768), float16] */;
    %958 = reshape(%957, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %959 = transpose(%958, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %960 = broadcast_to(%959, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%960, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %968 = %954(%953) /* ty=Tensor[(192, 256, 256), float16] */;
  %969 = %967(%966, meta[relay.Constant][90] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %970 = fn (%p0118: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p186: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    nn.batch_matmul(%p0118, %p186, out_dtype="float16") /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], Tensor[(192, 256, 64), float16]) -> Tensor[(192, 256, 64), float16] */;
  %971 = %970(%968, %969) /* ty=Tensor[(192, 256, 64), float16] */;
  %972 = fn (%p0117: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %305 = reshape(%p0117, newshape=[16, 12, 256, 64]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %306 = squeeze(%305, axis=[]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %307 = transpose(%306, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %308 = reshape(%307, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %309 = broadcast_to(%308, shape=[16, 256, 768], dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */;
    reshape(%309, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16]) -> Tensor[(16, 256, 768), float16] */;
  %973 = %972(%971) /* ty=Tensor[(16, 256, 768), float16] */;
  %974 = fn (%p0116: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p185: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0116, %p185, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %975 = %974(%973, meta[relay.Constant][91] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %976 = fn (%p0115: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p184: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p240: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %301 = reshape(%p0115, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %302 = squeeze(%301, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %303 = add(%302, %p184) /* ty=Tensor[(16, 256, 768), float16] */;
    %304 = cast(%303, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%304, %p240) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %977 = %976(%975, meta[relay.Constant][92] /* ty=Tensor[(768), float16] */, %927) /* ty=Tensor[(16, 256, 768), float32] */;
  %978 = fn (%p0276: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0276, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %979 = %978(%977) /* ty=Tensor[(16, 256, 1), float32] */;
  %980 = fn (%p0277: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1193: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0277, %p1193, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %981 = %980(%977, %979) /* ty=Tensor[(16, 256, 1), float32] */;
  %982 = fn (%p0114: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p183: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p239: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p320: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p420: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %296 = add(%p239, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %297 = subtract(%p0114, %p183) /* ty=Tensor[(16, 256, 768), float32] */;
    %298 = rsqrt(%296) /* ty=Tensor[(16, 256, 1), float32] */;
    %299 = multiply(%297, %298) /* ty=Tensor[(16, 256, 768), float32] */;
    %300 = multiply(%299, %p320) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%300, %p420) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %983 = %982(%977, %979, %981, meta[relay.Constant][93] /* ty=Tensor[(768), float32] */, meta[relay.Constant][94] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %984 = fn (%p0113: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %294 = broadcast_to(%p0113, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %295 = reshape(%294, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%295, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %985 = %984(%983) /* ty=Tensor[(16, 256, 768), float16] */;
  %986 = fn (%p0112: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p182: Tensor[(16, 768, 3072), float16] /* ty=Tensor[(16, 768, 3072), float16] */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    nn.batch_matmul(%p0112, %p182, out_dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 3072), float16]) -> Tensor[(16, 256, 3072), float16] */;
  %987 = %986(%985, meta[relay.Constant][95] /* ty=Tensor[(16, 768, 3072), float16] */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %988 = fn (%p0111: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p181: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p238: float16 /* ty=float16 */, %p319: float16 /* ty=float16 */, %p419: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    %285 = reshape(%p0111, newshape=[16, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %286 = squeeze(%285, axis=[]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %287 = add(%286, %p181) /* ty=Tensor[(16, 256, 3072), float16] */;
    %288 = multiply(%287, %p238) /* ty=Tensor[(16, 256, 3072), float16] */;
    %289 = fast_erf(%288) /* ty=Tensor[(16, 256, 3072), float16] */;
    %290 = multiply(%289, %p319) /* ty=Tensor[(16, 256, 3072), float16] */;
    %291 = add(%p419, %290) /* ty=Tensor[(16, 256, 3072), float16] */;
    %292 = multiply(%287, %291) /* ty=Tensor[(16, 256, 3072), float16] */;
    %293 = broadcast_to(%292, shape=[16, 256, 3072], dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */;
    reshape(%293, newshape=[-1, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(3072), float16], float16, float16, float16) -> Tensor[(16, 256, 3072), float16] */;
  %989 = %988(%987, meta[relay.Constant][96] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %990 = fn (%p0110: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p180: Tensor[(16, 3072, 768), float16] /* ty=Tensor[(16, 3072, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0110, %p180, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(16, 3072, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %991 = %990(%989, meta[relay.Constant][97] /* ty=Tensor[(16, 3072, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %992 = fn (%p0109: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p179: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p237: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %281 = reshape(%p0109, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %282 = squeeze(%281, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %283 = add(%282, %p179) /* ty=Tensor[(16, 256, 768), float16] */;
    %284 = cast(%283, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%284, %p237) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %993 = %992(%991, meta[relay.Constant][98] /* ty=Tensor[(768), float16] */, %983) /* ty=Tensor[(16, 256, 768), float32] */;
  %994 = fn (%p0278: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0278, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %995 = %994(%993) /* ty=Tensor[(16, 256, 1), float32] */;
  %996 = fn (%p0279: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1194: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0279, %p1194, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %997 = %996(%993, %995) /* ty=Tensor[(16, 256, 1), float32] */;
  %998 = fn (%p0108: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p178: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p236: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p318: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p418: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %276 = add(%p236, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %277 = subtract(%p0108, %p178) /* ty=Tensor[(16, 256, 768), float32] */;
    %278 = rsqrt(%276) /* ty=Tensor[(16, 256, 1), float32] */;
    %279 = multiply(%277, %278) /* ty=Tensor[(16, 256, 768), float32] */;
    %280 = multiply(%279, %p318) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%280, %p418) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %999 = %998(%993, %995, %997, meta[relay.Constant][99] /* ty=Tensor[(768), float32] */, meta[relay.Constant][100] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %1000 = fn (%p0107: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %274 = broadcast_to(%p0107, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %275 = reshape(%274, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%275, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1001 = %1000(%999) /* ty=Tensor[(16, 256, 768), float16] */;
  %1002 = fn (%p0106: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p177: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0106, %p177, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1003 = %1002(%1001, meta[relay.Constant][101] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1004 = fn (%p0105: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p176: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %268 = reshape(%p0105, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %269 = squeeze(%268, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %270 = add(%269, %p176) /* ty=Tensor[(16, 256, 768), float16] */;
    %271 = reshape(%270, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %272 = transpose(%271, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %273 = broadcast_to(%272, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%273, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1013 = fn (%p0282: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %1011 = broadcast_to(%p0282, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %1012 = reshape(%1011, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%1012, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1014 = %1013(%999) /* ty=Tensor[(16, 256, 768), float16] */;
  %1015 = fn (%p0281: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1196: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0281, %p1196, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1016 = %1015(%1014, meta[relay.Constant][103] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1017 = fn (%p0280: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1195: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 64, 256), float16] {
    %1005 = reshape(%p0280, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1006 = squeeze(%1005, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1007 = add(%1006, %p1195) /* ty=Tensor[(16, 256, 768), float16] */;
    %1008 = reshape(%1007, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %1009 = transpose(%1008, axes=[0, 2, 3, 1]) /* ty=Tensor[(16, 12, 64, 256), float16] */;
    %1010 = broadcast_to(%1009, shape=[16, 12, 64, 256], dtype="float16") /* ty=Tensor[(16, 12, 64, 256), float16] */;
    reshape(%1010, newshape=[-1, 64, 256]) /* ty=Tensor[(192, 64, 256), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 64, 256), float16] */;
  %1018 = %1004(%1003, meta[relay.Constant][102] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %1019 = %1017(%1016, meta[relay.Constant][104] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 64, 256), float16] */;
  %1020 = fn (%p0104: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, %p175: Tensor[(192, 64, 256), float16] /* ty=Tensor[(192, 64, 256), float16] */, Primitive=1) -> Tensor[(192, 256, 256), float16] {
    nn.batch_matmul(%p0104, %p175, out_dtype="float16") /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16], Tensor[(192, 64, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %1021 = %1020(%1018, %1019) /* ty=Tensor[(192, 256, 256), float16] */;
  %1022 = fn (%p0103: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p174: float16 /* ty=float16 */, %p235: Tensor[(16, 1, 1, 256), float16] /* ty=Tensor[(16, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %265 = reshape(%p0103, newshape=[16, 12, 256, 256]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %266 = squeeze(%265, axis=[]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %267 = divide(%266, %p174) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    add(%267, %p235) /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], float16, Tensor[(16, 1, 1, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %1023 = %1022(%1021, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(16, 1, 1, 256), float16] */) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %1024 = fn (%p0102: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %264 = nn.fast_softmax(%p0102) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    broadcast_to(%264, shape=[16, 12, 256, 256], dtype="float16") /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %1025 = %1024(%1023) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %1026 = fn (%p0101: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 256, 256), float16] {
    reshape(%p0101, newshape=[-1, 256, 256]) /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %1035 = fn (%p0285: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %1033 = broadcast_to(%p0285, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %1034 = reshape(%1033, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%1034, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1036 = %1035(%999) /* ty=Tensor[(16, 256, 768), float16] */;
  %1037 = fn (%p0284: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1198: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0284, %p1198, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1038 = %1037(%1036, meta[relay.Constant][105] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1039 = fn (%p0283: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1197: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %1027 = reshape(%p0283, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1028 = squeeze(%1027, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1029 = add(%1028, %p1197) /* ty=Tensor[(16, 256, 768), float16] */;
    %1030 = reshape(%1029, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %1031 = transpose(%1030, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %1032 = broadcast_to(%1031, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%1032, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1040 = %1026(%1025) /* ty=Tensor[(192, 256, 256), float16] */;
  %1041 = %1039(%1038, meta[relay.Constant][106] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %1042 = fn (%p0100: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p173: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    nn.batch_matmul(%p0100, %p173, out_dtype="float16") /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], Tensor[(192, 256, 64), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1043 = %1042(%1040, %1041) /* ty=Tensor[(192, 256, 64), float16] */;
  %1044 = fn (%p099: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %259 = reshape(%p099, newshape=[16, 12, 256, 64]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %260 = squeeze(%259, axis=[]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %261 = transpose(%260, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %262 = reshape(%261, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %263 = broadcast_to(%262, shape=[16, 256, 768], dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */;
    reshape(%263, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1045 = %1044(%1043) /* ty=Tensor[(16, 256, 768), float16] */;
  %1046 = fn (%p098: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p172: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p098, %p172, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1047 = %1046(%1045, meta[relay.Constant][107] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1048 = fn (%p097: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p171: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p234: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %255 = reshape(%p097, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %256 = squeeze(%255, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %257 = add(%256, %p171) /* ty=Tensor[(16, 256, 768), float16] */;
    %258 = cast(%257, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%258, %p234) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1049 = %1048(%1047, meta[relay.Constant][108] /* ty=Tensor[(768), float16] */, %999) /* ty=Tensor[(16, 256, 768), float32] */;
  %1050 = fn (%p0286: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0286, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1051 = %1050(%1049) /* ty=Tensor[(16, 256, 1), float32] */;
  %1052 = fn (%p0287: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1199: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0287, %p1199, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1053 = %1052(%1049, %1051) /* ty=Tensor[(16, 256, 1), float32] */;
  %1054 = fn (%p096: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p170: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p233: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p317: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p417: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %250 = add(%p233, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %251 = subtract(%p096, %p170) /* ty=Tensor[(16, 256, 768), float32] */;
    %252 = rsqrt(%250) /* ty=Tensor[(16, 256, 1), float32] */;
    %253 = multiply(%251, %252) /* ty=Tensor[(16, 256, 768), float32] */;
    %254 = multiply(%253, %p317) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%254, %p417) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1055 = %1054(%1049, %1051, %1053, meta[relay.Constant][109] /* ty=Tensor[(768), float32] */, meta[relay.Constant][110] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %1056 = fn (%p095: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %248 = broadcast_to(%p095, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %249 = reshape(%248, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%249, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1057 = %1056(%1055) /* ty=Tensor[(16, 256, 768), float16] */;
  %1058 = fn (%p094: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p169: Tensor[(16, 768, 3072), float16] /* ty=Tensor[(16, 768, 3072), float16] */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    nn.batch_matmul(%p094, %p169, out_dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 3072), float16]) -> Tensor[(16, 256, 3072), float16] */;
  %1059 = %1058(%1057, meta[relay.Constant][111] /* ty=Tensor[(16, 768, 3072), float16] */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %1060 = fn (%p093: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p168: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p232: float16 /* ty=float16 */, %p316: float16 /* ty=float16 */, %p416: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    %239 = reshape(%p093, newshape=[16, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %240 = squeeze(%239, axis=[]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %241 = add(%240, %p168) /* ty=Tensor[(16, 256, 3072), float16] */;
    %242 = multiply(%241, %p232) /* ty=Tensor[(16, 256, 3072), float16] */;
    %243 = fast_erf(%242) /* ty=Tensor[(16, 256, 3072), float16] */;
    %244 = multiply(%243, %p316) /* ty=Tensor[(16, 256, 3072), float16] */;
    %245 = add(%p416, %244) /* ty=Tensor[(16, 256, 3072), float16] */;
    %246 = multiply(%241, %245) /* ty=Tensor[(16, 256, 3072), float16] */;
    %247 = broadcast_to(%246, shape=[16, 256, 3072], dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */;
    reshape(%247, newshape=[-1, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(3072), float16], float16, float16, float16) -> Tensor[(16, 256, 3072), float16] */;
  %1061 = %1060(%1059, meta[relay.Constant][112] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %1062 = fn (%p092: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p167: Tensor[(16, 3072, 768), float16] /* ty=Tensor[(16, 3072, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p092, %p167, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(16, 3072, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1063 = %1062(%1061, meta[relay.Constant][113] /* ty=Tensor[(16, 3072, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1064 = fn (%p091: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p166: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p231: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %235 = reshape(%p091, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %236 = squeeze(%235, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %237 = add(%236, %p166) /* ty=Tensor[(16, 256, 768), float16] */;
    %238 = cast(%237, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%238, %p231) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1065 = %1064(%1063, meta[relay.Constant][114] /* ty=Tensor[(768), float16] */, %1055) /* ty=Tensor[(16, 256, 768), float32] */;
  %1066 = fn (%p0288: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0288, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1067 = %1066(%1065) /* ty=Tensor[(16, 256, 1), float32] */;
  %1068 = fn (%p0289: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1200: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0289, %p1200, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1069 = %1068(%1065, %1067) /* ty=Tensor[(16, 256, 1), float32] */;
  %1070 = fn (%p090: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p165: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p230: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p315: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p415: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %230 = add(%p230, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %231 = subtract(%p090, %p165) /* ty=Tensor[(16, 256, 768), float32] */;
    %232 = rsqrt(%230) /* ty=Tensor[(16, 256, 1), float32] */;
    %233 = multiply(%231, %232) /* ty=Tensor[(16, 256, 768), float32] */;
    %234 = multiply(%233, %p315) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%234, %p415) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1071 = %1070(%1065, %1067, %1069, meta[relay.Constant][115] /* ty=Tensor[(768), float32] */, meta[relay.Constant][116] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %1072 = fn (%p089: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %228 = broadcast_to(%p089, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %229 = reshape(%228, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%229, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1073 = %1072(%1071) /* ty=Tensor[(16, 256, 768), float16] */;
  %1074 = fn (%p088: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p164: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p088, %p164, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1075 = %1074(%1073, meta[relay.Constant][117] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1076 = fn (%p087: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p163: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %222 = reshape(%p087, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %223 = squeeze(%222, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %224 = add(%223, %p163) /* ty=Tensor[(16, 256, 768), float16] */;
    %225 = reshape(%224, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %226 = transpose(%225, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %227 = broadcast_to(%226, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%227, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1085 = fn (%p0292: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %1083 = broadcast_to(%p0292, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %1084 = reshape(%1083, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%1084, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1086 = %1085(%1071) /* ty=Tensor[(16, 256, 768), float16] */;
  %1087 = fn (%p0291: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1202: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0291, %p1202, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1088 = %1087(%1086, meta[relay.Constant][119] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1089 = fn (%p0290: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1201: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 64, 256), float16] {
    %1077 = reshape(%p0290, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1078 = squeeze(%1077, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1079 = add(%1078, %p1201) /* ty=Tensor[(16, 256, 768), float16] */;
    %1080 = reshape(%1079, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %1081 = transpose(%1080, axes=[0, 2, 3, 1]) /* ty=Tensor[(16, 12, 64, 256), float16] */;
    %1082 = broadcast_to(%1081, shape=[16, 12, 64, 256], dtype="float16") /* ty=Tensor[(16, 12, 64, 256), float16] */;
    reshape(%1082, newshape=[-1, 64, 256]) /* ty=Tensor[(192, 64, 256), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 64, 256), float16] */;
  %1090 = %1076(%1075, meta[relay.Constant][118] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %1091 = %1089(%1088, meta[relay.Constant][120] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 64, 256), float16] */;
  %1092 = fn (%p086: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, %p162: Tensor[(192, 64, 256), float16] /* ty=Tensor[(192, 64, 256), float16] */, Primitive=1) -> Tensor[(192, 256, 256), float16] {
    nn.batch_matmul(%p086, %p162, out_dtype="float16") /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16], Tensor[(192, 64, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %1093 = %1092(%1090, %1091) /* ty=Tensor[(192, 256, 256), float16] */;
  %1094 = fn (%p085: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p161: float16 /* ty=float16 */, %p229: Tensor[(16, 1, 1, 256), float16] /* ty=Tensor[(16, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %219 = reshape(%p085, newshape=[16, 12, 256, 256]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %220 = squeeze(%219, axis=[]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %221 = divide(%220, %p161) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    add(%221, %p229) /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], float16, Tensor[(16, 1, 1, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %1095 = %1094(%1093, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(16, 1, 1, 256), float16] */) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %1096 = fn (%p084: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %218 = nn.fast_softmax(%p084) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    broadcast_to(%218, shape=[16, 12, 256, 256], dtype="float16") /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %1097 = %1096(%1095) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %1098 = fn (%p083: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 256, 256), float16] {
    reshape(%p083, newshape=[-1, 256, 256]) /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %1107 = fn (%p0295: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %1105 = broadcast_to(%p0295, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %1106 = reshape(%1105, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%1106, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1108 = %1107(%1071) /* ty=Tensor[(16, 256, 768), float16] */;
  %1109 = fn (%p0294: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1204: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0294, %p1204, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1110 = %1109(%1108, meta[relay.Constant][121] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1111 = fn (%p0293: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1203: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %1099 = reshape(%p0293, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1100 = squeeze(%1099, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1101 = add(%1100, %p1203) /* ty=Tensor[(16, 256, 768), float16] */;
    %1102 = reshape(%1101, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %1103 = transpose(%1102, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %1104 = broadcast_to(%1103, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%1104, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1112 = %1098(%1097) /* ty=Tensor[(192, 256, 256), float16] */;
  %1113 = %1111(%1110, meta[relay.Constant][122] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %1114 = fn (%p082: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p160: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    nn.batch_matmul(%p082, %p160, out_dtype="float16") /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], Tensor[(192, 256, 64), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1115 = %1114(%1112, %1113) /* ty=Tensor[(192, 256, 64), float16] */;
  %1116 = fn (%p081: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %213 = reshape(%p081, newshape=[16, 12, 256, 64]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %214 = squeeze(%213, axis=[]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %215 = transpose(%214, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %216 = reshape(%215, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %217 = broadcast_to(%216, shape=[16, 256, 768], dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */;
    reshape(%217, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1117 = %1116(%1115) /* ty=Tensor[(16, 256, 768), float16] */;
  %1118 = fn (%p080: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p159: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p080, %p159, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1119 = %1118(%1117, meta[relay.Constant][123] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1120 = fn (%p079: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p158: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p228: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %209 = reshape(%p079, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %210 = squeeze(%209, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %211 = add(%210, %p158) /* ty=Tensor[(16, 256, 768), float16] */;
    %212 = cast(%211, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%212, %p228) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1121 = %1120(%1119, meta[relay.Constant][124] /* ty=Tensor[(768), float16] */, %1071) /* ty=Tensor[(16, 256, 768), float32] */;
  %1122 = fn (%p0296: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0296, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1123 = %1122(%1121) /* ty=Tensor[(16, 256, 1), float32] */;
  %1124 = fn (%p0297: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1205: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0297, %p1205, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1125 = %1124(%1121, %1123) /* ty=Tensor[(16, 256, 1), float32] */;
  %1126 = fn (%p078: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p157: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p227: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p314: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p414: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %204 = add(%p227, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %205 = subtract(%p078, %p157) /* ty=Tensor[(16, 256, 768), float32] */;
    %206 = rsqrt(%204) /* ty=Tensor[(16, 256, 1), float32] */;
    %207 = multiply(%205, %206) /* ty=Tensor[(16, 256, 768), float32] */;
    %208 = multiply(%207, %p314) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%208, %p414) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1127 = %1126(%1121, %1123, %1125, meta[relay.Constant][125] /* ty=Tensor[(768), float32] */, meta[relay.Constant][126] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %1128 = fn (%p077: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %202 = broadcast_to(%p077, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %203 = reshape(%202, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%203, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1129 = %1128(%1127) /* ty=Tensor[(16, 256, 768), float16] */;
  %1130 = fn (%p076: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p156: Tensor[(16, 768, 3072), float16] /* ty=Tensor[(16, 768, 3072), float16] */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    nn.batch_matmul(%p076, %p156, out_dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 3072), float16]) -> Tensor[(16, 256, 3072), float16] */;
  %1131 = %1130(%1129, meta[relay.Constant][127] /* ty=Tensor[(16, 768, 3072), float16] */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %1132 = fn (%p075: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p155: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p226: float16 /* ty=float16 */, %p313: float16 /* ty=float16 */, %p413: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    %193 = reshape(%p075, newshape=[16, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %194 = squeeze(%193, axis=[]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %195 = add(%194, %p155) /* ty=Tensor[(16, 256, 3072), float16] */;
    %196 = multiply(%195, %p226) /* ty=Tensor[(16, 256, 3072), float16] */;
    %197 = fast_erf(%196) /* ty=Tensor[(16, 256, 3072), float16] */;
    %198 = multiply(%197, %p313) /* ty=Tensor[(16, 256, 3072), float16] */;
    %199 = add(%p413, %198) /* ty=Tensor[(16, 256, 3072), float16] */;
    %200 = multiply(%195, %199) /* ty=Tensor[(16, 256, 3072), float16] */;
    %201 = broadcast_to(%200, shape=[16, 256, 3072], dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */;
    reshape(%201, newshape=[-1, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(3072), float16], float16, float16, float16) -> Tensor[(16, 256, 3072), float16] */;
  %1133 = %1132(%1131, meta[relay.Constant][128] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %1134 = fn (%p074: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p154: Tensor[(16, 3072, 768), float16] /* ty=Tensor[(16, 3072, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p074, %p154, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(16, 3072, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1135 = %1134(%1133, meta[relay.Constant][129] /* ty=Tensor[(16, 3072, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1136 = fn (%p073: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p153: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p225: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %189 = reshape(%p073, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %190 = squeeze(%189, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %191 = add(%190, %p153) /* ty=Tensor[(16, 256, 768), float16] */;
    %192 = cast(%191, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%192, %p225) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1137 = %1136(%1135, meta[relay.Constant][130] /* ty=Tensor[(768), float16] */, %1127) /* ty=Tensor[(16, 256, 768), float32] */;
  %1138 = fn (%p0298: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0298, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1139 = %1138(%1137) /* ty=Tensor[(16, 256, 1), float32] */;
  %1140 = fn (%p0299: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1206: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0299, %p1206, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1141 = %1140(%1137, %1139) /* ty=Tensor[(16, 256, 1), float32] */;
  %1142 = fn (%p072: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p152: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p224: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p312: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p412: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %184 = add(%p224, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %185 = subtract(%p072, %p152) /* ty=Tensor[(16, 256, 768), float32] */;
    %186 = rsqrt(%184) /* ty=Tensor[(16, 256, 1), float32] */;
    %187 = multiply(%185, %186) /* ty=Tensor[(16, 256, 768), float32] */;
    %188 = multiply(%187, %p312) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%188, %p412) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1143 = %1142(%1137, %1139, %1141, meta[relay.Constant][131] /* ty=Tensor[(768), float32] */, meta[relay.Constant][132] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %1144 = fn (%p071: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %182 = broadcast_to(%p071, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %183 = reshape(%182, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%183, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1145 = %1144(%1143) /* ty=Tensor[(16, 256, 768), float16] */;
  %1146 = fn (%p070: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p151: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p070, %p151, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1147 = %1146(%1145, meta[relay.Constant][133] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1148 = fn (%p069: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p150: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %176 = reshape(%p069, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %177 = squeeze(%176, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %178 = add(%177, %p150) /* ty=Tensor[(16, 256, 768), float16] */;
    %179 = reshape(%178, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %180 = transpose(%179, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %181 = broadcast_to(%180, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%181, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1157 = fn (%p0302: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %1155 = broadcast_to(%p0302, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %1156 = reshape(%1155, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%1156, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1158 = %1157(%1143) /* ty=Tensor[(16, 256, 768), float16] */;
  %1159 = fn (%p0301: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1208: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0301, %p1208, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1160 = %1159(%1158, meta[relay.Constant][135] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1161 = fn (%p0300: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1207: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 64, 256), float16] {
    %1149 = reshape(%p0300, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1150 = squeeze(%1149, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1151 = add(%1150, %p1207) /* ty=Tensor[(16, 256, 768), float16] */;
    %1152 = reshape(%1151, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %1153 = transpose(%1152, axes=[0, 2, 3, 1]) /* ty=Tensor[(16, 12, 64, 256), float16] */;
    %1154 = broadcast_to(%1153, shape=[16, 12, 64, 256], dtype="float16") /* ty=Tensor[(16, 12, 64, 256), float16] */;
    reshape(%1154, newshape=[-1, 64, 256]) /* ty=Tensor[(192, 64, 256), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 64, 256), float16] */;
  %1162 = %1148(%1147, meta[relay.Constant][134] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %1163 = %1161(%1160, meta[relay.Constant][136] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 64, 256), float16] */;
  %1164 = fn (%p068: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, %p149: Tensor[(192, 64, 256), float16] /* ty=Tensor[(192, 64, 256), float16] */, Primitive=1) -> Tensor[(192, 256, 256), float16] {
    nn.batch_matmul(%p068, %p149, out_dtype="float16") /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16], Tensor[(192, 64, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %1165 = %1164(%1162, %1163) /* ty=Tensor[(192, 256, 256), float16] */;
  %1166 = fn (%p067: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p148: float16 /* ty=float16 */, %p223: Tensor[(16, 1, 1, 256), float16] /* ty=Tensor[(16, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %173 = reshape(%p067, newshape=[16, 12, 256, 256]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %174 = squeeze(%173, axis=[]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %175 = divide(%174, %p148) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    add(%175, %p223) /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], float16, Tensor[(16, 1, 1, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %1167 = %1166(%1165, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(16, 1, 1, 256), float16] */) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %1168 = fn (%p066: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %172 = nn.fast_softmax(%p066) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    broadcast_to(%172, shape=[16, 12, 256, 256], dtype="float16") /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %1169 = %1168(%1167) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %1170 = fn (%p065: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 256, 256), float16] {
    reshape(%p065, newshape=[-1, 256, 256]) /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %1179 = fn (%p0305: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %1177 = broadcast_to(%p0305, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %1178 = reshape(%1177, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%1178, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1180 = %1179(%1143) /* ty=Tensor[(16, 256, 768), float16] */;
  %1181 = fn (%p0304: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1210: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0304, %p1210, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1182 = %1181(%1180, meta[relay.Constant][137] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1183 = fn (%p0303: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1209: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %1171 = reshape(%p0303, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1172 = squeeze(%1171, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1173 = add(%1172, %p1209) /* ty=Tensor[(16, 256, 768), float16] */;
    %1174 = reshape(%1173, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %1175 = transpose(%1174, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %1176 = broadcast_to(%1175, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%1176, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1184 = %1170(%1169) /* ty=Tensor[(192, 256, 256), float16] */;
  %1185 = %1183(%1182, meta[relay.Constant][138] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %1186 = fn (%p064: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p147: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    nn.batch_matmul(%p064, %p147, out_dtype="float16") /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], Tensor[(192, 256, 64), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1187 = %1186(%1184, %1185) /* ty=Tensor[(192, 256, 64), float16] */;
  %1188 = fn (%p063: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %167 = reshape(%p063, newshape=[16, 12, 256, 64]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %168 = squeeze(%167, axis=[]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %169 = transpose(%168, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %170 = reshape(%169, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %171 = broadcast_to(%170, shape=[16, 256, 768], dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */;
    reshape(%171, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1189 = %1188(%1187) /* ty=Tensor[(16, 256, 768), float16] */;
  %1190 = fn (%p062: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p146: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p062, %p146, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1191 = %1190(%1189, meta[relay.Constant][139] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1192 = fn (%p061: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p145: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p222: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %163 = reshape(%p061, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %164 = squeeze(%163, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %165 = add(%164, %p145) /* ty=Tensor[(16, 256, 768), float16] */;
    %166 = cast(%165, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%166, %p222) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1193 = %1192(%1191, meta[relay.Constant][140] /* ty=Tensor[(768), float16] */, %1143) /* ty=Tensor[(16, 256, 768), float32] */;
  %1194 = fn (%p0306: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0306, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1195 = %1194(%1193) /* ty=Tensor[(16, 256, 1), float32] */;
  %1196 = fn (%p0307: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1211: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0307, %p1211, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1197 = %1196(%1193, %1195) /* ty=Tensor[(16, 256, 1), float32] */;
  %1198 = fn (%p060: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p144: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p221: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p311: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p411: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %158 = add(%p221, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %159 = subtract(%p060, %p144) /* ty=Tensor[(16, 256, 768), float32] */;
    %160 = rsqrt(%158) /* ty=Tensor[(16, 256, 1), float32] */;
    %161 = multiply(%159, %160) /* ty=Tensor[(16, 256, 768), float32] */;
    %162 = multiply(%161, %p311) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%162, %p411) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1199 = %1198(%1193, %1195, %1197, meta[relay.Constant][141] /* ty=Tensor[(768), float32] */, meta[relay.Constant][142] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %1200 = fn (%p059: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %156 = broadcast_to(%p059, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %157 = reshape(%156, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%157, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1201 = %1200(%1199) /* ty=Tensor[(16, 256, 768), float16] */;
  %1202 = fn (%p058: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p143: Tensor[(16, 768, 3072), float16] /* ty=Tensor[(16, 768, 3072), float16] */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    nn.batch_matmul(%p058, %p143, out_dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 3072), float16]) -> Tensor[(16, 256, 3072), float16] */;
  %1203 = %1202(%1201, meta[relay.Constant][143] /* ty=Tensor[(16, 768, 3072), float16] */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %1204 = fn (%p057: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p142: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p220: float16 /* ty=float16 */, %p310: float16 /* ty=float16 */, %p410: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    %147 = reshape(%p057, newshape=[16, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %148 = squeeze(%147, axis=[]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %149 = add(%148, %p142) /* ty=Tensor[(16, 256, 3072), float16] */;
    %150 = multiply(%149, %p220) /* ty=Tensor[(16, 256, 3072), float16] */;
    %151 = fast_erf(%150) /* ty=Tensor[(16, 256, 3072), float16] */;
    %152 = multiply(%151, %p310) /* ty=Tensor[(16, 256, 3072), float16] */;
    %153 = add(%p410, %152) /* ty=Tensor[(16, 256, 3072), float16] */;
    %154 = multiply(%149, %153) /* ty=Tensor[(16, 256, 3072), float16] */;
    %155 = broadcast_to(%154, shape=[16, 256, 3072], dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */;
    reshape(%155, newshape=[-1, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(3072), float16], float16, float16, float16) -> Tensor[(16, 256, 3072), float16] */;
  %1205 = %1204(%1203, meta[relay.Constant][144] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %1206 = fn (%p056: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p141: Tensor[(16, 3072, 768), float16] /* ty=Tensor[(16, 3072, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p056, %p141, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(16, 3072, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1207 = %1206(%1205, meta[relay.Constant][145] /* ty=Tensor[(16, 3072, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1208 = fn (%p055: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p140: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p219: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %143 = reshape(%p055, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %144 = squeeze(%143, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %145 = add(%144, %p140) /* ty=Tensor[(16, 256, 768), float16] */;
    %146 = cast(%145, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%146, %p219) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1209 = %1208(%1207, meta[relay.Constant][146] /* ty=Tensor[(768), float16] */, %1199) /* ty=Tensor[(16, 256, 768), float32] */;
  %1210 = fn (%p0308: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0308, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1211 = %1210(%1209) /* ty=Tensor[(16, 256, 1), float32] */;
  %1212 = fn (%p0309: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1212: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0309, %p1212, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1213 = %1212(%1209, %1211) /* ty=Tensor[(16, 256, 1), float32] */;
  %1214 = fn (%p054: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p139: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p218: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p39: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p49: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %138 = add(%p218, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %139 = subtract(%p054, %p139) /* ty=Tensor[(16, 256, 768), float32] */;
    %140 = rsqrt(%138) /* ty=Tensor[(16, 256, 1), float32] */;
    %141 = multiply(%139, %140) /* ty=Tensor[(16, 256, 768), float32] */;
    %142 = multiply(%141, %p39) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%142, %p49) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1215 = %1214(%1209, %1211, %1213, meta[relay.Constant][147] /* ty=Tensor[(768), float32] */, meta[relay.Constant][148] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %1216 = fn (%p053: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %136 = broadcast_to(%p053, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %137 = reshape(%136, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%137, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1217 = %1216(%1215) /* ty=Tensor[(16, 256, 768), float16] */;
  %1218 = fn (%p052: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p138: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p052, %p138, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1219 = %1218(%1217, meta[relay.Constant][149] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1220 = fn (%p051: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p137: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %130 = reshape(%p051, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %131 = squeeze(%130, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %132 = add(%131, %p137) /* ty=Tensor[(16, 256, 768), float16] */;
    %133 = reshape(%132, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %134 = transpose(%133, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %135 = broadcast_to(%134, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%135, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1229 = fn (%p0312: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %1227 = broadcast_to(%p0312, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %1228 = reshape(%1227, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%1228, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1230 = %1229(%1215) /* ty=Tensor[(16, 256, 768), float16] */;
  %1231 = fn (%p0311: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1214: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0311, %p1214, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1232 = %1231(%1230, meta[relay.Constant][151] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1233 = fn (%p0310: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1213: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 64, 256), float16] {
    %1221 = reshape(%p0310, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1222 = squeeze(%1221, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1223 = add(%1222, %p1213) /* ty=Tensor[(16, 256, 768), float16] */;
    %1224 = reshape(%1223, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %1225 = transpose(%1224, axes=[0, 2, 3, 1]) /* ty=Tensor[(16, 12, 64, 256), float16] */;
    %1226 = broadcast_to(%1225, shape=[16, 12, 64, 256], dtype="float16") /* ty=Tensor[(16, 12, 64, 256), float16] */;
    reshape(%1226, newshape=[-1, 64, 256]) /* ty=Tensor[(192, 64, 256), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 64, 256), float16] */;
  %1234 = %1220(%1219, meta[relay.Constant][150] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %1235 = %1233(%1232, meta[relay.Constant][152] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 64, 256), float16] */;
  %1236 = fn (%p050: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, %p136: Tensor[(192, 64, 256), float16] /* ty=Tensor[(192, 64, 256), float16] */, Primitive=1) -> Tensor[(192, 256, 256), float16] {
    nn.batch_matmul(%p050, %p136, out_dtype="float16") /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16], Tensor[(192, 64, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %1237 = %1236(%1234, %1235) /* ty=Tensor[(192, 256, 256), float16] */;
  %1238 = fn (%p049: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p135: float16 /* ty=float16 */, %p217: Tensor[(16, 1, 1, 256), float16] /* ty=Tensor[(16, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %127 = reshape(%p049, newshape=[16, 12, 256, 256]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %128 = squeeze(%127, axis=[]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %129 = divide(%128, %p135) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    add(%129, %p217) /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], float16, Tensor[(16, 1, 1, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %1239 = %1238(%1237, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(16, 1, 1, 256), float16] */) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %1240 = fn (%p048: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %126 = nn.fast_softmax(%p048) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    broadcast_to(%126, shape=[16, 12, 256, 256], dtype="float16") /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %1241 = %1240(%1239) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %1242 = fn (%p047: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 256, 256), float16] {
    reshape(%p047, newshape=[-1, 256, 256]) /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %1251 = fn (%p0315: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %1249 = broadcast_to(%p0315, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %1250 = reshape(%1249, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%1250, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1252 = %1251(%1215) /* ty=Tensor[(16, 256, 768), float16] */;
  %1253 = fn (%p0314: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1216: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0314, %p1216, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1254 = %1253(%1252, meta[relay.Constant][153] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1255 = fn (%p0313: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1215: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %1243 = reshape(%p0313, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1244 = squeeze(%1243, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1245 = add(%1244, %p1215) /* ty=Tensor[(16, 256, 768), float16] */;
    %1246 = reshape(%1245, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %1247 = transpose(%1246, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %1248 = broadcast_to(%1247, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%1248, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1256 = %1242(%1241) /* ty=Tensor[(192, 256, 256), float16] */;
  %1257 = %1255(%1254, meta[relay.Constant][154] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %1258 = fn (%p046: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p134: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    nn.batch_matmul(%p046, %p134, out_dtype="float16") /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], Tensor[(192, 256, 64), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1259 = %1258(%1256, %1257) /* ty=Tensor[(192, 256, 64), float16] */;
  %1260 = fn (%p045: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %121 = reshape(%p045, newshape=[16, 12, 256, 64]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %122 = squeeze(%121, axis=[]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %123 = transpose(%122, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %124 = reshape(%123, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %125 = broadcast_to(%124, shape=[16, 256, 768], dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */;
    reshape(%125, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1261 = %1260(%1259) /* ty=Tensor[(16, 256, 768), float16] */;
  %1262 = fn (%p044: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p133: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p044, %p133, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1263 = %1262(%1261, meta[relay.Constant][155] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1264 = fn (%p043: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p132: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p216: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %117 = reshape(%p043, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %118 = squeeze(%117, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %119 = add(%118, %p132) /* ty=Tensor[(16, 256, 768), float16] */;
    %120 = cast(%119, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%120, %p216) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1265 = %1264(%1263, meta[relay.Constant][156] /* ty=Tensor[(768), float16] */, %1215) /* ty=Tensor[(16, 256, 768), float32] */;
  %1266 = fn (%p0316: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0316, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1267 = %1266(%1265) /* ty=Tensor[(16, 256, 1), float32] */;
  %1268 = fn (%p0317: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1217: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0317, %p1217, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1269 = %1268(%1265, %1267) /* ty=Tensor[(16, 256, 1), float32] */;
  %1270 = fn (%p042: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p131: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p215: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p38: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p48: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %112 = add(%p215, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %113 = subtract(%p042, %p131) /* ty=Tensor[(16, 256, 768), float32] */;
    %114 = rsqrt(%112) /* ty=Tensor[(16, 256, 1), float32] */;
    %115 = multiply(%113, %114) /* ty=Tensor[(16, 256, 768), float32] */;
    %116 = multiply(%115, %p38) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%116, %p48) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1271 = %1270(%1265, %1267, %1269, meta[relay.Constant][157] /* ty=Tensor[(768), float32] */, meta[relay.Constant][158] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %1272 = fn (%p041: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %110 = broadcast_to(%p041, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %111 = reshape(%110, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%111, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1273 = %1272(%1271) /* ty=Tensor[(16, 256, 768), float16] */;
  %1274 = fn (%p040: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p130: Tensor[(16, 768, 3072), float16] /* ty=Tensor[(16, 768, 3072), float16] */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    nn.batch_matmul(%p040, %p130, out_dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 3072), float16]) -> Tensor[(16, 256, 3072), float16] */;
  %1275 = %1274(%1273, meta[relay.Constant][159] /* ty=Tensor[(16, 768, 3072), float16] */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %1276 = fn (%p039: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p129: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p214: float16 /* ty=float16 */, %p37: float16 /* ty=float16 */, %p47: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    %101 = reshape(%p039, newshape=[16, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %102 = squeeze(%101, axis=[]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %103 = add(%102, %p129) /* ty=Tensor[(16, 256, 3072), float16] */;
    %104 = multiply(%103, %p214) /* ty=Tensor[(16, 256, 3072), float16] */;
    %105 = fast_erf(%104) /* ty=Tensor[(16, 256, 3072), float16] */;
    %106 = multiply(%105, %p37) /* ty=Tensor[(16, 256, 3072), float16] */;
    %107 = add(%p47, %106) /* ty=Tensor[(16, 256, 3072), float16] */;
    %108 = multiply(%103, %107) /* ty=Tensor[(16, 256, 3072), float16] */;
    %109 = broadcast_to(%108, shape=[16, 256, 3072], dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */;
    reshape(%109, newshape=[-1, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(3072), float16], float16, float16, float16) -> Tensor[(16, 256, 3072), float16] */;
  %1277 = %1276(%1275, meta[relay.Constant][160] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %1278 = fn (%p038: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p128: Tensor[(16, 3072, 768), float16] /* ty=Tensor[(16, 3072, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p038, %p128, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(16, 3072, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1279 = %1278(%1277, meta[relay.Constant][161] /* ty=Tensor[(16, 3072, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1280 = fn (%p037: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p127: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p213: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %97 = reshape(%p037, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %98 = squeeze(%97, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %99 = add(%98, %p127) /* ty=Tensor[(16, 256, 768), float16] */;
    %100 = cast(%99, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%100, %p213) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1281 = %1280(%1279, meta[relay.Constant][162] /* ty=Tensor[(768), float16] */, %1271) /* ty=Tensor[(16, 256, 768), float32] */;
  %1282 = fn (%p0318: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0318, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1283 = %1282(%1281) /* ty=Tensor[(16, 256, 1), float32] */;
  %1284 = fn (%p0319: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1218: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0319, %p1218, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1285 = %1284(%1281, %1283) /* ty=Tensor[(16, 256, 1), float32] */;
  %1286 = fn (%p036: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p126: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p212: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p36: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p46: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %92 = add(%p212, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %93 = subtract(%p036, %p126) /* ty=Tensor[(16, 256, 768), float32] */;
    %94 = rsqrt(%92) /* ty=Tensor[(16, 256, 1), float32] */;
    %95 = multiply(%93, %94) /* ty=Tensor[(16, 256, 768), float32] */;
    %96 = multiply(%95, %p36) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%96, %p46) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1287 = %1286(%1281, %1283, %1285, meta[relay.Constant][163] /* ty=Tensor[(768), float32] */, meta[relay.Constant][164] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %1288 = fn (%p035: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %90 = broadcast_to(%p035, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %91 = reshape(%90, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%91, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1289 = %1288(%1287) /* ty=Tensor[(16, 256, 768), float16] */;
  %1290 = fn (%p034: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p125: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p034, %p125, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1291 = %1290(%1289, meta[relay.Constant][165] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1292 = fn (%p033: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p124: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %84 = reshape(%p033, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %85 = squeeze(%84, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %86 = add(%85, %p124) /* ty=Tensor[(16, 256, 768), float16] */;
    %87 = reshape(%86, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %88 = transpose(%87, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %89 = broadcast_to(%88, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%89, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1301 = fn (%p0322: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %1299 = broadcast_to(%p0322, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %1300 = reshape(%1299, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%1300, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1302 = %1301(%1287) /* ty=Tensor[(16, 256, 768), float16] */;
  %1303 = fn (%p0321: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1220: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0321, %p1220, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1304 = %1303(%1302, meta[relay.Constant][167] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1305 = fn (%p0320: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1219: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 64, 256), float16] {
    %1293 = reshape(%p0320, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1294 = squeeze(%1293, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1295 = add(%1294, %p1219) /* ty=Tensor[(16, 256, 768), float16] */;
    %1296 = reshape(%1295, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %1297 = transpose(%1296, axes=[0, 2, 3, 1]) /* ty=Tensor[(16, 12, 64, 256), float16] */;
    %1298 = broadcast_to(%1297, shape=[16, 12, 64, 256], dtype="float16") /* ty=Tensor[(16, 12, 64, 256), float16] */;
    reshape(%1298, newshape=[-1, 64, 256]) /* ty=Tensor[(192, 64, 256), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 64, 256), float16] */;
  %1306 = %1292(%1291, meta[relay.Constant][166] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %1307 = %1305(%1304, meta[relay.Constant][168] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 64, 256), float16] */;
  %1308 = fn (%p032: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, %p123: Tensor[(192, 64, 256), float16] /* ty=Tensor[(192, 64, 256), float16] */, Primitive=1) -> Tensor[(192, 256, 256), float16] {
    nn.batch_matmul(%p032, %p123, out_dtype="float16") /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16], Tensor[(192, 64, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %1309 = %1308(%1306, %1307) /* ty=Tensor[(192, 256, 256), float16] */;
  %1310 = fn (%p031: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p122: float16 /* ty=float16 */, %p211: Tensor[(16, 1, 1, 256), float16] /* ty=Tensor[(16, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %81 = reshape(%p031, newshape=[16, 12, 256, 256]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %82 = squeeze(%81, axis=[]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %83 = divide(%82, %p122) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    add(%83, %p211) /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], float16, Tensor[(16, 1, 1, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %1311 = %1310(%1309, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(16, 1, 1, 256), float16] */) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %1312 = fn (%p030: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %80 = nn.fast_softmax(%p030) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    broadcast_to(%80, shape=[16, 12, 256, 256], dtype="float16") /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %1313 = %1312(%1311) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %1314 = fn (%p029: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 256, 256), float16] {
    reshape(%p029, newshape=[-1, 256, 256]) /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %1323 = fn (%p0325: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %1321 = broadcast_to(%p0325, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %1322 = reshape(%1321, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%1322, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1324 = %1323(%1287) /* ty=Tensor[(16, 256, 768), float16] */;
  %1325 = fn (%p0324: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1222: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0324, %p1222, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1326 = %1325(%1324, meta[relay.Constant][169] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1327 = fn (%p0323: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1221: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %1315 = reshape(%p0323, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1316 = squeeze(%1315, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1317 = add(%1316, %p1221) /* ty=Tensor[(16, 256, 768), float16] */;
    %1318 = reshape(%1317, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %1319 = transpose(%1318, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %1320 = broadcast_to(%1319, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%1320, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1328 = %1314(%1313) /* ty=Tensor[(192, 256, 256), float16] */;
  %1329 = %1327(%1326, meta[relay.Constant][170] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %1330 = fn (%p028: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p121: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    nn.batch_matmul(%p028, %p121, out_dtype="float16") /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], Tensor[(192, 256, 64), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1331 = %1330(%1328, %1329) /* ty=Tensor[(192, 256, 64), float16] */;
  %1332 = fn (%p027: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %75 = reshape(%p027, newshape=[16, 12, 256, 64]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %76 = squeeze(%75, axis=[]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %77 = transpose(%76, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %78 = reshape(%77, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %79 = broadcast_to(%78, shape=[16, 256, 768], dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */;
    reshape(%79, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1333 = %1332(%1331) /* ty=Tensor[(16, 256, 768), float16] */;
  %1334 = fn (%p026: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p120: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p026, %p120, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1335 = %1334(%1333, meta[relay.Constant][171] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1336 = fn (%p025: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p119: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p210: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %71 = reshape(%p025, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %72 = squeeze(%71, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %73 = add(%72, %p119) /* ty=Tensor[(16, 256, 768), float16] */;
    %74 = cast(%73, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%74, %p210) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1337 = %1336(%1335, meta[relay.Constant][172] /* ty=Tensor[(768), float16] */, %1287) /* ty=Tensor[(16, 256, 768), float32] */;
  %1338 = fn (%p0326: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0326, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1339 = %1338(%1337) /* ty=Tensor[(16, 256, 1), float32] */;
  %1340 = fn (%p0327: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1223: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0327, %p1223, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1341 = %1340(%1337, %1339) /* ty=Tensor[(16, 256, 1), float32] */;
  %1342 = fn (%p024: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p118: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p29: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p35: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p45: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %66 = add(%p29, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %67 = subtract(%p024, %p118) /* ty=Tensor[(16, 256, 768), float32] */;
    %68 = rsqrt(%66) /* ty=Tensor[(16, 256, 1), float32] */;
    %69 = multiply(%67, %68) /* ty=Tensor[(16, 256, 768), float32] */;
    %70 = multiply(%69, %p35) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%70, %p45) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1343 = %1342(%1337, %1339, %1341, meta[relay.Constant][173] /* ty=Tensor[(768), float32] */, meta[relay.Constant][174] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %1344 = fn (%p023: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %64 = broadcast_to(%p023, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %65 = reshape(%64, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%65, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1345 = %1344(%1343) /* ty=Tensor[(16, 256, 768), float16] */;
  %1346 = fn (%p022: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p117: Tensor[(16, 768, 3072), float16] /* ty=Tensor[(16, 768, 3072), float16] */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    nn.batch_matmul(%p022, %p117, out_dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 3072), float16]) -> Tensor[(16, 256, 3072), float16] */;
  %1347 = %1346(%1345, meta[relay.Constant][175] /* ty=Tensor[(16, 768, 3072), float16] */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %1348 = fn (%p021: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p116: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p28: float16 /* ty=float16 */, %p34: float16 /* ty=float16 */, %p44: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    %55 = reshape(%p021, newshape=[16, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %56 = squeeze(%55, axis=[]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %57 = add(%56, %p116) /* ty=Tensor[(16, 256, 3072), float16] */;
    %58 = multiply(%57, %p28) /* ty=Tensor[(16, 256, 3072), float16] */;
    %59 = fast_erf(%58) /* ty=Tensor[(16, 256, 3072), float16] */;
    %60 = multiply(%59, %p34) /* ty=Tensor[(16, 256, 3072), float16] */;
    %61 = add(%p44, %60) /* ty=Tensor[(16, 256, 3072), float16] */;
    %62 = multiply(%57, %61) /* ty=Tensor[(16, 256, 3072), float16] */;
    %63 = broadcast_to(%62, shape=[16, 256, 3072], dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */;
    reshape(%63, newshape=[-1, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(3072), float16], float16, float16, float16) -> Tensor[(16, 256, 3072), float16] */;
  %1349 = %1348(%1347, meta[relay.Constant][176] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %1350 = fn (%p020: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p115: Tensor[(16, 3072, 768), float16] /* ty=Tensor[(16, 3072, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p020, %p115, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(16, 3072, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1351 = %1350(%1349, meta[relay.Constant][177] /* ty=Tensor[(16, 3072, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1352 = fn (%p019: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p114: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p27: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %51 = reshape(%p019, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %52 = squeeze(%51, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %53 = add(%52, %p114) /* ty=Tensor[(16, 256, 768), float16] */;
    %54 = cast(%53, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%54, %p27) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1353 = %1352(%1351, meta[relay.Constant][178] /* ty=Tensor[(768), float16] */, %1343) /* ty=Tensor[(16, 256, 768), float32] */;
  %1354 = fn (%p0328: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0328, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1355 = %1354(%1353) /* ty=Tensor[(16, 256, 1), float32] */;
  %1356 = fn (%p0329: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1224: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0329, %p1224, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1357 = %1356(%1353, %1355) /* ty=Tensor[(16, 256, 1), float32] */;
  %1358 = fn (%p018: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p113: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p26: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p33: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p43: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %46 = add(%p26, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %47 = subtract(%p018, %p113) /* ty=Tensor[(16, 256, 768), float32] */;
    %48 = rsqrt(%46) /* ty=Tensor[(16, 256, 1), float32] */;
    %49 = multiply(%47, %48) /* ty=Tensor[(16, 256, 768), float32] */;
    %50 = multiply(%49, %p33) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%50, %p43) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1359 = %1358(%1353, %1355, %1357, meta[relay.Constant][179] /* ty=Tensor[(768), float32] */, meta[relay.Constant][180] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %1360 = fn (%p017: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %44 = broadcast_to(%p017, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %45 = reshape(%44, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%45, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1361 = %1360(%1359) /* ty=Tensor[(16, 256, 768), float16] */;
  %1362 = fn (%p016: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p112: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p016, %p112, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1363 = %1362(%1361, meta[relay.Constant][181] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1364 = fn (%p015: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p111: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %38 = reshape(%p015, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %39 = squeeze(%38, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %40 = add(%39, %p111) /* ty=Tensor[(16, 256, 768), float16] */;
    %41 = reshape(%40, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %42 = transpose(%41, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %43 = broadcast_to(%42, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%43, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1373 = fn (%p0332: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %1371 = broadcast_to(%p0332, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %1372 = reshape(%1371, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%1372, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1374 = %1373(%1359) /* ty=Tensor[(16, 256, 768), float16] */;
  %1375 = fn (%p0331: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1226: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0331, %p1226, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1376 = %1375(%1374, meta[relay.Constant][183] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1377 = fn (%p0330: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1225: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 64, 256), float16] {
    %1365 = reshape(%p0330, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1366 = squeeze(%1365, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1367 = add(%1366, %p1225) /* ty=Tensor[(16, 256, 768), float16] */;
    %1368 = reshape(%1367, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %1369 = transpose(%1368, axes=[0, 2, 3, 1]) /* ty=Tensor[(16, 12, 64, 256), float16] */;
    %1370 = broadcast_to(%1369, shape=[16, 12, 64, 256], dtype="float16") /* ty=Tensor[(16, 12, 64, 256), float16] */;
    reshape(%1370, newshape=[-1, 64, 256]) /* ty=Tensor[(192, 64, 256), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 64, 256), float16] */;
  %1378 = %1364(%1363, meta[relay.Constant][182] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %1379 = %1377(%1376, meta[relay.Constant][184] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 64, 256), float16] */;
  %1380 = fn (%p014: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, %p110: Tensor[(192, 64, 256), float16] /* ty=Tensor[(192, 64, 256), float16] */, Primitive=1) -> Tensor[(192, 256, 256), float16] {
    nn.batch_matmul(%p014, %p110, out_dtype="float16") /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16], Tensor[(192, 64, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %1381 = %1380(%1378, %1379) /* ty=Tensor[(192, 256, 256), float16] */;
  %1382 = fn (%p013: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p19: float16 /* ty=float16 */, %p25: Tensor[(16, 1, 1, 256), float16] /* ty=Tensor[(16, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %35 = reshape(%p013, newshape=[16, 12, 256, 256]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %36 = squeeze(%35, axis=[]) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    %37 = divide(%36, %p19) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    add(%37, %p25) /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], float16, Tensor[(16, 1, 1, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %1383 = %1382(%1381, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(16, 1, 1, 256), float16] */) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %1384 = fn (%p012: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1) -> Tensor[(16, 12, 256, 256), float16] {
    %34 = nn.fast_softmax(%p012) /* ty=Tensor[(16, 12, 256, 256), float16] */;
    broadcast_to(%34, shape=[16, 12, 256, 256], dtype="float16") /* ty=Tensor[(16, 12, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(16, 12, 256, 256), float16] */;
  %1385 = %1384(%1383) /* ty=Tensor[(16, 12, 256, 256), float16] */;
  %1386 = fn (%p011: Tensor[(16, 12, 256, 256), float16] /* ty=Tensor[(16, 12, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 256, 256), float16] {
    reshape(%p011, newshape=[-1, 256, 256]) /* ty=Tensor[(192, 256, 256), float16] */
  } /* ty=fn (Tensor[(16, 12, 256, 256), float16]) -> Tensor[(192, 256, 256), float16] */;
  %1395 = fn (%p0335: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %1393 = broadcast_to(%p0335, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %1394 = reshape(%1393, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%1394, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1396 = %1395(%1359) /* ty=Tensor[(16, 256, 768), float16] */;
  %1397 = fn (%p0334: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1228: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p0334, %p1228, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1398 = %1397(%1396, meta[relay.Constant][185] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1399 = fn (%p0333: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p1227: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    %1387 = reshape(%p0333, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1388 = squeeze(%1387, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %1389 = add(%1388, %p1227) /* ty=Tensor[(16, 256, 768), float16] */;
    %1390 = reshape(%1389, newshape=[16, 256, 12, 64]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %1391 = transpose(%1390, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %1392 = broadcast_to(%1391, shape=[16, 12, 256, 64], dtype="float16") /* ty=Tensor[(16, 12, 256, 64), float16] */;
    reshape(%1392, newshape=[-1, 256, 64]) /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1400 = %1386(%1385) /* ty=Tensor[(192, 256, 256), float16] */;
  %1401 = %1399(%1398, meta[relay.Constant][186] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(192, 256, 64), float16] */;
  %1402 = fn (%p010: Tensor[(192, 256, 256), float16] /* ty=Tensor[(192, 256, 256), float16] */, %p18: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(192, 256, 64), float16] {
    nn.batch_matmul(%p010, %p18, out_dtype="float16") /* ty=Tensor[(192, 256, 64), float16] */
  } /* ty=fn (Tensor[(192, 256, 256), float16], Tensor[(192, 256, 64), float16]) -> Tensor[(192, 256, 64), float16] */;
  %1403 = %1402(%1400, %1401) /* ty=Tensor[(192, 256, 64), float16] */;
  %1404 = fn (%p09: Tensor[(192, 256, 64), float16] /* ty=Tensor[(192, 256, 64), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %29 = reshape(%p09, newshape=[16, 12, 256, 64]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %30 = squeeze(%29, axis=[]) /* ty=Tensor[(16, 12, 256, 64), float16] */;
    %31 = transpose(%30, axes=[0, 2, 1, 3]) /* ty=Tensor[(16, 256, 12, 64), float16] */;
    %32 = reshape(%31, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %33 = broadcast_to(%32, shape=[16, 256, 768], dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */;
    reshape(%33, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(192, 256, 64), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1405 = %1404(%1403) /* ty=Tensor[(16, 256, 768), float16] */;
  %1406 = fn (%p08: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p17: Tensor[(16, 768, 768), float16] /* ty=Tensor[(16, 768, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p08, %p17, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1407 = %1406(%1405, meta[relay.Constant][187] /* ty=Tensor[(16, 768, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1408 = fn (%p07: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p16: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p24: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %25 = reshape(%p07, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %26 = squeeze(%25, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %27 = add(%26, %p16) /* ty=Tensor[(16, 256, 768), float16] */;
    %28 = cast(%27, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%28, %p24) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1409 = %1408(%1407, meta[relay.Constant][188] /* ty=Tensor[(768), float16] */, %1359) /* ty=Tensor[(16, 256, 768), float32] */;
  %1410 = fn (%p0336: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0336, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1411 = %1410(%1409) /* ty=Tensor[(16, 256, 1), float32] */;
  %1412 = fn (%p0337: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1229: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0337, %p1229, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1413 = %1412(%1409, %1411) /* ty=Tensor[(16, 256, 1), float32] */;
  %1414 = fn (%p06: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p15: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p23: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p32: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p42: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %20 = add(%p23, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %21 = subtract(%p06, %p15) /* ty=Tensor[(16, 256, 768), float32] */;
    %22 = rsqrt(%20) /* ty=Tensor[(16, 256, 1), float32] */;
    %23 = multiply(%21, %22) /* ty=Tensor[(16, 256, 768), float32] */;
    %24 = multiply(%23, %p32) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%24, %p42) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1415 = %1414(%1409, %1411, %1413, meta[relay.Constant][189] /* ty=Tensor[(768), float32] */, meta[relay.Constant][190] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %1416 = fn (%p05: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    %18 = broadcast_to(%p05, shape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    %19 = reshape(%18, newshape=[-1, 256, 768]) /* ty=Tensor[(16, 256, 768), float32] */;
    cast(%19, dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float16] */;
  %1417 = %1416(%1415) /* ty=Tensor[(16, 256, 768), float16] */;
  %1418 = fn (%p04: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p14: Tensor[(16, 768, 3072), float16] /* ty=Tensor[(16, 768, 3072), float16] */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    nn.batch_matmul(%p04, %p14, out_dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(16, 768, 3072), float16]) -> Tensor[(16, 256, 3072), float16] */;
  %1419 = %1418(%1417, meta[relay.Constant][191] /* ty=Tensor[(16, 768, 3072), float16] */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %1420 = fn (%p03: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p13: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p22: float16 /* ty=float16 */, %p31: float16 /* ty=float16 */, %p41: float16 /* ty=float16 */, Primitive=1) -> Tensor[(16, 256, 3072), float16] {
    %9 = reshape(%p03, newshape=[16, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %10 = squeeze(%9, axis=[]) /* ty=Tensor[(16, 256, 3072), float16] */;
    %11 = add(%10, %p13) /* ty=Tensor[(16, 256, 3072), float16] */;
    %12 = multiply(%11, %p22) /* ty=Tensor[(16, 256, 3072), float16] */;
    %13 = fast_erf(%12) /* ty=Tensor[(16, 256, 3072), float16] */;
    %14 = multiply(%13, %p31) /* ty=Tensor[(16, 256, 3072), float16] */;
    %15 = add(%p41, %14) /* ty=Tensor[(16, 256, 3072), float16] */;
    %16 = multiply(%11, %15) /* ty=Tensor[(16, 256, 3072), float16] */;
    %17 = broadcast_to(%16, shape=[16, 256, 3072], dtype="float16") /* ty=Tensor[(16, 256, 3072), float16] */;
    reshape(%17, newshape=[-1, 256, 3072]) /* ty=Tensor[(16, 256, 3072), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(3072), float16], float16, float16, float16) -> Tensor[(16, 256, 3072), float16] */;
  %1421 = %1420(%1419, meta[relay.Constant][192] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(16, 256, 3072), float16] */;
  %1422 = fn (%p02: Tensor[(16, 256, 3072), float16] /* ty=Tensor[(16, 256, 3072), float16] */, %p12: Tensor[(16, 3072, 768), float16] /* ty=Tensor[(16, 3072, 768), float16] */, Primitive=1) -> Tensor[(16, 256, 768), float16] {
    nn.batch_matmul(%p02, %p12, out_dtype="float16") /* ty=Tensor[(16, 256, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 3072), float16], Tensor[(16, 3072, 768), float16]) -> Tensor[(16, 256, 768), float16] */;
  %1423 = %1422(%1421, meta[relay.Constant][193] /* ty=Tensor[(16, 3072, 768), float16] */) /* ty=Tensor[(16, 256, 768), float16] */;
  %1424 = fn (%p01: Tensor[(16, 256, 768), float16] /* ty=Tensor[(16, 256, 768), float16] */, %p11: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p21: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %5 = reshape(%p01, newshape=[16, 256, 768]) /* ty=Tensor[(16, 256, 768), float16] */;
    %6 = squeeze(%5, axis=[]) /* ty=Tensor[(16, 256, 768), float16] */;
    %7 = add(%6, %p11) /* ty=Tensor[(16, 256, 768), float16] */;
    %8 = cast(%7, dtype="float32") /* ty=Tensor[(16, 256, 768), float32] */;
    add(%8, %p21) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float16], Tensor[(768), float16], Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1425 = %1424(%1423, meta[relay.Constant][194] /* ty=Tensor[(768), float16] */, %1415) /* ty=Tensor[(16, 256, 768), float32] */;
  %1426 = fn (%p0338: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    mean(%p0338, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1427 = %1426(%1425) /* ty=Tensor[(16, 256, 1), float32] */;
  %1428 = fn (%p0339: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1230: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, Primitive=1) -> Tensor[(16, 256, 1), float32] {
    variance(%p0339, %p1230, axis=[-1], keepdims=True) /* ty=Tensor[(16, 256, 1), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32]) -> Tensor[(16, 256, 1), float32] */;
  %1429 = %1428(%1425, %1427) /* ty=Tensor[(16, 256, 1), float32] */;
  %1430 = fn (%p0: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, %p1: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p2: Tensor[(16, 256, 1), float32] /* ty=Tensor[(16, 256, 1), float32] */, %p3: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p4: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(16, 256, 768), float32] {
    %0 = add(%p2, 1e-12f /* ty=float32 */) /* ty=Tensor[(16, 256, 1), float32] */;
    %1 = subtract(%p0, %p1) /* ty=Tensor[(16, 256, 768), float32] */;
    %2 = rsqrt(%0) /* ty=Tensor[(16, 256, 1), float32] */;
    %3 = multiply(%1, %2) /* ty=Tensor[(16, 256, 768), float32] */;
    %4 = multiply(%3, %p3) /* ty=Tensor[(16, 256, 768), float32] */;
    add(%4, %p4) /* ty=Tensor[(16, 256, 768), float32] */
  } /* ty=fn (Tensor[(16, 256, 768), float32], Tensor[(16, 256, 1), float32], Tensor[(16, 256, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(16, 256, 768), float32] */;
  %1434 = %1430(%1425, %1427, %1429, meta[relay.Constant][195] /* ty=Tensor[(768), float32] */, meta[relay.Constant][196] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(16, 256, 768), float32] */;
  %1435 = fn (%p0341: Tensor[(16, 256, 768), float32] /* ty=Tensor[(16, 256, 768), float32] */, Primitive=1) -> Tensor[(16, 768), float16] {
    %1433 = take(%p0341, 0 /* ty=int32 span=aten::select_0:0:0 */, axis=1, mode="wrap") /* ty=Tensor[(16, 768), float32] */;
    cast(%1433, dtype="float16") /* ty=Tensor[(16, 768), float16] */
  } /* ty=fn (Tensor[(16, 256, 768), float32]) -> Tensor[(16, 768), float16] */;
  %1436 = %1435(%1434) /* ty=Tensor[(16, 768), float16] */;
  %1437 = fn (%p0340: Tensor[(16, 768), float16] /* ty=Tensor[(16, 768), float16] */, %p1231: Tensor[(768, 768), float16] /* ty=Tensor[(768, 768), float16] */, %p274: Tensor[(1, 768), float16] /* ty=Tensor[(1, 768), float16] */, Primitive=1) -> Tensor[(16, 768), float16] {
    %1431 = nn.dense(%p0340, %p1231, units=None, out_dtype="float16") /* ty=Tensor[(16, 768), float16] */;
    %1432 = add(%1431, %p274) /* ty=Tensor[(16, 768), float16] */;
    fast_tanh(%1432) /* ty=Tensor[(16, 768), float16] */
  } /* ty=fn (Tensor[(16, 768), float16], Tensor[(768, 768), float16], Tensor[(1, 768), float16]) -> Tensor[(16, 768), float16] */;
  %1438 = %1437(%1436, meta[relay.Constant][197] /* ty=Tensor[(768, 768), float16] */, meta[relay.Constant][198] /* ty=Tensor[(1, 768), float16] */) /* ty=Tensor[(16, 768), float16] */;
  (%1434, %1438) /* ty=(Tensor[(16, 256, 768), float32], Tensor[(16, 768), float16]) */
}


