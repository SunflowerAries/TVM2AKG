type List[A] {
  Cons(A, List[A]),
  Nil,
}

type Option[A] {
  Some(A),
  None,
}

type Tree[A] {
  Rose(A, List[Tree[A]]),
}

type tensor_float16_t {
  tensor_nil_float16,
  tensor0_float16(float16),
  tensor1_float16(Tensor[(?), float16]),
  tensor2_float16(Tensor[(?, ?), float16]),
  tensor3_float16(Tensor[(?, ?, ?), float16]),
  tensor4_float16(Tensor[(?, ?, ?, ?), float16]),
  tensor5_float16(Tensor[(?, ?, ?, ?, ?), float16]),
  tensor6_float16(Tensor[(?, ?, ?, ?, ?, ?), float16]),
}

type tensor_float32_t {
  tensor_nil_float32,
  tensor0_float32(float32),
  tensor1_float32(Tensor[(?), float32]),
  tensor2_float32(Tensor[(?, ?), float32]),
  tensor3_float32(Tensor[(?, ?, ?), float32]),
  tensor4_float32(Tensor[(?, ?, ?, ?), float32]),
  tensor5_float32(Tensor[(?, ?, ?, ?, ?), float32]),
  tensor6_float32(Tensor[(?, ?, ?, ?, ?, ?), float32]),
}

type tensor_float64_t {
  tensor_nil_float64,
  tensor0_float64(float64),
  tensor1_float64(Tensor[(?), float64]),
  tensor2_float64(Tensor[(?, ?), float64]),
  tensor3_float64(Tensor[(?, ?, ?), float64]),
  tensor4_float64(Tensor[(?, ?, ?, ?), float64]),
  tensor5_float64(Tensor[(?, ?, ?, ?, ?), float64]),
  tensor6_float64(Tensor[(?, ?, ?, ?, ?, ?), float64]),
}

type tensor_int16_t {
  tensor_nil_int16,
  tensor0_int16(int16),
  tensor1_int16(Tensor[(?), int16]),
  tensor2_int16(Tensor[(?, ?), int16]),
  tensor3_int16(Tensor[(?, ?, ?), int16]),
  tensor4_int16(Tensor[(?, ?, ?, ?), int16]),
  tensor5_int16(Tensor[(?, ?, ?, ?, ?), int16]),
  tensor6_int16(Tensor[(?, ?, ?, ?, ?, ?), int16]),
}

type tensor_int32_t {
  tensor_nil_int32,
  tensor0_int32(int32),
  tensor1_int32(Tensor[(?), int32]),
  tensor2_int32(Tensor[(?, ?), int32]),
  tensor3_int32(Tensor[(?, ?, ?), int32]),
  tensor4_int32(Tensor[(?, ?, ?, ?), int32]),
  tensor5_int32(Tensor[(?, ?, ?, ?, ?), int32]),
  tensor6_int32(Tensor[(?, ?, ?, ?, ?, ?), int32]),
}

type tensor_int64_t {
  tensor_nil_int64,
  tensor0_int64(int64),
  tensor1_int64(Tensor[(?), int64]),
  tensor2_int64(Tensor[(?, ?), int64]),
  tensor3_int64(Tensor[(?, ?, ?), int64]),
  tensor4_int64(Tensor[(?, ?, ?, ?), int64]),
  tensor5_int64(Tensor[(?, ?, ?, ?, ?), int64]),
  tensor6_int64(Tensor[(?, ?, ?, ?, ?, ?), int64]),
}

type tensor_int8_t {
  tensor_nil_int8,
  tensor0_int8(int8),
  tensor1_int8(Tensor[(?), int8]),
  tensor2_int8(Tensor[(?, ?), int8]),
  tensor3_int8(Tensor[(?, ?, ?), int8]),
  tensor4_int8(Tensor[(?, ?, ?, ?), int8]),
  tensor5_int8(Tensor[(?, ?, ?, ?, ?), int8]),
  tensor6_int8(Tensor[(?, ?, ?, ?, ?, ?), int8]),
}

type tensor_uint16_t {
  tensor_nil_uint16,
  tensor0_uint16(uint16),
  tensor1_uint16(Tensor[(?), uint16]),
  tensor2_uint16(Tensor[(?, ?), uint16]),
  tensor3_uint16(Tensor[(?, ?, ?), uint16]),
  tensor4_uint16(Tensor[(?, ?, ?, ?), uint16]),
  tensor5_uint16(Tensor[(?, ?, ?, ?, ?), uint16]),
  tensor6_uint16(Tensor[(?, ?, ?, ?, ?, ?), uint16]),
}

type tensor_uint8_t {
  tensor_nil_uint8,
  tensor0_uint8(uint8),
  tensor1_uint8(Tensor[(?), uint8]),
  tensor2_uint8(Tensor[(?, ?), uint8]),
  tensor3_uint8(Tensor[(?, ?, ?), uint8]),
  tensor4_uint8(Tensor[(?, ?, ?, ?), uint8]),
  tensor5_uint8(Tensor[(?, ?, ?, ?, ?), uint8]),
  tensor6_uint8(Tensor[(?, ?, ?, ?, ?, ?), uint8]),
}

def @main(%input_ids: Tensor[(32, 256), int64] /* ty=Tensor[(32, 256), int64] span=aten::size_0.input_ids:0:0 */) -> (Tensor[(32, 256, 1024), float32], Tensor[(32, 1024), float16]) {
  %1112 = fn (%p0433: Tensor[(32, 256), int64] /* ty=Tensor[(32, 256), int64] */, %p1313: Tensor[(30522, 1024), float16] /* ty=Tensor[(30522, 1024), float16] */, %p2145: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %1109 = cast(%p0433, dtype="int32") /* ty=Tensor[(32, 256), int32] */;
    %1110 = take(%p1313, %1109, axis=0) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1111 = add(%1110, %p2145) /* ty=Tensor[(32, 256, 1024), float16] */;
    cast(%1111, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256), int64], Tensor[(30522, 1024), float16], Tensor[(32, 256, 1024), float16]) -> Tensor[(32, 256, 1024), float32] */;
  %1113 = %1112(%input_ids, meta[relay.Constant][0] /* ty=Tensor[(30522, 1024), float16] */, meta[relay.Constant][1] /* ty=Tensor[(32, 256, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1114 = fn (%p0434: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0434, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1115 = %1114(%1113) /* ty=Tensor[(32, 256, 1), float32] */;
  %1116 = fn (%p0435: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1314: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0435, %p1314, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1117 = %1116(%1113, %1115) /* ty=Tensor[(32, 256, 1), float32] */;
  %1118 = fn (%p0432: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1312: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2144: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p372: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p472: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %1104 = add(%p2144, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %1105 = subtract(%p0432, %p1312) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1106 = rsqrt(%1104) /* ty=Tensor[(32, 256, 1), float32] */;
    %1107 = multiply(%1105, %1106) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1108 = multiply(%1107, %p372) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%1108, %p472) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1119 = %1118(%1113, %1115, %1117, meta[relay.Constant][2] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][3] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1120 = fn (%p0431: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1102 = broadcast_to(%p0431, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1103 = reshape(%1102, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1103, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1121 = %1120(%1119) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1122 = fn (%p0430: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1311: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0430, %p1311, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1123 = %1122(%1121, meta[relay.Constant][4] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1124 = fn (%p0429: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1310: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1096 = reshape(%p0429, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1097 = squeeze(%1096, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1098 = add(%1097, %p1310) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1099 = reshape(%1098, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1100 = transpose(%1099, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1101 = broadcast_to(%1100, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1101, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1133 = fn (%p0438: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1131 = broadcast_to(%p0438, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1132 = reshape(%1131, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1132, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1134 = %1133(%1119) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1135 = fn (%p0437: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1316: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0437, %p1316, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1136 = %1135(%1134, meta[relay.Constant][6] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1137 = fn (%p0436: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1315: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %1125 = reshape(%p0436, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1126 = squeeze(%1125, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1127 = add(%1126, %p1315) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1128 = reshape(%1127, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1129 = transpose(%1128, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %1130 = broadcast_to(%1129, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%1130, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %1138 = %1124(%1123, meta[relay.Constant][5] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1139 = %1137(%1136, meta[relay.Constant][7] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %1140 = fn (%p0428: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1309: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0428, %p1309, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1141 = %1140(%1138, %1139) /* ty=Tensor[(512, 256, 256), float16] */;
  %1142 = fn (%p0427: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1308: float16 /* ty=float16 */, %p2143: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %1093 = reshape(%p0427, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %1094 = squeeze(%1093, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %1095 = divide(%1094, %p1308) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%1095, %p2143) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1143 = %1142(%1141, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1144 = fn (%p0426: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %1092 = nn.fast_softmax(%p0426) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%1092, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1145 = %1144(%1143) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1146 = fn (%p0425: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0425, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1155 = fn (%p0441: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1153 = broadcast_to(%p0441, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1154 = reshape(%1153, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1154, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1156 = %1155(%1119) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1157 = fn (%p0440: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1318: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0440, %p1318, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1158 = %1157(%1156, meta[relay.Constant][9] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1159 = fn (%p0439: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1317: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1147 = reshape(%p0439, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1148 = squeeze(%1147, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1149 = add(%1148, %p1317) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1150 = reshape(%1149, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1151 = transpose(%1150, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1152 = broadcast_to(%1151, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1152, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1160 = %1146(%1145) /* ty=Tensor[(512, 256, 256), float16] */;
  %1161 = %1159(%1158, meta[relay.Constant][10] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1162 = fn (%p0424: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1307: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0424, %p1307, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1163 = %1162(%1160, %1161) /* ty=Tensor[(512, 256, 64), float16] */;
  %1164 = fn (%p0423: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1087 = reshape(%p0423, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1088 = squeeze(%1087, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1089 = transpose(%1088, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1090 = reshape(%1089, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1091 = broadcast_to(%1090, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%1091, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1165 = %1164(%1163) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1166 = fn (%p0422: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1306: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0422, %p1306, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1167 = %1166(%1165, meta[relay.Constant][11] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1168 = fn (%p0421: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1305: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2142: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %1083 = reshape(%p0421, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1084 = squeeze(%1083, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1085 = add(%1084, %p1305) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1086 = cast(%1085, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%1086, %p2142) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1169 = %1168(%1167, meta[relay.Constant][12] /* ty=Tensor[(1024), float16] */, %1119) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1170 = fn (%p0442: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0442, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1171 = %1170(%1169) /* ty=Tensor[(32, 256, 1), float32] */;
  %1172 = fn (%p0443: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1319: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0443, %p1319, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1173 = %1172(%1169, %1171) /* ty=Tensor[(32, 256, 1), float32] */;
  %1174 = fn (%p0420: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1304: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2141: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p371: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p471: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %1078 = add(%p2141, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %1079 = subtract(%p0420, %p1304) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1080 = rsqrt(%1078) /* ty=Tensor[(32, 256, 1), float32] */;
    %1081 = multiply(%1079, %1080) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1082 = multiply(%1081, %p371) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%1082, %p471) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1175 = %1174(%1169, %1171, %1173, meta[relay.Constant][13] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][14] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1176 = fn (%p0419: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1076 = broadcast_to(%p0419, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1077 = reshape(%1076, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1077, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1177 = %1176(%1175) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1178 = fn (%p0418: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1303: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0418, %p1303, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %1179 = %1178(%1177, meta[relay.Constant][15] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1180 = fn (%p0417: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1302: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p2140: float16 /* ty=float16 */, %p370: float16 /* ty=float16 */, %p470: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %1067 = reshape(%p0417, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1068 = squeeze(%1067, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1069 = add(%1068, %p1302) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1070 = multiply(%1069, %p2140) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1071 = fast_erf(%1070) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1072 = multiply(%1071, %p370) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1073 = add(%p470, %1072) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1074 = multiply(%1069, %1073) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1075 = broadcast_to(%1074, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%1075, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %1181 = %1180(%1179, meta[relay.Constant][16] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1182 = fn (%p0416: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1301: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0416, %p1301, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1183 = %1182(%1181, meta[relay.Constant][17] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1184 = fn (%p0415: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1300: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2139: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %1063 = reshape(%p0415, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1064 = squeeze(%1063, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1065 = add(%1064, %p1300) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1066 = cast(%1065, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%1066, %p2139) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1185 = %1184(%1183, meta[relay.Constant][18] /* ty=Tensor[(1024), float16] */, %1175) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1186 = fn (%p0444: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0444, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1187 = %1186(%1185) /* ty=Tensor[(32, 256, 1), float32] */;
  %1188 = fn (%p0445: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1320: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0445, %p1320, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1189 = %1188(%1185, %1187) /* ty=Tensor[(32, 256, 1), float32] */;
  %1190 = fn (%p0414: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1299: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2138: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p369: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p469: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %1058 = add(%p2138, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %1059 = subtract(%p0414, %p1299) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1060 = rsqrt(%1058) /* ty=Tensor[(32, 256, 1), float32] */;
    %1061 = multiply(%1059, %1060) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1062 = multiply(%1061, %p369) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%1062, %p469) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1191 = %1190(%1185, %1187, %1189, meta[relay.Constant][19] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][20] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1192 = fn (%p0413: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1056 = broadcast_to(%p0413, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1057 = reshape(%1056, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1057, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1193 = %1192(%1191) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1194 = fn (%p0412: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1298: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0412, %p1298, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1195 = %1194(%1193, meta[relay.Constant][21] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1196 = fn (%p0411: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1297: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1050 = reshape(%p0411, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1051 = squeeze(%1050, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1052 = add(%1051, %p1297) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1053 = reshape(%1052, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1054 = transpose(%1053, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1055 = broadcast_to(%1054, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1055, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1205 = fn (%p0448: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1203 = broadcast_to(%p0448, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1204 = reshape(%1203, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1204, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1206 = %1205(%1191) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1207 = fn (%p0447: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1322: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0447, %p1322, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1208 = %1207(%1206, meta[relay.Constant][23] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1209 = fn (%p0446: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1321: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %1197 = reshape(%p0446, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1198 = squeeze(%1197, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1199 = add(%1198, %p1321) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1200 = reshape(%1199, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1201 = transpose(%1200, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %1202 = broadcast_to(%1201, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%1202, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %1210 = %1196(%1195, meta[relay.Constant][22] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1211 = %1209(%1208, meta[relay.Constant][24] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %1212 = fn (%p0410: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1296: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0410, %p1296, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1213 = %1212(%1210, %1211) /* ty=Tensor[(512, 256, 256), float16] */;
  %1214 = fn (%p0409: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1295: float16 /* ty=float16 */, %p2137: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %1047 = reshape(%p0409, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %1048 = squeeze(%1047, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %1049 = divide(%1048, %p1295) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%1049, %p2137) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1215 = %1214(%1213, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1216 = fn (%p0408: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %1046 = nn.fast_softmax(%p0408) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%1046, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1217 = %1216(%1215) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1218 = fn (%p0407: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0407, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1227 = fn (%p0451: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1225 = broadcast_to(%p0451, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1226 = reshape(%1225, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1226, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1228 = %1227(%1191) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1229 = fn (%p0450: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1324: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0450, %p1324, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1230 = %1229(%1228, meta[relay.Constant][25] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1231 = fn (%p0449: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1323: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1219 = reshape(%p0449, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1220 = squeeze(%1219, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1221 = add(%1220, %p1323) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1222 = reshape(%1221, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1223 = transpose(%1222, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1224 = broadcast_to(%1223, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1224, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1232 = %1218(%1217) /* ty=Tensor[(512, 256, 256), float16] */;
  %1233 = %1231(%1230, meta[relay.Constant][26] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1234 = fn (%p0406: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1294: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0406, %p1294, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1235 = %1234(%1232, %1233) /* ty=Tensor[(512, 256, 64), float16] */;
  %1236 = fn (%p0405: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1041 = reshape(%p0405, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1042 = squeeze(%1041, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1043 = transpose(%1042, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1044 = reshape(%1043, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1045 = broadcast_to(%1044, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%1045, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1237 = %1236(%1235) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1238 = fn (%p0404: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1293: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0404, %p1293, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1239 = %1238(%1237, meta[relay.Constant][27] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1240 = fn (%p0403: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1292: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2136: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %1037 = reshape(%p0403, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1038 = squeeze(%1037, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1039 = add(%1038, %p1292) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1040 = cast(%1039, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%1040, %p2136) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1241 = %1240(%1239, meta[relay.Constant][28] /* ty=Tensor[(1024), float16] */, %1191) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1242 = fn (%p0452: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0452, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1243 = %1242(%1241) /* ty=Tensor[(32, 256, 1), float32] */;
  %1244 = fn (%p0453: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1325: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0453, %p1325, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1245 = %1244(%1241, %1243) /* ty=Tensor[(32, 256, 1), float32] */;
  %1246 = fn (%p0402: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1291: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2135: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p368: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p468: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %1032 = add(%p2135, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %1033 = subtract(%p0402, %p1291) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1034 = rsqrt(%1032) /* ty=Tensor[(32, 256, 1), float32] */;
    %1035 = multiply(%1033, %1034) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1036 = multiply(%1035, %p368) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%1036, %p468) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1247 = %1246(%1241, %1243, %1245, meta[relay.Constant][29] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][30] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1248 = fn (%p0401: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1030 = broadcast_to(%p0401, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1031 = reshape(%1030, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1031, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1249 = %1248(%1247) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1250 = fn (%p0400: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1290: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0400, %p1290, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %1251 = %1250(%1249, meta[relay.Constant][31] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1252 = fn (%p0399: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1289: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p2134: float16 /* ty=float16 */, %p367: float16 /* ty=float16 */, %p467: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %1021 = reshape(%p0399, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1022 = squeeze(%1021, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1023 = add(%1022, %p1289) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1024 = multiply(%1023, %p2134) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1025 = fast_erf(%1024) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1026 = multiply(%1025, %p367) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1027 = add(%p467, %1026) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1028 = multiply(%1023, %1027) /* ty=Tensor[(32, 256, 4096), float16] */;
    %1029 = broadcast_to(%1028, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%1029, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %1253 = %1252(%1251, meta[relay.Constant][32] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1254 = fn (%p0398: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1288: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0398, %p1288, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1255 = %1254(%1253, meta[relay.Constant][33] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1256 = fn (%p0397: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1287: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2133: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %1017 = reshape(%p0397, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1018 = squeeze(%1017, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1019 = add(%1018, %p1287) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1020 = cast(%1019, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%1020, %p2133) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1257 = %1256(%1255, meta[relay.Constant][34] /* ty=Tensor[(1024), float16] */, %1247) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1258 = fn (%p0454: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0454, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1259 = %1258(%1257) /* ty=Tensor[(32, 256, 1), float32] */;
  %1260 = fn (%p0455: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1326: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0455, %p1326, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1261 = %1260(%1257, %1259) /* ty=Tensor[(32, 256, 1), float32] */;
  %1262 = fn (%p0396: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1286: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2132: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p366: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p466: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %1012 = add(%p2132, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %1013 = subtract(%p0396, %p1286) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1014 = rsqrt(%1012) /* ty=Tensor[(32, 256, 1), float32] */;
    %1015 = multiply(%1013, %1014) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1016 = multiply(%1015, %p366) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%1016, %p466) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1263 = %1262(%1257, %1259, %1261, meta[relay.Constant][35] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][36] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1264 = fn (%p0395: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1010 = broadcast_to(%p0395, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1011 = reshape(%1010, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1011, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1265 = %1264(%1263) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1266 = fn (%p0394: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1285: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0394, %p1285, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1267 = %1266(%1265, meta[relay.Constant][37] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1268 = fn (%p0393: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1284: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1004 = reshape(%p0393, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1005 = squeeze(%1004, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1006 = add(%1005, %p1284) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1007 = reshape(%1006, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1008 = transpose(%1007, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1009 = broadcast_to(%1008, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1009, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1277 = fn (%p0458: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1275 = broadcast_to(%p0458, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1276 = reshape(%1275, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1276, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1278 = %1277(%1263) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1279 = fn (%p0457: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1328: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0457, %p1328, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1280 = %1279(%1278, meta[relay.Constant][39] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1281 = fn (%p0456: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1327: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %1269 = reshape(%p0456, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1270 = squeeze(%1269, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1271 = add(%1270, %p1327) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1272 = reshape(%1271, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1273 = transpose(%1272, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %1274 = broadcast_to(%1273, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%1274, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %1282 = %1268(%1267, meta[relay.Constant][38] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1283 = %1281(%1280, meta[relay.Constant][40] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %1284 = fn (%p0392: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1283: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0392, %p1283, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1285 = %1284(%1282, %1283) /* ty=Tensor[(512, 256, 256), float16] */;
  %1286 = fn (%p0391: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1282: float16 /* ty=float16 */, %p2131: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %1001 = reshape(%p0391, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %1002 = squeeze(%1001, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %1003 = divide(%1002, %p1282) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%1003, %p2131) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1287 = %1286(%1285, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1288 = fn (%p0390: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %1000 = nn.fast_softmax(%p0390) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%1000, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1289 = %1288(%1287) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1290 = fn (%p0389: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0389, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1299 = fn (%p0461: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1297 = broadcast_to(%p0461, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1298 = reshape(%1297, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1298, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1300 = %1299(%1263) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1301 = fn (%p0460: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1330: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0460, %p1330, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1302 = %1301(%1300, meta[relay.Constant][41] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1303 = fn (%p0459: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1329: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1291 = reshape(%p0459, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1292 = squeeze(%1291, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1293 = add(%1292, %p1329) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1294 = reshape(%1293, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1295 = transpose(%1294, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1296 = broadcast_to(%1295, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1296, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1304 = %1290(%1289) /* ty=Tensor[(512, 256, 256), float16] */;
  %1305 = %1303(%1302, meta[relay.Constant][42] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1306 = fn (%p0388: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1281: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0388, %p1281, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1307 = %1306(%1304, %1305) /* ty=Tensor[(512, 256, 64), float16] */;
  %1308 = fn (%p0387: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %995 = reshape(%p0387, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %996 = squeeze(%995, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %997 = transpose(%996, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %998 = reshape(%997, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %999 = broadcast_to(%998, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%999, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1309 = %1308(%1307) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1310 = fn (%p0386: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1280: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0386, %p1280, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1311 = %1310(%1309, meta[relay.Constant][43] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1312 = fn (%p0385: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1279: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2130: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %991 = reshape(%p0385, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %992 = squeeze(%991, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %993 = add(%992, %p1279) /* ty=Tensor[(32, 256, 1024), float16] */;
    %994 = cast(%993, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%994, %p2130) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1313 = %1312(%1311, meta[relay.Constant][44] /* ty=Tensor[(1024), float16] */, %1263) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1314 = fn (%p0462: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0462, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1315 = %1314(%1313) /* ty=Tensor[(32, 256, 1), float32] */;
  %1316 = fn (%p0463: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1331: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0463, %p1331, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1317 = %1316(%1313, %1315) /* ty=Tensor[(32, 256, 1), float32] */;
  %1318 = fn (%p0384: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1278: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2129: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p365: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p465: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %986 = add(%p2129, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %987 = subtract(%p0384, %p1278) /* ty=Tensor[(32, 256, 1024), float32] */;
    %988 = rsqrt(%986) /* ty=Tensor[(32, 256, 1), float32] */;
    %989 = multiply(%987, %988) /* ty=Tensor[(32, 256, 1024), float32] */;
    %990 = multiply(%989, %p365) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%990, %p465) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1319 = %1318(%1313, %1315, %1317, meta[relay.Constant][45] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][46] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1320 = fn (%p0383: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %984 = broadcast_to(%p0383, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %985 = reshape(%984, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%985, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1321 = %1320(%1319) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1322 = fn (%p0382: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1277: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0382, %p1277, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %1323 = %1322(%1321, meta[relay.Constant][47] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1324 = fn (%p0381: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1276: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p2128: float16 /* ty=float16 */, %p364: float16 /* ty=float16 */, %p464: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %975 = reshape(%p0381, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %976 = squeeze(%975, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %977 = add(%976, %p1276) /* ty=Tensor[(32, 256, 4096), float16] */;
    %978 = multiply(%977, %p2128) /* ty=Tensor[(32, 256, 4096), float16] */;
    %979 = fast_erf(%978) /* ty=Tensor[(32, 256, 4096), float16] */;
    %980 = multiply(%979, %p364) /* ty=Tensor[(32, 256, 4096), float16] */;
    %981 = add(%p464, %980) /* ty=Tensor[(32, 256, 4096), float16] */;
    %982 = multiply(%977, %981) /* ty=Tensor[(32, 256, 4096), float16] */;
    %983 = broadcast_to(%982, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%983, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %1325 = %1324(%1323, meta[relay.Constant][48] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1326 = fn (%p0380: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1275: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0380, %p1275, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1327 = %1326(%1325, meta[relay.Constant][49] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1328 = fn (%p0379: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1274: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2127: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %971 = reshape(%p0379, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %972 = squeeze(%971, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %973 = add(%972, %p1274) /* ty=Tensor[(32, 256, 1024), float16] */;
    %974 = cast(%973, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%974, %p2127) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1329 = %1328(%1327, meta[relay.Constant][50] /* ty=Tensor[(1024), float16] */, %1319) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1330 = fn (%p0464: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0464, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1331 = %1330(%1329) /* ty=Tensor[(32, 256, 1), float32] */;
  %1332 = fn (%p0465: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1332: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0465, %p1332, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1333 = %1332(%1329, %1331) /* ty=Tensor[(32, 256, 1), float32] */;
  %1334 = fn (%p0378: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1273: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2126: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p363: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p463: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %966 = add(%p2126, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %967 = subtract(%p0378, %p1273) /* ty=Tensor[(32, 256, 1024), float32] */;
    %968 = rsqrt(%966) /* ty=Tensor[(32, 256, 1), float32] */;
    %969 = multiply(%967, %968) /* ty=Tensor[(32, 256, 1024), float32] */;
    %970 = multiply(%969, %p363) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%970, %p463) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1335 = %1334(%1329, %1331, %1333, meta[relay.Constant][51] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][52] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1336 = fn (%p0377: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %964 = broadcast_to(%p0377, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %965 = reshape(%964, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%965, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1337 = %1336(%1335) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1338 = fn (%p0376: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1272: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0376, %p1272, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1339 = %1338(%1337, meta[relay.Constant][53] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1340 = fn (%p0375: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1271: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %958 = reshape(%p0375, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %959 = squeeze(%958, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %960 = add(%959, %p1271) /* ty=Tensor[(32, 256, 1024), float16] */;
    %961 = reshape(%960, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %962 = transpose(%961, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %963 = broadcast_to(%962, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%963, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1349 = fn (%p0468: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1347 = broadcast_to(%p0468, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1348 = reshape(%1347, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1348, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1350 = %1349(%1335) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1351 = fn (%p0467: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1334: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0467, %p1334, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1352 = %1351(%1350, meta[relay.Constant][55] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1353 = fn (%p0466: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1333: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %1341 = reshape(%p0466, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1342 = squeeze(%1341, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1343 = add(%1342, %p1333) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1344 = reshape(%1343, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1345 = transpose(%1344, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %1346 = broadcast_to(%1345, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%1346, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %1354 = %1340(%1339, meta[relay.Constant][54] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1355 = %1353(%1352, meta[relay.Constant][56] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %1356 = fn (%p0374: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1270: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0374, %p1270, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1357 = %1356(%1354, %1355) /* ty=Tensor[(512, 256, 256), float16] */;
  %1358 = fn (%p0373: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1269: float16 /* ty=float16 */, %p2125: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %955 = reshape(%p0373, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %956 = squeeze(%955, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %957 = divide(%956, %p1269) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%957, %p2125) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1359 = %1358(%1357, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1360 = fn (%p0372: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %954 = nn.fast_softmax(%p0372) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%954, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1361 = %1360(%1359) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1362 = fn (%p0371: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0371, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1371 = fn (%p0471: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1369 = broadcast_to(%p0471, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1370 = reshape(%1369, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1370, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1372 = %1371(%1335) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1373 = fn (%p0470: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1336: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0470, %p1336, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1374 = %1373(%1372, meta[relay.Constant][57] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1375 = fn (%p0469: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1335: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1363 = reshape(%p0469, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1364 = squeeze(%1363, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1365 = add(%1364, %p1335) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1366 = reshape(%1365, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1367 = transpose(%1366, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1368 = broadcast_to(%1367, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1368, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1376 = %1362(%1361) /* ty=Tensor[(512, 256, 256), float16] */;
  %1377 = %1375(%1374, meta[relay.Constant][58] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1378 = fn (%p0370: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1268: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0370, %p1268, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1379 = %1378(%1376, %1377) /* ty=Tensor[(512, 256, 64), float16] */;
  %1380 = fn (%p0369: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %949 = reshape(%p0369, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %950 = squeeze(%949, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %951 = transpose(%950, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %952 = reshape(%951, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %953 = broadcast_to(%952, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%953, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1381 = %1380(%1379) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1382 = fn (%p0368: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1267: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0368, %p1267, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1383 = %1382(%1381, meta[relay.Constant][59] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1384 = fn (%p0367: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1266: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2124: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %945 = reshape(%p0367, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %946 = squeeze(%945, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %947 = add(%946, %p1266) /* ty=Tensor[(32, 256, 1024), float16] */;
    %948 = cast(%947, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%948, %p2124) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1385 = %1384(%1383, meta[relay.Constant][60] /* ty=Tensor[(1024), float16] */, %1335) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1386 = fn (%p0472: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0472, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1387 = %1386(%1385) /* ty=Tensor[(32, 256, 1), float32] */;
  %1388 = fn (%p0473: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1337: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0473, %p1337, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1389 = %1388(%1385, %1387) /* ty=Tensor[(32, 256, 1), float32] */;
  %1390 = fn (%p0366: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1265: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2123: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p362: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p462: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %940 = add(%p2123, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %941 = subtract(%p0366, %p1265) /* ty=Tensor[(32, 256, 1024), float32] */;
    %942 = rsqrt(%940) /* ty=Tensor[(32, 256, 1), float32] */;
    %943 = multiply(%941, %942) /* ty=Tensor[(32, 256, 1024), float32] */;
    %944 = multiply(%943, %p362) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%944, %p462) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1391 = %1390(%1385, %1387, %1389, meta[relay.Constant][61] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][62] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1392 = fn (%p0365: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %938 = broadcast_to(%p0365, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %939 = reshape(%938, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%939, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1393 = %1392(%1391) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1394 = fn (%p0364: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1264: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0364, %p1264, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %1395 = %1394(%1393, meta[relay.Constant][63] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1396 = fn (%p0363: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1263: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p2122: float16 /* ty=float16 */, %p361: float16 /* ty=float16 */, %p461: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %929 = reshape(%p0363, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %930 = squeeze(%929, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %931 = add(%930, %p1263) /* ty=Tensor[(32, 256, 4096), float16] */;
    %932 = multiply(%931, %p2122) /* ty=Tensor[(32, 256, 4096), float16] */;
    %933 = fast_erf(%932) /* ty=Tensor[(32, 256, 4096), float16] */;
    %934 = multiply(%933, %p361) /* ty=Tensor[(32, 256, 4096), float16] */;
    %935 = add(%p461, %934) /* ty=Tensor[(32, 256, 4096), float16] */;
    %936 = multiply(%931, %935) /* ty=Tensor[(32, 256, 4096), float16] */;
    %937 = broadcast_to(%936, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%937, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %1397 = %1396(%1395, meta[relay.Constant][64] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1398 = fn (%p0362: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1262: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0362, %p1262, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1399 = %1398(%1397, meta[relay.Constant][65] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1400 = fn (%p0361: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1261: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2121: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %925 = reshape(%p0361, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %926 = squeeze(%925, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %927 = add(%926, %p1261) /* ty=Tensor[(32, 256, 1024), float16] */;
    %928 = cast(%927, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%928, %p2121) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1401 = %1400(%1399, meta[relay.Constant][66] /* ty=Tensor[(1024), float16] */, %1391) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1402 = fn (%p0474: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0474, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1403 = %1402(%1401) /* ty=Tensor[(32, 256, 1), float32] */;
  %1404 = fn (%p0475: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1338: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0475, %p1338, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1405 = %1404(%1401, %1403) /* ty=Tensor[(32, 256, 1), float32] */;
  %1406 = fn (%p0360: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1260: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2120: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p360: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p460: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %920 = add(%p2120, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %921 = subtract(%p0360, %p1260) /* ty=Tensor[(32, 256, 1024), float32] */;
    %922 = rsqrt(%920) /* ty=Tensor[(32, 256, 1), float32] */;
    %923 = multiply(%921, %922) /* ty=Tensor[(32, 256, 1024), float32] */;
    %924 = multiply(%923, %p360) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%924, %p460) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1407 = %1406(%1401, %1403, %1405, meta[relay.Constant][67] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][68] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1408 = fn (%p0359: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %918 = broadcast_to(%p0359, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %919 = reshape(%918, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%919, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1409 = %1408(%1407) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1410 = fn (%p0358: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1259: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0358, %p1259, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1411 = %1410(%1409, meta[relay.Constant][69] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1412 = fn (%p0357: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1258: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %912 = reshape(%p0357, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %913 = squeeze(%912, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %914 = add(%913, %p1258) /* ty=Tensor[(32, 256, 1024), float16] */;
    %915 = reshape(%914, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %916 = transpose(%915, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %917 = broadcast_to(%916, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%917, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1421 = fn (%p0478: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1419 = broadcast_to(%p0478, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1420 = reshape(%1419, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1420, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1422 = %1421(%1407) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1423 = fn (%p0477: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1340: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0477, %p1340, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1424 = %1423(%1422, meta[relay.Constant][71] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1425 = fn (%p0476: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1339: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %1413 = reshape(%p0476, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1414 = squeeze(%1413, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1415 = add(%1414, %p1339) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1416 = reshape(%1415, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1417 = transpose(%1416, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %1418 = broadcast_to(%1417, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%1418, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %1426 = %1412(%1411, meta[relay.Constant][70] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1427 = %1425(%1424, meta[relay.Constant][72] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %1428 = fn (%p0356: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1257: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0356, %p1257, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1429 = %1428(%1426, %1427) /* ty=Tensor[(512, 256, 256), float16] */;
  %1430 = fn (%p0355: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1256: float16 /* ty=float16 */, %p2119: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %909 = reshape(%p0355, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %910 = squeeze(%909, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %911 = divide(%910, %p1256) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%911, %p2119) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1431 = %1430(%1429, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1432 = fn (%p0354: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %908 = nn.fast_softmax(%p0354) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%908, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1433 = %1432(%1431) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1434 = fn (%p0353: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0353, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1443 = fn (%p0481: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1441 = broadcast_to(%p0481, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1442 = reshape(%1441, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1442, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1444 = %1443(%1407) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1445 = fn (%p0480: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1342: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0480, %p1342, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1446 = %1445(%1444, meta[relay.Constant][73] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1447 = fn (%p0479: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1341: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1435 = reshape(%p0479, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1436 = squeeze(%1435, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1437 = add(%1436, %p1341) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1438 = reshape(%1437, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1439 = transpose(%1438, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1440 = broadcast_to(%1439, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1440, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1448 = %1434(%1433) /* ty=Tensor[(512, 256, 256), float16] */;
  %1449 = %1447(%1446, meta[relay.Constant][74] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1450 = fn (%p0352: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1255: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0352, %p1255, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1451 = %1450(%1448, %1449) /* ty=Tensor[(512, 256, 64), float16] */;
  %1452 = fn (%p0351: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %903 = reshape(%p0351, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %904 = squeeze(%903, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %905 = transpose(%904, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %906 = reshape(%905, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %907 = broadcast_to(%906, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%907, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1453 = %1452(%1451) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1454 = fn (%p0350: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1254: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0350, %p1254, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1455 = %1454(%1453, meta[relay.Constant][75] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1456 = fn (%p0349: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1253: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2118: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %899 = reshape(%p0349, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %900 = squeeze(%899, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %901 = add(%900, %p1253) /* ty=Tensor[(32, 256, 1024), float16] */;
    %902 = cast(%901, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%902, %p2118) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1457 = %1456(%1455, meta[relay.Constant][76] /* ty=Tensor[(1024), float16] */, %1407) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1458 = fn (%p0482: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0482, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1459 = %1458(%1457) /* ty=Tensor[(32, 256, 1), float32] */;
  %1460 = fn (%p0483: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1343: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0483, %p1343, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1461 = %1460(%1457, %1459) /* ty=Tensor[(32, 256, 1), float32] */;
  %1462 = fn (%p0348: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1252: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2117: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p359: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p459: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %894 = add(%p2117, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %895 = subtract(%p0348, %p1252) /* ty=Tensor[(32, 256, 1024), float32] */;
    %896 = rsqrt(%894) /* ty=Tensor[(32, 256, 1), float32] */;
    %897 = multiply(%895, %896) /* ty=Tensor[(32, 256, 1024), float32] */;
    %898 = multiply(%897, %p359) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%898, %p459) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1463 = %1462(%1457, %1459, %1461, meta[relay.Constant][77] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][78] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1464 = fn (%p0347: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %892 = broadcast_to(%p0347, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %893 = reshape(%892, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%893, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1465 = %1464(%1463) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1466 = fn (%p0346: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1251: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0346, %p1251, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %1467 = %1466(%1465, meta[relay.Constant][79] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1468 = fn (%p0345: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1250: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p2116: float16 /* ty=float16 */, %p358: float16 /* ty=float16 */, %p458: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %883 = reshape(%p0345, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %884 = squeeze(%883, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %885 = add(%884, %p1250) /* ty=Tensor[(32, 256, 4096), float16] */;
    %886 = multiply(%885, %p2116) /* ty=Tensor[(32, 256, 4096), float16] */;
    %887 = fast_erf(%886) /* ty=Tensor[(32, 256, 4096), float16] */;
    %888 = multiply(%887, %p358) /* ty=Tensor[(32, 256, 4096), float16] */;
    %889 = add(%p458, %888) /* ty=Tensor[(32, 256, 4096), float16] */;
    %890 = multiply(%885, %889) /* ty=Tensor[(32, 256, 4096), float16] */;
    %891 = broadcast_to(%890, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%891, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %1469 = %1468(%1467, meta[relay.Constant][80] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1470 = fn (%p0344: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1249: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0344, %p1249, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1471 = %1470(%1469, meta[relay.Constant][81] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1472 = fn (%p0343: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1248: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2115: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %879 = reshape(%p0343, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %880 = squeeze(%879, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %881 = add(%880, %p1248) /* ty=Tensor[(32, 256, 1024), float16] */;
    %882 = cast(%881, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%882, %p2115) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1473 = %1472(%1471, meta[relay.Constant][82] /* ty=Tensor[(1024), float16] */, %1463) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1474 = fn (%p0484: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0484, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1475 = %1474(%1473) /* ty=Tensor[(32, 256, 1), float32] */;
  %1476 = fn (%p0485: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1344: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0485, %p1344, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1477 = %1476(%1473, %1475) /* ty=Tensor[(32, 256, 1), float32] */;
  %1478 = fn (%p0342: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1247: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2114: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p357: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p457: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %874 = add(%p2114, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %875 = subtract(%p0342, %p1247) /* ty=Tensor[(32, 256, 1024), float32] */;
    %876 = rsqrt(%874) /* ty=Tensor[(32, 256, 1), float32] */;
    %877 = multiply(%875, %876) /* ty=Tensor[(32, 256, 1024), float32] */;
    %878 = multiply(%877, %p357) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%878, %p457) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1479 = %1478(%1473, %1475, %1477, meta[relay.Constant][83] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][84] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1480 = fn (%p0341: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %872 = broadcast_to(%p0341, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %873 = reshape(%872, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%873, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1481 = %1480(%1479) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1482 = fn (%p0340: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1246: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0340, %p1246, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1483 = %1482(%1481, meta[relay.Constant][85] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1484 = fn (%p0339: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1245: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %866 = reshape(%p0339, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %867 = squeeze(%866, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %868 = add(%867, %p1245) /* ty=Tensor[(32, 256, 1024), float16] */;
    %869 = reshape(%868, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %870 = transpose(%869, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %871 = broadcast_to(%870, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%871, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1493 = fn (%p0488: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1491 = broadcast_to(%p0488, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1492 = reshape(%1491, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1492, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1494 = %1493(%1479) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1495 = fn (%p0487: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1346: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0487, %p1346, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1496 = %1495(%1494, meta[relay.Constant][87] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1497 = fn (%p0486: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1345: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %1485 = reshape(%p0486, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1486 = squeeze(%1485, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1487 = add(%1486, %p1345) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1488 = reshape(%1487, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1489 = transpose(%1488, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %1490 = broadcast_to(%1489, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%1490, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %1498 = %1484(%1483, meta[relay.Constant][86] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1499 = %1497(%1496, meta[relay.Constant][88] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %1500 = fn (%p0338: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1244: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0338, %p1244, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1501 = %1500(%1498, %1499) /* ty=Tensor[(512, 256, 256), float16] */;
  %1502 = fn (%p0337: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1243: float16 /* ty=float16 */, %p2113: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %863 = reshape(%p0337, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %864 = squeeze(%863, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %865 = divide(%864, %p1243) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%865, %p2113) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1503 = %1502(%1501, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1504 = fn (%p0336: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %862 = nn.fast_softmax(%p0336) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%862, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1505 = %1504(%1503) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1506 = fn (%p0335: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0335, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1515 = fn (%p0491: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1513 = broadcast_to(%p0491, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1514 = reshape(%1513, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1514, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1516 = %1515(%1479) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1517 = fn (%p0490: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1348: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0490, %p1348, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1518 = %1517(%1516, meta[relay.Constant][89] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1519 = fn (%p0489: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1347: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1507 = reshape(%p0489, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1508 = squeeze(%1507, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1509 = add(%1508, %p1347) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1510 = reshape(%1509, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1511 = transpose(%1510, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1512 = broadcast_to(%1511, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1512, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1520 = %1506(%1505) /* ty=Tensor[(512, 256, 256), float16] */;
  %1521 = %1519(%1518, meta[relay.Constant][90] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1522 = fn (%p0334: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1242: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0334, %p1242, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1523 = %1522(%1520, %1521) /* ty=Tensor[(512, 256, 64), float16] */;
  %1524 = fn (%p0333: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %857 = reshape(%p0333, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %858 = squeeze(%857, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %859 = transpose(%858, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %860 = reshape(%859, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %861 = broadcast_to(%860, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%861, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1525 = %1524(%1523) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1526 = fn (%p0332: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1241: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0332, %p1241, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1527 = %1526(%1525, meta[relay.Constant][91] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1528 = fn (%p0331: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1240: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2112: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %853 = reshape(%p0331, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %854 = squeeze(%853, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %855 = add(%854, %p1240) /* ty=Tensor[(32, 256, 1024), float16] */;
    %856 = cast(%855, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%856, %p2112) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1529 = %1528(%1527, meta[relay.Constant][92] /* ty=Tensor[(1024), float16] */, %1479) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1530 = fn (%p0492: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0492, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1531 = %1530(%1529) /* ty=Tensor[(32, 256, 1), float32] */;
  %1532 = fn (%p0493: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1349: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0493, %p1349, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1533 = %1532(%1529, %1531) /* ty=Tensor[(32, 256, 1), float32] */;
  %1534 = fn (%p0330: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1239: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2111: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p356: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p456: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %848 = add(%p2111, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %849 = subtract(%p0330, %p1239) /* ty=Tensor[(32, 256, 1024), float32] */;
    %850 = rsqrt(%848) /* ty=Tensor[(32, 256, 1), float32] */;
    %851 = multiply(%849, %850) /* ty=Tensor[(32, 256, 1024), float32] */;
    %852 = multiply(%851, %p356) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%852, %p456) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1535 = %1534(%1529, %1531, %1533, meta[relay.Constant][93] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][94] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1536 = fn (%p0329: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %846 = broadcast_to(%p0329, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %847 = reshape(%846, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%847, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1537 = %1536(%1535) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1538 = fn (%p0328: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1238: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0328, %p1238, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %1539 = %1538(%1537, meta[relay.Constant][95] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1540 = fn (%p0327: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1237: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p2110: float16 /* ty=float16 */, %p355: float16 /* ty=float16 */, %p455: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %837 = reshape(%p0327, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %838 = squeeze(%837, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %839 = add(%838, %p1237) /* ty=Tensor[(32, 256, 4096), float16] */;
    %840 = multiply(%839, %p2110) /* ty=Tensor[(32, 256, 4096), float16] */;
    %841 = fast_erf(%840) /* ty=Tensor[(32, 256, 4096), float16] */;
    %842 = multiply(%841, %p355) /* ty=Tensor[(32, 256, 4096), float16] */;
    %843 = add(%p455, %842) /* ty=Tensor[(32, 256, 4096), float16] */;
    %844 = multiply(%839, %843) /* ty=Tensor[(32, 256, 4096), float16] */;
    %845 = broadcast_to(%844, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%845, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %1541 = %1540(%1539, meta[relay.Constant][96] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1542 = fn (%p0326: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1236: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0326, %p1236, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1543 = %1542(%1541, meta[relay.Constant][97] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1544 = fn (%p0325: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1235: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2109: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %833 = reshape(%p0325, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %834 = squeeze(%833, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %835 = add(%834, %p1235) /* ty=Tensor[(32, 256, 1024), float16] */;
    %836 = cast(%835, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%836, %p2109) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1545 = %1544(%1543, meta[relay.Constant][98] /* ty=Tensor[(1024), float16] */, %1535) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1546 = fn (%p0494: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0494, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1547 = %1546(%1545) /* ty=Tensor[(32, 256, 1), float32] */;
  %1548 = fn (%p0495: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1350: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0495, %p1350, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1549 = %1548(%1545, %1547) /* ty=Tensor[(32, 256, 1), float32] */;
  %1550 = fn (%p0324: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1234: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2108: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p354: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p454: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %828 = add(%p2108, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %829 = subtract(%p0324, %p1234) /* ty=Tensor[(32, 256, 1024), float32] */;
    %830 = rsqrt(%828) /* ty=Tensor[(32, 256, 1), float32] */;
    %831 = multiply(%829, %830) /* ty=Tensor[(32, 256, 1024), float32] */;
    %832 = multiply(%831, %p354) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%832, %p454) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1551 = %1550(%1545, %1547, %1549, meta[relay.Constant][99] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][100] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1552 = fn (%p0323: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %826 = broadcast_to(%p0323, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %827 = reshape(%826, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%827, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1553 = %1552(%1551) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1554 = fn (%p0322: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1233: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0322, %p1233, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1555 = %1554(%1553, meta[relay.Constant][101] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1556 = fn (%p0321: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1232: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %820 = reshape(%p0321, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %821 = squeeze(%820, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %822 = add(%821, %p1232) /* ty=Tensor[(32, 256, 1024), float16] */;
    %823 = reshape(%822, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %824 = transpose(%823, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %825 = broadcast_to(%824, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%825, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1565 = fn (%p0498: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1563 = broadcast_to(%p0498, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1564 = reshape(%1563, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1564, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1566 = %1565(%1551) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1567 = fn (%p0497: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1352: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0497, %p1352, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1568 = %1567(%1566, meta[relay.Constant][103] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1569 = fn (%p0496: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1351: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %1557 = reshape(%p0496, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1558 = squeeze(%1557, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1559 = add(%1558, %p1351) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1560 = reshape(%1559, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1561 = transpose(%1560, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %1562 = broadcast_to(%1561, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%1562, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %1570 = %1556(%1555, meta[relay.Constant][102] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1571 = %1569(%1568, meta[relay.Constant][104] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %1572 = fn (%p0320: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1231: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0320, %p1231, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1573 = %1572(%1570, %1571) /* ty=Tensor[(512, 256, 256), float16] */;
  %1574 = fn (%p0319: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1230: float16 /* ty=float16 */, %p2107: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %817 = reshape(%p0319, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %818 = squeeze(%817, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %819 = divide(%818, %p1230) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%819, %p2107) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1575 = %1574(%1573, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1576 = fn (%p0318: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %816 = nn.fast_softmax(%p0318) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%816, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1577 = %1576(%1575) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1578 = fn (%p0317: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0317, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1587 = fn (%p0501: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1585 = broadcast_to(%p0501, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1586 = reshape(%1585, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1586, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1588 = %1587(%1551) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1589 = fn (%p0500: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1354: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0500, %p1354, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1590 = %1589(%1588, meta[relay.Constant][105] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1591 = fn (%p0499: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1353: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1579 = reshape(%p0499, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1580 = squeeze(%1579, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1581 = add(%1580, %p1353) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1582 = reshape(%1581, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1583 = transpose(%1582, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1584 = broadcast_to(%1583, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1584, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1592 = %1578(%1577) /* ty=Tensor[(512, 256, 256), float16] */;
  %1593 = %1591(%1590, meta[relay.Constant][106] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1594 = fn (%p0316: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1229: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0316, %p1229, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1595 = %1594(%1592, %1593) /* ty=Tensor[(512, 256, 64), float16] */;
  %1596 = fn (%p0315: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %811 = reshape(%p0315, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %812 = squeeze(%811, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %813 = transpose(%812, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %814 = reshape(%813, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %815 = broadcast_to(%814, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%815, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1597 = %1596(%1595) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1598 = fn (%p0314: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1228: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0314, %p1228, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1599 = %1598(%1597, meta[relay.Constant][107] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1600 = fn (%p0313: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1227: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2106: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %807 = reshape(%p0313, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %808 = squeeze(%807, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %809 = add(%808, %p1227) /* ty=Tensor[(32, 256, 1024), float16] */;
    %810 = cast(%809, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%810, %p2106) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1601 = %1600(%1599, meta[relay.Constant][108] /* ty=Tensor[(1024), float16] */, %1551) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1602 = fn (%p0502: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0502, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1603 = %1602(%1601) /* ty=Tensor[(32, 256, 1), float32] */;
  %1604 = fn (%p0503: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1355: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0503, %p1355, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1605 = %1604(%1601, %1603) /* ty=Tensor[(32, 256, 1), float32] */;
  %1606 = fn (%p0312: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1226: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2105: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p353: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p453: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %802 = add(%p2105, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %803 = subtract(%p0312, %p1226) /* ty=Tensor[(32, 256, 1024), float32] */;
    %804 = rsqrt(%802) /* ty=Tensor[(32, 256, 1), float32] */;
    %805 = multiply(%803, %804) /* ty=Tensor[(32, 256, 1024), float32] */;
    %806 = multiply(%805, %p353) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%806, %p453) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1607 = %1606(%1601, %1603, %1605, meta[relay.Constant][109] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][110] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1608 = fn (%p0311: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %800 = broadcast_to(%p0311, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %801 = reshape(%800, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%801, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1609 = %1608(%1607) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1610 = fn (%p0310: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1225: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0310, %p1225, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %1611 = %1610(%1609, meta[relay.Constant][111] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1612 = fn (%p0309: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1224: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p2104: float16 /* ty=float16 */, %p352: float16 /* ty=float16 */, %p452: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %791 = reshape(%p0309, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %792 = squeeze(%791, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %793 = add(%792, %p1224) /* ty=Tensor[(32, 256, 4096), float16] */;
    %794 = multiply(%793, %p2104) /* ty=Tensor[(32, 256, 4096), float16] */;
    %795 = fast_erf(%794) /* ty=Tensor[(32, 256, 4096), float16] */;
    %796 = multiply(%795, %p352) /* ty=Tensor[(32, 256, 4096), float16] */;
    %797 = add(%p452, %796) /* ty=Tensor[(32, 256, 4096), float16] */;
    %798 = multiply(%793, %797) /* ty=Tensor[(32, 256, 4096), float16] */;
    %799 = broadcast_to(%798, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%799, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %1613 = %1612(%1611, meta[relay.Constant][112] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1614 = fn (%p0308: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1223: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0308, %p1223, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1615 = %1614(%1613, meta[relay.Constant][113] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1616 = fn (%p0307: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1222: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2103: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %787 = reshape(%p0307, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %788 = squeeze(%787, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %789 = add(%788, %p1222) /* ty=Tensor[(32, 256, 1024), float16] */;
    %790 = cast(%789, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%790, %p2103) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1617 = %1616(%1615, meta[relay.Constant][114] /* ty=Tensor[(1024), float16] */, %1607) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1618 = fn (%p0504: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0504, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1619 = %1618(%1617) /* ty=Tensor[(32, 256, 1), float32] */;
  %1620 = fn (%p0505: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1356: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0505, %p1356, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1621 = %1620(%1617, %1619) /* ty=Tensor[(32, 256, 1), float32] */;
  %1622 = fn (%p0306: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1221: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2102: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p351: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p451: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %782 = add(%p2102, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %783 = subtract(%p0306, %p1221) /* ty=Tensor[(32, 256, 1024), float32] */;
    %784 = rsqrt(%782) /* ty=Tensor[(32, 256, 1), float32] */;
    %785 = multiply(%783, %784) /* ty=Tensor[(32, 256, 1024), float32] */;
    %786 = multiply(%785, %p351) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%786, %p451) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1623 = %1622(%1617, %1619, %1621, meta[relay.Constant][115] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][116] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1624 = fn (%p0305: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %780 = broadcast_to(%p0305, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %781 = reshape(%780, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%781, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1625 = %1624(%1623) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1626 = fn (%p0304: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1220: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0304, %p1220, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1627 = %1626(%1625, meta[relay.Constant][117] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1628 = fn (%p0303: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1219: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %774 = reshape(%p0303, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %775 = squeeze(%774, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %776 = add(%775, %p1219) /* ty=Tensor[(32, 256, 1024), float16] */;
    %777 = reshape(%776, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %778 = transpose(%777, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %779 = broadcast_to(%778, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%779, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1637 = fn (%p0508: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1635 = broadcast_to(%p0508, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1636 = reshape(%1635, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1636, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1638 = %1637(%1623) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1639 = fn (%p0507: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1358: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0507, %p1358, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1640 = %1639(%1638, meta[relay.Constant][119] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1641 = fn (%p0506: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1357: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %1629 = reshape(%p0506, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1630 = squeeze(%1629, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1631 = add(%1630, %p1357) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1632 = reshape(%1631, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1633 = transpose(%1632, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %1634 = broadcast_to(%1633, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%1634, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %1642 = %1628(%1627, meta[relay.Constant][118] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1643 = %1641(%1640, meta[relay.Constant][120] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %1644 = fn (%p0302: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1218: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0302, %p1218, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1645 = %1644(%1642, %1643) /* ty=Tensor[(512, 256, 256), float16] */;
  %1646 = fn (%p0301: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1217: float16 /* ty=float16 */, %p2101: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %771 = reshape(%p0301, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %772 = squeeze(%771, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %773 = divide(%772, %p1217) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%773, %p2101) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1647 = %1646(%1645, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1648 = fn (%p0300: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %770 = nn.fast_softmax(%p0300) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%770, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1649 = %1648(%1647) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1650 = fn (%p0299: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0299, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1659 = fn (%p0511: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1657 = broadcast_to(%p0511, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1658 = reshape(%1657, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1658, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1660 = %1659(%1623) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1661 = fn (%p0510: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1360: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0510, %p1360, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1662 = %1661(%1660, meta[relay.Constant][121] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1663 = fn (%p0509: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1359: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1651 = reshape(%p0509, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1652 = squeeze(%1651, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1653 = add(%1652, %p1359) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1654 = reshape(%1653, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1655 = transpose(%1654, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1656 = broadcast_to(%1655, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1656, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1664 = %1650(%1649) /* ty=Tensor[(512, 256, 256), float16] */;
  %1665 = %1663(%1662, meta[relay.Constant][122] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1666 = fn (%p0298: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1216: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0298, %p1216, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1667 = %1666(%1664, %1665) /* ty=Tensor[(512, 256, 64), float16] */;
  %1668 = fn (%p0297: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %765 = reshape(%p0297, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %766 = squeeze(%765, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %767 = transpose(%766, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %768 = reshape(%767, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %769 = broadcast_to(%768, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%769, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1669 = %1668(%1667) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1670 = fn (%p0296: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1215: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0296, %p1215, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1671 = %1670(%1669, meta[relay.Constant][123] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1672 = fn (%p0295: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1214: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p2100: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %761 = reshape(%p0295, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %762 = squeeze(%761, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %763 = add(%762, %p1214) /* ty=Tensor[(32, 256, 1024), float16] */;
    %764 = cast(%763, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%764, %p2100) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1673 = %1672(%1671, meta[relay.Constant][124] /* ty=Tensor[(1024), float16] */, %1623) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1674 = fn (%p0512: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0512, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1675 = %1674(%1673) /* ty=Tensor[(32, 256, 1), float32] */;
  %1676 = fn (%p0513: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1361: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0513, %p1361, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1677 = %1676(%1673, %1675) /* ty=Tensor[(32, 256, 1), float32] */;
  %1678 = fn (%p0294: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1213: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p299: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p350: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p450: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %756 = add(%p299, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %757 = subtract(%p0294, %p1213) /* ty=Tensor[(32, 256, 1024), float32] */;
    %758 = rsqrt(%756) /* ty=Tensor[(32, 256, 1), float32] */;
    %759 = multiply(%757, %758) /* ty=Tensor[(32, 256, 1024), float32] */;
    %760 = multiply(%759, %p350) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%760, %p450) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1679 = %1678(%1673, %1675, %1677, meta[relay.Constant][125] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][126] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1680 = fn (%p0293: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %754 = broadcast_to(%p0293, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %755 = reshape(%754, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%755, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1681 = %1680(%1679) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1682 = fn (%p0292: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1212: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0292, %p1212, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %1683 = %1682(%1681, meta[relay.Constant][127] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1684 = fn (%p0291: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1211: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p298: float16 /* ty=float16 */, %p349: float16 /* ty=float16 */, %p449: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %745 = reshape(%p0291, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %746 = squeeze(%745, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %747 = add(%746, %p1211) /* ty=Tensor[(32, 256, 4096), float16] */;
    %748 = multiply(%747, %p298) /* ty=Tensor[(32, 256, 4096), float16] */;
    %749 = fast_erf(%748) /* ty=Tensor[(32, 256, 4096), float16] */;
    %750 = multiply(%749, %p349) /* ty=Tensor[(32, 256, 4096), float16] */;
    %751 = add(%p449, %750) /* ty=Tensor[(32, 256, 4096), float16] */;
    %752 = multiply(%747, %751) /* ty=Tensor[(32, 256, 4096), float16] */;
    %753 = broadcast_to(%752, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%753, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %1685 = %1684(%1683, meta[relay.Constant][128] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1686 = fn (%p0290: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1210: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0290, %p1210, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1687 = %1686(%1685, meta[relay.Constant][129] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1688 = fn (%p0289: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1209: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p297: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %741 = reshape(%p0289, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %742 = squeeze(%741, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %743 = add(%742, %p1209) /* ty=Tensor[(32, 256, 1024), float16] */;
    %744 = cast(%743, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%744, %p297) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1689 = %1688(%1687, meta[relay.Constant][130] /* ty=Tensor[(1024), float16] */, %1679) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1690 = fn (%p0514: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0514, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1691 = %1690(%1689) /* ty=Tensor[(32, 256, 1), float32] */;
  %1692 = fn (%p0515: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1362: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0515, %p1362, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1693 = %1692(%1689, %1691) /* ty=Tensor[(32, 256, 1), float32] */;
  %1694 = fn (%p0288: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1208: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p296: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p348: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p448: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %736 = add(%p296, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %737 = subtract(%p0288, %p1208) /* ty=Tensor[(32, 256, 1024), float32] */;
    %738 = rsqrt(%736) /* ty=Tensor[(32, 256, 1), float32] */;
    %739 = multiply(%737, %738) /* ty=Tensor[(32, 256, 1024), float32] */;
    %740 = multiply(%739, %p348) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%740, %p448) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1695 = %1694(%1689, %1691, %1693, meta[relay.Constant][131] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][132] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1696 = fn (%p0287: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %734 = broadcast_to(%p0287, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %735 = reshape(%734, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%735, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1697 = %1696(%1695) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1698 = fn (%p0286: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1207: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0286, %p1207, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1699 = %1698(%1697, meta[relay.Constant][133] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1700 = fn (%p0285: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1206: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %728 = reshape(%p0285, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %729 = squeeze(%728, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %730 = add(%729, %p1206) /* ty=Tensor[(32, 256, 1024), float16] */;
    %731 = reshape(%730, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %732 = transpose(%731, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %733 = broadcast_to(%732, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%733, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1709 = fn (%p0518: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1707 = broadcast_to(%p0518, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1708 = reshape(%1707, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1708, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1710 = %1709(%1695) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1711 = fn (%p0517: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1364: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0517, %p1364, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1712 = %1711(%1710, meta[relay.Constant][135] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1713 = fn (%p0516: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1363: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %1701 = reshape(%p0516, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1702 = squeeze(%1701, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1703 = add(%1702, %p1363) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1704 = reshape(%1703, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1705 = transpose(%1704, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %1706 = broadcast_to(%1705, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%1706, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %1714 = %1700(%1699, meta[relay.Constant][134] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1715 = %1713(%1712, meta[relay.Constant][136] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %1716 = fn (%p0284: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1205: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0284, %p1205, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1717 = %1716(%1714, %1715) /* ty=Tensor[(512, 256, 256), float16] */;
  %1718 = fn (%p0283: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1204: float16 /* ty=float16 */, %p295: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %725 = reshape(%p0283, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %726 = squeeze(%725, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %727 = divide(%726, %p1204) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%727, %p295) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1719 = %1718(%1717, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1720 = fn (%p0282: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %724 = nn.fast_softmax(%p0282) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%724, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1721 = %1720(%1719) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1722 = fn (%p0281: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0281, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1731 = fn (%p0521: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1729 = broadcast_to(%p0521, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1730 = reshape(%1729, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1730, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1732 = %1731(%1695) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1733 = fn (%p0520: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1366: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0520, %p1366, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1734 = %1733(%1732, meta[relay.Constant][137] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1735 = fn (%p0519: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1365: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1723 = reshape(%p0519, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1724 = squeeze(%1723, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1725 = add(%1724, %p1365) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1726 = reshape(%1725, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1727 = transpose(%1726, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1728 = broadcast_to(%1727, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1728, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1736 = %1722(%1721) /* ty=Tensor[(512, 256, 256), float16] */;
  %1737 = %1735(%1734, meta[relay.Constant][138] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1738 = fn (%p0280: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1203: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0280, %p1203, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1739 = %1738(%1736, %1737) /* ty=Tensor[(512, 256, 64), float16] */;
  %1740 = fn (%p0279: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %719 = reshape(%p0279, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %720 = squeeze(%719, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %721 = transpose(%720, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %722 = reshape(%721, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %723 = broadcast_to(%722, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%723, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1741 = %1740(%1739) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1742 = fn (%p0278: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1202: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0278, %p1202, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1743 = %1742(%1741, meta[relay.Constant][139] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1744 = fn (%p0277: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1201: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p294: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %715 = reshape(%p0277, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %716 = squeeze(%715, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %717 = add(%716, %p1201) /* ty=Tensor[(32, 256, 1024), float16] */;
    %718 = cast(%717, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%718, %p294) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1745 = %1744(%1743, meta[relay.Constant][140] /* ty=Tensor[(1024), float16] */, %1695) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1746 = fn (%p0522: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0522, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1747 = %1746(%1745) /* ty=Tensor[(32, 256, 1), float32] */;
  %1748 = fn (%p0523: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1367: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0523, %p1367, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1749 = %1748(%1745, %1747) /* ty=Tensor[(32, 256, 1), float32] */;
  %1750 = fn (%p0276: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1200: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p293: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p347: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p447: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %710 = add(%p293, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %711 = subtract(%p0276, %p1200) /* ty=Tensor[(32, 256, 1024), float32] */;
    %712 = rsqrt(%710) /* ty=Tensor[(32, 256, 1), float32] */;
    %713 = multiply(%711, %712) /* ty=Tensor[(32, 256, 1024), float32] */;
    %714 = multiply(%713, %p347) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%714, %p447) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1751 = %1750(%1745, %1747, %1749, meta[relay.Constant][141] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][142] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1752 = fn (%p0275: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %708 = broadcast_to(%p0275, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %709 = reshape(%708, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%709, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1753 = %1752(%1751) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1754 = fn (%p0274: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1199: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0274, %p1199, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %1755 = %1754(%1753, meta[relay.Constant][143] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1756 = fn (%p0273: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1198: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p292: float16 /* ty=float16 */, %p346: float16 /* ty=float16 */, %p446: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %699 = reshape(%p0273, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %700 = squeeze(%699, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %701 = add(%700, %p1198) /* ty=Tensor[(32, 256, 4096), float16] */;
    %702 = multiply(%701, %p292) /* ty=Tensor[(32, 256, 4096), float16] */;
    %703 = fast_erf(%702) /* ty=Tensor[(32, 256, 4096), float16] */;
    %704 = multiply(%703, %p346) /* ty=Tensor[(32, 256, 4096), float16] */;
    %705 = add(%p446, %704) /* ty=Tensor[(32, 256, 4096), float16] */;
    %706 = multiply(%701, %705) /* ty=Tensor[(32, 256, 4096), float16] */;
    %707 = broadcast_to(%706, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%707, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %1757 = %1756(%1755, meta[relay.Constant][144] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1758 = fn (%p0272: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1197: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0272, %p1197, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1759 = %1758(%1757, meta[relay.Constant][145] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1760 = fn (%p0271: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1196: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p291: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %695 = reshape(%p0271, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %696 = squeeze(%695, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %697 = add(%696, %p1196) /* ty=Tensor[(32, 256, 1024), float16] */;
    %698 = cast(%697, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%698, %p291) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1761 = %1760(%1759, meta[relay.Constant][146] /* ty=Tensor[(1024), float16] */, %1751) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1762 = fn (%p0524: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0524, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1763 = %1762(%1761) /* ty=Tensor[(32, 256, 1), float32] */;
  %1764 = fn (%p0525: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1368: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0525, %p1368, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1765 = %1764(%1761, %1763) /* ty=Tensor[(32, 256, 1), float32] */;
  %1766 = fn (%p0270: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1195: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p290: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p345: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p445: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %690 = add(%p290, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %691 = subtract(%p0270, %p1195) /* ty=Tensor[(32, 256, 1024), float32] */;
    %692 = rsqrt(%690) /* ty=Tensor[(32, 256, 1), float32] */;
    %693 = multiply(%691, %692) /* ty=Tensor[(32, 256, 1024), float32] */;
    %694 = multiply(%693, %p345) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%694, %p445) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1767 = %1766(%1761, %1763, %1765, meta[relay.Constant][147] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][148] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1768 = fn (%p0269: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %688 = broadcast_to(%p0269, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %689 = reshape(%688, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%689, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1769 = %1768(%1767) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1770 = fn (%p0268: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1194: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0268, %p1194, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1771 = %1770(%1769, meta[relay.Constant][149] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1772 = fn (%p0267: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1193: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %682 = reshape(%p0267, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %683 = squeeze(%682, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %684 = add(%683, %p1193) /* ty=Tensor[(32, 256, 1024), float16] */;
    %685 = reshape(%684, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %686 = transpose(%685, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %687 = broadcast_to(%686, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%687, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1781 = fn (%p0528: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1779 = broadcast_to(%p0528, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1780 = reshape(%1779, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1780, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1782 = %1781(%1767) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1783 = fn (%p0527: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1370: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0527, %p1370, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1784 = %1783(%1782, meta[relay.Constant][151] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1785 = fn (%p0526: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1369: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %1773 = reshape(%p0526, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1774 = squeeze(%1773, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1775 = add(%1774, %p1369) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1776 = reshape(%1775, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1777 = transpose(%1776, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %1778 = broadcast_to(%1777, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%1778, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %1786 = %1772(%1771, meta[relay.Constant][150] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1787 = %1785(%1784, meta[relay.Constant][152] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %1788 = fn (%p0266: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1192: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0266, %p1192, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1789 = %1788(%1786, %1787) /* ty=Tensor[(512, 256, 256), float16] */;
  %1790 = fn (%p0265: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1191: float16 /* ty=float16 */, %p289: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %679 = reshape(%p0265, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %680 = squeeze(%679, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %681 = divide(%680, %p1191) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%681, %p289) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1791 = %1790(%1789, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1792 = fn (%p0264: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %678 = nn.fast_softmax(%p0264) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%678, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1793 = %1792(%1791) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1794 = fn (%p0263: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0263, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1803 = fn (%p0531: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1801 = broadcast_to(%p0531, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1802 = reshape(%1801, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1802, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1804 = %1803(%1767) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1805 = fn (%p0530: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1372: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0530, %p1372, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1806 = %1805(%1804, meta[relay.Constant][153] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1807 = fn (%p0529: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1371: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1795 = reshape(%p0529, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1796 = squeeze(%1795, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1797 = add(%1796, %p1371) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1798 = reshape(%1797, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1799 = transpose(%1798, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1800 = broadcast_to(%1799, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1800, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1808 = %1794(%1793) /* ty=Tensor[(512, 256, 256), float16] */;
  %1809 = %1807(%1806, meta[relay.Constant][154] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1810 = fn (%p0262: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1190: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0262, %p1190, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1811 = %1810(%1808, %1809) /* ty=Tensor[(512, 256, 64), float16] */;
  %1812 = fn (%p0261: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %673 = reshape(%p0261, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %674 = squeeze(%673, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %675 = transpose(%674, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %676 = reshape(%675, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %677 = broadcast_to(%676, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%677, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1813 = %1812(%1811) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1814 = fn (%p0260: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1189: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0260, %p1189, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1815 = %1814(%1813, meta[relay.Constant][155] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1816 = fn (%p0259: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1188: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p288: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %669 = reshape(%p0259, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %670 = squeeze(%669, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %671 = add(%670, %p1188) /* ty=Tensor[(32, 256, 1024), float16] */;
    %672 = cast(%671, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%672, %p288) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1817 = %1816(%1815, meta[relay.Constant][156] /* ty=Tensor[(1024), float16] */, %1767) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1818 = fn (%p0532: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0532, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1819 = %1818(%1817) /* ty=Tensor[(32, 256, 1), float32] */;
  %1820 = fn (%p0533: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1373: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0533, %p1373, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1821 = %1820(%1817, %1819) /* ty=Tensor[(32, 256, 1), float32] */;
  %1822 = fn (%p0258: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1187: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p287: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p344: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p444: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %664 = add(%p287, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %665 = subtract(%p0258, %p1187) /* ty=Tensor[(32, 256, 1024), float32] */;
    %666 = rsqrt(%664) /* ty=Tensor[(32, 256, 1), float32] */;
    %667 = multiply(%665, %666) /* ty=Tensor[(32, 256, 1024), float32] */;
    %668 = multiply(%667, %p344) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%668, %p444) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1823 = %1822(%1817, %1819, %1821, meta[relay.Constant][157] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][158] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1824 = fn (%p0257: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %662 = broadcast_to(%p0257, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %663 = reshape(%662, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%663, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1825 = %1824(%1823) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1826 = fn (%p0256: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1186: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0256, %p1186, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %1827 = %1826(%1825, meta[relay.Constant][159] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1828 = fn (%p0255: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1185: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p286: float16 /* ty=float16 */, %p343: float16 /* ty=float16 */, %p443: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %653 = reshape(%p0255, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %654 = squeeze(%653, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %655 = add(%654, %p1185) /* ty=Tensor[(32, 256, 4096), float16] */;
    %656 = multiply(%655, %p286) /* ty=Tensor[(32, 256, 4096), float16] */;
    %657 = fast_erf(%656) /* ty=Tensor[(32, 256, 4096), float16] */;
    %658 = multiply(%657, %p343) /* ty=Tensor[(32, 256, 4096), float16] */;
    %659 = add(%p443, %658) /* ty=Tensor[(32, 256, 4096), float16] */;
    %660 = multiply(%655, %659) /* ty=Tensor[(32, 256, 4096), float16] */;
    %661 = broadcast_to(%660, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%661, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %1829 = %1828(%1827, meta[relay.Constant][160] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1830 = fn (%p0254: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1184: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0254, %p1184, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1831 = %1830(%1829, meta[relay.Constant][161] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1832 = fn (%p0253: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1183: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p285: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %649 = reshape(%p0253, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %650 = squeeze(%649, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %651 = add(%650, %p1183) /* ty=Tensor[(32, 256, 1024), float16] */;
    %652 = cast(%651, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%652, %p285) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1833 = %1832(%1831, meta[relay.Constant][162] /* ty=Tensor[(1024), float16] */, %1823) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1834 = fn (%p0534: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0534, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1835 = %1834(%1833) /* ty=Tensor[(32, 256, 1), float32] */;
  %1836 = fn (%p0535: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1374: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0535, %p1374, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1837 = %1836(%1833, %1835) /* ty=Tensor[(32, 256, 1), float32] */;
  %1838 = fn (%p0252: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1182: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p284: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p342: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p442: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %644 = add(%p284, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %645 = subtract(%p0252, %p1182) /* ty=Tensor[(32, 256, 1024), float32] */;
    %646 = rsqrt(%644) /* ty=Tensor[(32, 256, 1), float32] */;
    %647 = multiply(%645, %646) /* ty=Tensor[(32, 256, 1024), float32] */;
    %648 = multiply(%647, %p342) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%648, %p442) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1839 = %1838(%1833, %1835, %1837, meta[relay.Constant][163] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][164] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1840 = fn (%p0251: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %642 = broadcast_to(%p0251, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %643 = reshape(%642, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%643, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1841 = %1840(%1839) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1842 = fn (%p0250: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1181: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0250, %p1181, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1843 = %1842(%1841, meta[relay.Constant][165] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1844 = fn (%p0249: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1180: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %636 = reshape(%p0249, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %637 = squeeze(%636, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %638 = add(%637, %p1180) /* ty=Tensor[(32, 256, 1024), float16] */;
    %639 = reshape(%638, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %640 = transpose(%639, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %641 = broadcast_to(%640, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%641, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1853 = fn (%p0538: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1851 = broadcast_to(%p0538, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1852 = reshape(%1851, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1852, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1854 = %1853(%1839) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1855 = fn (%p0537: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1376: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0537, %p1376, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1856 = %1855(%1854, meta[relay.Constant][167] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1857 = fn (%p0536: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1375: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %1845 = reshape(%p0536, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1846 = squeeze(%1845, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1847 = add(%1846, %p1375) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1848 = reshape(%1847, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1849 = transpose(%1848, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %1850 = broadcast_to(%1849, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%1850, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %1858 = %1844(%1843, meta[relay.Constant][166] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1859 = %1857(%1856, meta[relay.Constant][168] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %1860 = fn (%p0248: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1179: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0248, %p1179, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1861 = %1860(%1858, %1859) /* ty=Tensor[(512, 256, 256), float16] */;
  %1862 = fn (%p0247: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1178: float16 /* ty=float16 */, %p283: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %633 = reshape(%p0247, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %634 = squeeze(%633, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %635 = divide(%634, %p1178) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%635, %p283) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1863 = %1862(%1861, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1864 = fn (%p0246: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %632 = nn.fast_softmax(%p0246) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%632, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1865 = %1864(%1863) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1866 = fn (%p0245: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0245, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1875 = fn (%p0541: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1873 = broadcast_to(%p0541, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1874 = reshape(%1873, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1874, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1876 = %1875(%1839) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1877 = fn (%p0540: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1378: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0540, %p1378, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1878 = %1877(%1876, meta[relay.Constant][169] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1879 = fn (%p0539: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1377: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1867 = reshape(%p0539, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1868 = squeeze(%1867, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1869 = add(%1868, %p1377) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1870 = reshape(%1869, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1871 = transpose(%1870, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1872 = broadcast_to(%1871, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1872, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1880 = %1866(%1865) /* ty=Tensor[(512, 256, 256), float16] */;
  %1881 = %1879(%1878, meta[relay.Constant][170] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1882 = fn (%p0244: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1177: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0244, %p1177, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1883 = %1882(%1880, %1881) /* ty=Tensor[(512, 256, 64), float16] */;
  %1884 = fn (%p0243: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %627 = reshape(%p0243, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %628 = squeeze(%627, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %629 = transpose(%628, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %630 = reshape(%629, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %631 = broadcast_to(%630, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%631, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1885 = %1884(%1883) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1886 = fn (%p0242: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1176: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0242, %p1176, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1887 = %1886(%1885, meta[relay.Constant][171] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1888 = fn (%p0241: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1175: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p282: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %623 = reshape(%p0241, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %624 = squeeze(%623, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %625 = add(%624, %p1175) /* ty=Tensor[(32, 256, 1024), float16] */;
    %626 = cast(%625, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%626, %p282) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1889 = %1888(%1887, meta[relay.Constant][172] /* ty=Tensor[(1024), float16] */, %1839) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1890 = fn (%p0542: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0542, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1891 = %1890(%1889) /* ty=Tensor[(32, 256, 1), float32] */;
  %1892 = fn (%p0543: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1379: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0543, %p1379, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1893 = %1892(%1889, %1891) /* ty=Tensor[(32, 256, 1), float32] */;
  %1894 = fn (%p0240: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1174: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p281: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p341: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p441: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %618 = add(%p281, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %619 = subtract(%p0240, %p1174) /* ty=Tensor[(32, 256, 1024), float32] */;
    %620 = rsqrt(%618) /* ty=Tensor[(32, 256, 1), float32] */;
    %621 = multiply(%619, %620) /* ty=Tensor[(32, 256, 1024), float32] */;
    %622 = multiply(%621, %p341) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%622, %p441) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1895 = %1894(%1889, %1891, %1893, meta[relay.Constant][173] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][174] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1896 = fn (%p0239: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %616 = broadcast_to(%p0239, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %617 = reshape(%616, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%617, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1897 = %1896(%1895) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1898 = fn (%p0238: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1173: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0238, %p1173, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %1899 = %1898(%1897, meta[relay.Constant][175] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1900 = fn (%p0237: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1172: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p280: float16 /* ty=float16 */, %p340: float16 /* ty=float16 */, %p440: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %607 = reshape(%p0237, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %608 = squeeze(%607, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %609 = add(%608, %p1172) /* ty=Tensor[(32, 256, 4096), float16] */;
    %610 = multiply(%609, %p280) /* ty=Tensor[(32, 256, 4096), float16] */;
    %611 = fast_erf(%610) /* ty=Tensor[(32, 256, 4096), float16] */;
    %612 = multiply(%611, %p340) /* ty=Tensor[(32, 256, 4096), float16] */;
    %613 = add(%p440, %612) /* ty=Tensor[(32, 256, 4096), float16] */;
    %614 = multiply(%609, %613) /* ty=Tensor[(32, 256, 4096), float16] */;
    %615 = broadcast_to(%614, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%615, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %1901 = %1900(%1899, meta[relay.Constant][176] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1902 = fn (%p0236: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1171: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0236, %p1171, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1903 = %1902(%1901, meta[relay.Constant][177] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1904 = fn (%p0235: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1170: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p279: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %603 = reshape(%p0235, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %604 = squeeze(%603, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %605 = add(%604, %p1170) /* ty=Tensor[(32, 256, 1024), float16] */;
    %606 = cast(%605, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%606, %p279) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1905 = %1904(%1903, meta[relay.Constant][178] /* ty=Tensor[(1024), float16] */, %1895) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1906 = fn (%p0544: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0544, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1907 = %1906(%1905) /* ty=Tensor[(32, 256, 1), float32] */;
  %1908 = fn (%p0545: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1380: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0545, %p1380, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1909 = %1908(%1905, %1907) /* ty=Tensor[(32, 256, 1), float32] */;
  %1910 = fn (%p0234: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1169: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p278: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p339: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p439: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %598 = add(%p278, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %599 = subtract(%p0234, %p1169) /* ty=Tensor[(32, 256, 1024), float32] */;
    %600 = rsqrt(%598) /* ty=Tensor[(32, 256, 1), float32] */;
    %601 = multiply(%599, %600) /* ty=Tensor[(32, 256, 1024), float32] */;
    %602 = multiply(%601, %p339) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%602, %p439) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1911 = %1910(%1905, %1907, %1909, meta[relay.Constant][179] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][180] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1912 = fn (%p0233: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %596 = broadcast_to(%p0233, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %597 = reshape(%596, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%597, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1913 = %1912(%1911) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1914 = fn (%p0232: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1168: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0232, %p1168, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1915 = %1914(%1913, meta[relay.Constant][181] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1916 = fn (%p0231: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1167: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %590 = reshape(%p0231, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %591 = squeeze(%590, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %592 = add(%591, %p1167) /* ty=Tensor[(32, 256, 1024), float16] */;
    %593 = reshape(%592, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %594 = transpose(%593, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %595 = broadcast_to(%594, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%595, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1925 = fn (%p0548: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1923 = broadcast_to(%p0548, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1924 = reshape(%1923, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1924, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1926 = %1925(%1911) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1927 = fn (%p0547: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1382: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0547, %p1382, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1928 = %1927(%1926, meta[relay.Constant][183] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1929 = fn (%p0546: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1381: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %1917 = reshape(%p0546, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1918 = squeeze(%1917, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1919 = add(%1918, %p1381) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1920 = reshape(%1919, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1921 = transpose(%1920, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %1922 = broadcast_to(%1921, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%1922, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %1930 = %1916(%1915, meta[relay.Constant][182] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1931 = %1929(%1928, meta[relay.Constant][184] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %1932 = fn (%p0230: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1166: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0230, %p1166, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1933 = %1932(%1930, %1931) /* ty=Tensor[(512, 256, 256), float16] */;
  %1934 = fn (%p0229: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1165: float16 /* ty=float16 */, %p277: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %587 = reshape(%p0229, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %588 = squeeze(%587, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %589 = divide(%588, %p1165) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%589, %p277) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1935 = %1934(%1933, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1936 = fn (%p0228: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %586 = nn.fast_softmax(%p0228) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%586, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %1937 = %1936(%1935) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %1938 = fn (%p0227: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0227, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %1947 = fn (%p0551: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1945 = broadcast_to(%p0551, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1946 = reshape(%1945, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1946, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1948 = %1947(%1911) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1949 = fn (%p0550: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1384: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0550, %p1384, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1950 = %1949(%1948, meta[relay.Constant][185] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1951 = fn (%p0549: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1383: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %1939 = reshape(%p0549, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1940 = squeeze(%1939, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1941 = add(%1940, %p1383) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1942 = reshape(%1941, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1943 = transpose(%1942, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %1944 = broadcast_to(%1943, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%1944, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1952 = %1938(%1937) /* ty=Tensor[(512, 256, 256), float16] */;
  %1953 = %1951(%1950, meta[relay.Constant][186] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %1954 = fn (%p0226: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1164: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0226, %p1164, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1955 = %1954(%1952, %1953) /* ty=Tensor[(512, 256, 64), float16] */;
  %1956 = fn (%p0225: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %581 = reshape(%p0225, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %582 = squeeze(%581, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %583 = transpose(%582, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %584 = reshape(%583, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %585 = broadcast_to(%584, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%585, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1957 = %1956(%1955) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1958 = fn (%p0224: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1163: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0224, %p1163, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1959 = %1958(%1957, meta[relay.Constant][187] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1960 = fn (%p0223: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1162: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p276: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %577 = reshape(%p0223, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %578 = squeeze(%577, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %579 = add(%578, %p1162) /* ty=Tensor[(32, 256, 1024), float16] */;
    %580 = cast(%579, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%580, %p276) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1961 = %1960(%1959, meta[relay.Constant][188] /* ty=Tensor[(1024), float16] */, %1911) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1962 = fn (%p0552: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0552, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1963 = %1962(%1961) /* ty=Tensor[(32, 256, 1), float32] */;
  %1964 = fn (%p0553: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1385: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0553, %p1385, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1965 = %1964(%1961, %1963) /* ty=Tensor[(32, 256, 1), float32] */;
  %1966 = fn (%p0222: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1161: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p275: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p338: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p438: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %572 = add(%p275, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %573 = subtract(%p0222, %p1161) /* ty=Tensor[(32, 256, 1024), float32] */;
    %574 = rsqrt(%572) /* ty=Tensor[(32, 256, 1), float32] */;
    %575 = multiply(%573, %574) /* ty=Tensor[(32, 256, 1024), float32] */;
    %576 = multiply(%575, %p338) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%576, %p438) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1967 = %1966(%1961, %1963, %1965, meta[relay.Constant][189] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][190] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1968 = fn (%p0221: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %570 = broadcast_to(%p0221, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %571 = reshape(%570, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%571, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1969 = %1968(%1967) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1970 = fn (%p0220: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1160: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0220, %p1160, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %1971 = %1970(%1969, meta[relay.Constant][191] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1972 = fn (%p0219: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1159: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p274: float16 /* ty=float16 */, %p337: float16 /* ty=float16 */, %p437: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %561 = reshape(%p0219, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %562 = squeeze(%561, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %563 = add(%562, %p1159) /* ty=Tensor[(32, 256, 4096), float16] */;
    %564 = multiply(%563, %p274) /* ty=Tensor[(32, 256, 4096), float16] */;
    %565 = fast_erf(%564) /* ty=Tensor[(32, 256, 4096), float16] */;
    %566 = multiply(%565, %p337) /* ty=Tensor[(32, 256, 4096), float16] */;
    %567 = add(%p437, %566) /* ty=Tensor[(32, 256, 4096), float16] */;
    %568 = multiply(%563, %567) /* ty=Tensor[(32, 256, 4096), float16] */;
    %569 = broadcast_to(%568, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%569, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %1973 = %1972(%1971, meta[relay.Constant][192] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %1974 = fn (%p0218: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1158: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0218, %p1158, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1975 = %1974(%1973, meta[relay.Constant][193] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1976 = fn (%p0217: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1157: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p273: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %557 = reshape(%p0217, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %558 = squeeze(%557, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %559 = add(%558, %p1157) /* ty=Tensor[(32, 256, 1024), float16] */;
    %560 = cast(%559, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%560, %p273) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1977 = %1976(%1975, meta[relay.Constant][194] /* ty=Tensor[(1024), float16] */, %1967) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1978 = fn (%p0554: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0554, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1979 = %1978(%1977) /* ty=Tensor[(32, 256, 1), float32] */;
  %1980 = fn (%p0555: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1386: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0555, %p1386, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %1981 = %1980(%1977, %1979) /* ty=Tensor[(32, 256, 1), float32] */;
  %1982 = fn (%p0216: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1156: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p272: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p336: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p436: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %552 = add(%p272, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %553 = subtract(%p0216, %p1156) /* ty=Tensor[(32, 256, 1024), float32] */;
    %554 = rsqrt(%552) /* ty=Tensor[(32, 256, 1), float32] */;
    %555 = multiply(%553, %554) /* ty=Tensor[(32, 256, 1024), float32] */;
    %556 = multiply(%555, %p336) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%556, %p436) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %1983 = %1982(%1977, %1979, %1981, meta[relay.Constant][195] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][196] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %1984 = fn (%p0215: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %550 = broadcast_to(%p0215, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %551 = reshape(%550, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%551, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1985 = %1984(%1983) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1986 = fn (%p0214: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1155: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0214, %p1155, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %1987 = %1986(%1985, meta[relay.Constant][197] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1988 = fn (%p0213: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1154: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %544 = reshape(%p0213, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %545 = squeeze(%544, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %546 = add(%545, %p1154) /* ty=Tensor[(32, 256, 1024), float16] */;
    %547 = reshape(%546, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %548 = transpose(%547, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %549 = broadcast_to(%548, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%549, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %1997 = fn (%p0558: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %1995 = broadcast_to(%p0558, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %1996 = reshape(%1995, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%1996, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %1998 = %1997(%1983) /* ty=Tensor[(32, 256, 1024), float16] */;
  %1999 = fn (%p0557: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1388: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0557, %p1388, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2000 = %1999(%1998, meta[relay.Constant][199] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2001 = fn (%p0556: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1387: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %1989 = reshape(%p0556, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1990 = squeeze(%1989, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1991 = add(%1990, %p1387) /* ty=Tensor[(32, 256, 1024), float16] */;
    %1992 = reshape(%1991, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %1993 = transpose(%1992, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %1994 = broadcast_to(%1993, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%1994, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %2002 = %1988(%1987, meta[relay.Constant][198] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2003 = %2001(%2000, meta[relay.Constant][200] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %2004 = fn (%p0212: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1153: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0212, %p1153, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2005 = %2004(%2002, %2003) /* ty=Tensor[(512, 256, 256), float16] */;
  %2006 = fn (%p0211: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1152: float16 /* ty=float16 */, %p271: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %541 = reshape(%p0211, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %542 = squeeze(%541, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %543 = divide(%542, %p1152) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%543, %p271) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2007 = %2006(%2005, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2008 = fn (%p0210: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %540 = nn.fast_softmax(%p0210) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%540, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2009 = %2008(%2007) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2010 = fn (%p0209: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0209, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2019 = fn (%p0561: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2017 = broadcast_to(%p0561, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2018 = reshape(%2017, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2018, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2020 = %2019(%1983) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2021 = fn (%p0560: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1390: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0560, %p1390, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2022 = %2021(%2020, meta[relay.Constant][201] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2023 = fn (%p0559: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1389: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %2011 = reshape(%p0559, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2012 = squeeze(%2011, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2013 = add(%2012, %p1389) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2014 = reshape(%2013, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2015 = transpose(%2014, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %2016 = broadcast_to(%2015, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%2016, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2024 = %2010(%2009) /* ty=Tensor[(512, 256, 256), float16] */;
  %2025 = %2023(%2022, meta[relay.Constant][202] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2026 = fn (%p0208: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1151: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0208, %p1151, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2027 = %2026(%2024, %2025) /* ty=Tensor[(512, 256, 64), float16] */;
  %2028 = fn (%p0207: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %535 = reshape(%p0207, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %536 = squeeze(%535, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %537 = transpose(%536, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %538 = reshape(%537, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %539 = broadcast_to(%538, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%539, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2029 = %2028(%2027) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2030 = fn (%p0206: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1150: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0206, %p1150, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2031 = %2030(%2029, meta[relay.Constant][203] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2032 = fn (%p0205: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1149: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p270: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %531 = reshape(%p0205, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %532 = squeeze(%531, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %533 = add(%532, %p1149) /* ty=Tensor[(32, 256, 1024), float16] */;
    %534 = cast(%533, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%534, %p270) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2033 = %2032(%2031, meta[relay.Constant][204] /* ty=Tensor[(1024), float16] */, %1983) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2034 = fn (%p0562: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0562, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2035 = %2034(%2033) /* ty=Tensor[(32, 256, 1), float32] */;
  %2036 = fn (%p0563: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1391: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0563, %p1391, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2037 = %2036(%2033, %2035) /* ty=Tensor[(32, 256, 1), float32] */;
  %2038 = fn (%p0204: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1148: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p269: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p335: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p435: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %526 = add(%p269, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %527 = subtract(%p0204, %p1148) /* ty=Tensor[(32, 256, 1024), float32] */;
    %528 = rsqrt(%526) /* ty=Tensor[(32, 256, 1), float32] */;
    %529 = multiply(%527, %528) /* ty=Tensor[(32, 256, 1024), float32] */;
    %530 = multiply(%529, %p335) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%530, %p435) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2039 = %2038(%2033, %2035, %2037, meta[relay.Constant][205] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][206] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2040 = fn (%p0203: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %524 = broadcast_to(%p0203, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %525 = reshape(%524, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%525, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2041 = %2040(%2039) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2042 = fn (%p0202: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1147: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0202, %p1147, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %2043 = %2042(%2041, meta[relay.Constant][207] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2044 = fn (%p0201: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1146: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p268: float16 /* ty=float16 */, %p334: float16 /* ty=float16 */, %p434: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %515 = reshape(%p0201, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %516 = squeeze(%515, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %517 = add(%516, %p1146) /* ty=Tensor[(32, 256, 4096), float16] */;
    %518 = multiply(%517, %p268) /* ty=Tensor[(32, 256, 4096), float16] */;
    %519 = fast_erf(%518) /* ty=Tensor[(32, 256, 4096), float16] */;
    %520 = multiply(%519, %p334) /* ty=Tensor[(32, 256, 4096), float16] */;
    %521 = add(%p434, %520) /* ty=Tensor[(32, 256, 4096), float16] */;
    %522 = multiply(%517, %521) /* ty=Tensor[(32, 256, 4096), float16] */;
    %523 = broadcast_to(%522, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%523, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %2045 = %2044(%2043, meta[relay.Constant][208] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2046 = fn (%p0200: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1145: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0200, %p1145, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2047 = %2046(%2045, meta[relay.Constant][209] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2048 = fn (%p0199: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1144: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p267: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %511 = reshape(%p0199, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %512 = squeeze(%511, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %513 = add(%512, %p1144) /* ty=Tensor[(32, 256, 1024), float16] */;
    %514 = cast(%513, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%514, %p267) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2049 = %2048(%2047, meta[relay.Constant][210] /* ty=Tensor[(1024), float16] */, %2039) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2050 = fn (%p0564: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0564, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2051 = %2050(%2049) /* ty=Tensor[(32, 256, 1), float32] */;
  %2052 = fn (%p0565: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1392: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0565, %p1392, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2053 = %2052(%2049, %2051) /* ty=Tensor[(32, 256, 1), float32] */;
  %2054 = fn (%p0198: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1143: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p266: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p333: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p433: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %506 = add(%p266, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %507 = subtract(%p0198, %p1143) /* ty=Tensor[(32, 256, 1024), float32] */;
    %508 = rsqrt(%506) /* ty=Tensor[(32, 256, 1), float32] */;
    %509 = multiply(%507, %508) /* ty=Tensor[(32, 256, 1024), float32] */;
    %510 = multiply(%509, %p333) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%510, %p433) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2055 = %2054(%2049, %2051, %2053, meta[relay.Constant][211] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][212] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2056 = fn (%p0197: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %504 = broadcast_to(%p0197, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %505 = reshape(%504, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%505, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2057 = %2056(%2055) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2058 = fn (%p0196: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1142: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0196, %p1142, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2059 = %2058(%2057, meta[relay.Constant][213] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2060 = fn (%p0195: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1141: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %498 = reshape(%p0195, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %499 = squeeze(%498, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %500 = add(%499, %p1141) /* ty=Tensor[(32, 256, 1024), float16] */;
    %501 = reshape(%500, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %502 = transpose(%501, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %503 = broadcast_to(%502, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%503, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2069 = fn (%p0568: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2067 = broadcast_to(%p0568, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2068 = reshape(%2067, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2068, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2070 = %2069(%2055) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2071 = fn (%p0567: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1394: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0567, %p1394, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2072 = %2071(%2070, meta[relay.Constant][215] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2073 = fn (%p0566: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1393: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %2061 = reshape(%p0566, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2062 = squeeze(%2061, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2063 = add(%2062, %p1393) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2064 = reshape(%2063, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2065 = transpose(%2064, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %2066 = broadcast_to(%2065, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%2066, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %2074 = %2060(%2059, meta[relay.Constant][214] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2075 = %2073(%2072, meta[relay.Constant][216] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %2076 = fn (%p0194: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1140: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0194, %p1140, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2077 = %2076(%2074, %2075) /* ty=Tensor[(512, 256, 256), float16] */;
  %2078 = fn (%p0193: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1139: float16 /* ty=float16 */, %p265: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %495 = reshape(%p0193, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %496 = squeeze(%495, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %497 = divide(%496, %p1139) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%497, %p265) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2079 = %2078(%2077, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2080 = fn (%p0192: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %494 = nn.fast_softmax(%p0192) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%494, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2081 = %2080(%2079) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2082 = fn (%p0191: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0191, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2091 = fn (%p0571: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2089 = broadcast_to(%p0571, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2090 = reshape(%2089, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2090, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2092 = %2091(%2055) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2093 = fn (%p0570: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1396: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0570, %p1396, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2094 = %2093(%2092, meta[relay.Constant][217] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2095 = fn (%p0569: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1395: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %2083 = reshape(%p0569, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2084 = squeeze(%2083, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2085 = add(%2084, %p1395) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2086 = reshape(%2085, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2087 = transpose(%2086, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %2088 = broadcast_to(%2087, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%2088, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2096 = %2082(%2081) /* ty=Tensor[(512, 256, 256), float16] */;
  %2097 = %2095(%2094, meta[relay.Constant][218] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2098 = fn (%p0190: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1138: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0190, %p1138, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2099 = %2098(%2096, %2097) /* ty=Tensor[(512, 256, 64), float16] */;
  %2100 = fn (%p0189: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %489 = reshape(%p0189, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %490 = squeeze(%489, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %491 = transpose(%490, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %492 = reshape(%491, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %493 = broadcast_to(%492, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%493, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2101 = %2100(%2099) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2102 = fn (%p0188: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1137: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0188, %p1137, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2103 = %2102(%2101, meta[relay.Constant][219] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2104 = fn (%p0187: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1136: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p264: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %485 = reshape(%p0187, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %486 = squeeze(%485, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %487 = add(%486, %p1136) /* ty=Tensor[(32, 256, 1024), float16] */;
    %488 = cast(%487, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%488, %p264) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2105 = %2104(%2103, meta[relay.Constant][220] /* ty=Tensor[(1024), float16] */, %2055) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2106 = fn (%p0572: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0572, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2107 = %2106(%2105) /* ty=Tensor[(32, 256, 1), float32] */;
  %2108 = fn (%p0573: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1397: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0573, %p1397, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2109 = %2108(%2105, %2107) /* ty=Tensor[(32, 256, 1), float32] */;
  %2110 = fn (%p0186: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1135: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p263: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p332: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p432: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %480 = add(%p263, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %481 = subtract(%p0186, %p1135) /* ty=Tensor[(32, 256, 1024), float32] */;
    %482 = rsqrt(%480) /* ty=Tensor[(32, 256, 1), float32] */;
    %483 = multiply(%481, %482) /* ty=Tensor[(32, 256, 1024), float32] */;
    %484 = multiply(%483, %p332) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%484, %p432) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2111 = %2110(%2105, %2107, %2109, meta[relay.Constant][221] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][222] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2112 = fn (%p0185: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %478 = broadcast_to(%p0185, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %479 = reshape(%478, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%479, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2113 = %2112(%2111) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2114 = fn (%p0184: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1134: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0184, %p1134, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %2115 = %2114(%2113, meta[relay.Constant][223] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2116 = fn (%p0183: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1133: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p262: float16 /* ty=float16 */, %p331: float16 /* ty=float16 */, %p431: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %469 = reshape(%p0183, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %470 = squeeze(%469, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %471 = add(%470, %p1133) /* ty=Tensor[(32, 256, 4096), float16] */;
    %472 = multiply(%471, %p262) /* ty=Tensor[(32, 256, 4096), float16] */;
    %473 = fast_erf(%472) /* ty=Tensor[(32, 256, 4096), float16] */;
    %474 = multiply(%473, %p331) /* ty=Tensor[(32, 256, 4096), float16] */;
    %475 = add(%p431, %474) /* ty=Tensor[(32, 256, 4096), float16] */;
    %476 = multiply(%471, %475) /* ty=Tensor[(32, 256, 4096), float16] */;
    %477 = broadcast_to(%476, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%477, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %2117 = %2116(%2115, meta[relay.Constant][224] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2118 = fn (%p0182: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1132: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0182, %p1132, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2119 = %2118(%2117, meta[relay.Constant][225] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2120 = fn (%p0181: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1131: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p261: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %465 = reshape(%p0181, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %466 = squeeze(%465, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %467 = add(%466, %p1131) /* ty=Tensor[(32, 256, 1024), float16] */;
    %468 = cast(%467, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%468, %p261) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2121 = %2120(%2119, meta[relay.Constant][226] /* ty=Tensor[(1024), float16] */, %2111) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2122 = fn (%p0574: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0574, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2123 = %2122(%2121) /* ty=Tensor[(32, 256, 1), float32] */;
  %2124 = fn (%p0575: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1398: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0575, %p1398, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2125 = %2124(%2121, %2123) /* ty=Tensor[(32, 256, 1), float32] */;
  %2126 = fn (%p0180: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1130: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p260: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p330: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p430: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %460 = add(%p260, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %461 = subtract(%p0180, %p1130) /* ty=Tensor[(32, 256, 1024), float32] */;
    %462 = rsqrt(%460) /* ty=Tensor[(32, 256, 1), float32] */;
    %463 = multiply(%461, %462) /* ty=Tensor[(32, 256, 1024), float32] */;
    %464 = multiply(%463, %p330) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%464, %p430) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2127 = %2126(%2121, %2123, %2125, meta[relay.Constant][227] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][228] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2128 = fn (%p0179: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %458 = broadcast_to(%p0179, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %459 = reshape(%458, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%459, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2129 = %2128(%2127) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2130 = fn (%p0178: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1129: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0178, %p1129, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2131 = %2130(%2129, meta[relay.Constant][229] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2132 = fn (%p0177: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1128: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %452 = reshape(%p0177, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %453 = squeeze(%452, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %454 = add(%453, %p1128) /* ty=Tensor[(32, 256, 1024), float16] */;
    %455 = reshape(%454, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %456 = transpose(%455, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %457 = broadcast_to(%456, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%457, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2141 = fn (%p0578: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2139 = broadcast_to(%p0578, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2140 = reshape(%2139, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2140, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2142 = %2141(%2127) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2143 = fn (%p0577: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1400: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0577, %p1400, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2144 = %2143(%2142, meta[relay.Constant][231] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2145 = fn (%p0576: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1399: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %2133 = reshape(%p0576, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2134 = squeeze(%2133, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2135 = add(%2134, %p1399) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2136 = reshape(%2135, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2137 = transpose(%2136, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %2138 = broadcast_to(%2137, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%2138, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %2146 = %2132(%2131, meta[relay.Constant][230] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2147 = %2145(%2144, meta[relay.Constant][232] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %2148 = fn (%p0176: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1127: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0176, %p1127, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2149 = %2148(%2146, %2147) /* ty=Tensor[(512, 256, 256), float16] */;
  %2150 = fn (%p0175: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1126: float16 /* ty=float16 */, %p259: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %449 = reshape(%p0175, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %450 = squeeze(%449, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %451 = divide(%450, %p1126) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%451, %p259) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2151 = %2150(%2149, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2152 = fn (%p0174: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %448 = nn.fast_softmax(%p0174) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%448, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2153 = %2152(%2151) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2154 = fn (%p0173: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0173, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2163 = fn (%p0581: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2161 = broadcast_to(%p0581, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2162 = reshape(%2161, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2162, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2164 = %2163(%2127) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2165 = fn (%p0580: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1402: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0580, %p1402, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2166 = %2165(%2164, meta[relay.Constant][233] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2167 = fn (%p0579: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1401: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %2155 = reshape(%p0579, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2156 = squeeze(%2155, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2157 = add(%2156, %p1401) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2158 = reshape(%2157, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2159 = transpose(%2158, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %2160 = broadcast_to(%2159, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%2160, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2168 = %2154(%2153) /* ty=Tensor[(512, 256, 256), float16] */;
  %2169 = %2167(%2166, meta[relay.Constant][234] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2170 = fn (%p0172: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1125: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0172, %p1125, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2171 = %2170(%2168, %2169) /* ty=Tensor[(512, 256, 64), float16] */;
  %2172 = fn (%p0171: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %443 = reshape(%p0171, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %444 = squeeze(%443, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %445 = transpose(%444, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %446 = reshape(%445, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %447 = broadcast_to(%446, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%447, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2173 = %2172(%2171) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2174 = fn (%p0170: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1124: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0170, %p1124, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2175 = %2174(%2173, meta[relay.Constant][235] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2176 = fn (%p0169: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1123: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p258: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %439 = reshape(%p0169, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %440 = squeeze(%439, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %441 = add(%440, %p1123) /* ty=Tensor[(32, 256, 1024), float16] */;
    %442 = cast(%441, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%442, %p258) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2177 = %2176(%2175, meta[relay.Constant][236] /* ty=Tensor[(1024), float16] */, %2127) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2178 = fn (%p0582: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0582, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2179 = %2178(%2177) /* ty=Tensor[(32, 256, 1), float32] */;
  %2180 = fn (%p0583: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1403: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0583, %p1403, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2181 = %2180(%2177, %2179) /* ty=Tensor[(32, 256, 1), float32] */;
  %2182 = fn (%p0168: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1122: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p257: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p329: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p429: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %434 = add(%p257, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %435 = subtract(%p0168, %p1122) /* ty=Tensor[(32, 256, 1024), float32] */;
    %436 = rsqrt(%434) /* ty=Tensor[(32, 256, 1), float32] */;
    %437 = multiply(%435, %436) /* ty=Tensor[(32, 256, 1024), float32] */;
    %438 = multiply(%437, %p329) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%438, %p429) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2183 = %2182(%2177, %2179, %2181, meta[relay.Constant][237] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][238] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2184 = fn (%p0167: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %432 = broadcast_to(%p0167, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %433 = reshape(%432, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%433, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2185 = %2184(%2183) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2186 = fn (%p0166: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1121: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0166, %p1121, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %2187 = %2186(%2185, meta[relay.Constant][239] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2188 = fn (%p0165: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1120: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p256: float16 /* ty=float16 */, %p328: float16 /* ty=float16 */, %p428: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %423 = reshape(%p0165, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %424 = squeeze(%423, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %425 = add(%424, %p1120) /* ty=Tensor[(32, 256, 4096), float16] */;
    %426 = multiply(%425, %p256) /* ty=Tensor[(32, 256, 4096), float16] */;
    %427 = fast_erf(%426) /* ty=Tensor[(32, 256, 4096), float16] */;
    %428 = multiply(%427, %p328) /* ty=Tensor[(32, 256, 4096), float16] */;
    %429 = add(%p428, %428) /* ty=Tensor[(32, 256, 4096), float16] */;
    %430 = multiply(%425, %429) /* ty=Tensor[(32, 256, 4096), float16] */;
    %431 = broadcast_to(%430, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%431, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %2189 = %2188(%2187, meta[relay.Constant][240] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2190 = fn (%p0164: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1119: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0164, %p1119, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2191 = %2190(%2189, meta[relay.Constant][241] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2192 = fn (%p0163: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1118: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p255: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %419 = reshape(%p0163, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %420 = squeeze(%419, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %421 = add(%420, %p1118) /* ty=Tensor[(32, 256, 1024), float16] */;
    %422 = cast(%421, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%422, %p255) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2193 = %2192(%2191, meta[relay.Constant][242] /* ty=Tensor[(1024), float16] */, %2183) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2194 = fn (%p0584: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0584, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2195 = %2194(%2193) /* ty=Tensor[(32, 256, 1), float32] */;
  %2196 = fn (%p0585: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1404: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0585, %p1404, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2197 = %2196(%2193, %2195) /* ty=Tensor[(32, 256, 1), float32] */;
  %2198 = fn (%p0162: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1117: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p254: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p327: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p427: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %414 = add(%p254, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %415 = subtract(%p0162, %p1117) /* ty=Tensor[(32, 256, 1024), float32] */;
    %416 = rsqrt(%414) /* ty=Tensor[(32, 256, 1), float32] */;
    %417 = multiply(%415, %416) /* ty=Tensor[(32, 256, 1024), float32] */;
    %418 = multiply(%417, %p327) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%418, %p427) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2199 = %2198(%2193, %2195, %2197, meta[relay.Constant][243] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][244] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2200 = fn (%p0161: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %412 = broadcast_to(%p0161, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %413 = reshape(%412, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%413, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2201 = %2200(%2199) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2202 = fn (%p0160: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1116: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0160, %p1116, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2203 = %2202(%2201, meta[relay.Constant][245] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2204 = fn (%p0159: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1115: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %406 = reshape(%p0159, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %407 = squeeze(%406, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %408 = add(%407, %p1115) /* ty=Tensor[(32, 256, 1024), float16] */;
    %409 = reshape(%408, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %410 = transpose(%409, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %411 = broadcast_to(%410, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%411, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2213 = fn (%p0588: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2211 = broadcast_to(%p0588, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2212 = reshape(%2211, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2212, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2214 = %2213(%2199) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2215 = fn (%p0587: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1406: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0587, %p1406, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2216 = %2215(%2214, meta[relay.Constant][247] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2217 = fn (%p0586: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1405: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %2205 = reshape(%p0586, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2206 = squeeze(%2205, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2207 = add(%2206, %p1405) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2208 = reshape(%2207, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2209 = transpose(%2208, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %2210 = broadcast_to(%2209, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%2210, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %2218 = %2204(%2203, meta[relay.Constant][246] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2219 = %2217(%2216, meta[relay.Constant][248] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %2220 = fn (%p0158: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1114: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0158, %p1114, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2221 = %2220(%2218, %2219) /* ty=Tensor[(512, 256, 256), float16] */;
  %2222 = fn (%p0157: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1113: float16 /* ty=float16 */, %p253: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %403 = reshape(%p0157, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %404 = squeeze(%403, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %405 = divide(%404, %p1113) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%405, %p253) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2223 = %2222(%2221, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2224 = fn (%p0156: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %402 = nn.fast_softmax(%p0156) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%402, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2225 = %2224(%2223) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2226 = fn (%p0155: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0155, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2235 = fn (%p0591: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2233 = broadcast_to(%p0591, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2234 = reshape(%2233, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2234, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2236 = %2235(%2199) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2237 = fn (%p0590: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1408: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0590, %p1408, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2238 = %2237(%2236, meta[relay.Constant][249] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2239 = fn (%p0589: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1407: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %2227 = reshape(%p0589, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2228 = squeeze(%2227, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2229 = add(%2228, %p1407) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2230 = reshape(%2229, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2231 = transpose(%2230, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %2232 = broadcast_to(%2231, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%2232, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2240 = %2226(%2225) /* ty=Tensor[(512, 256, 256), float16] */;
  %2241 = %2239(%2238, meta[relay.Constant][250] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2242 = fn (%p0154: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1112: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0154, %p1112, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2243 = %2242(%2240, %2241) /* ty=Tensor[(512, 256, 64), float16] */;
  %2244 = fn (%p0153: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %397 = reshape(%p0153, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %398 = squeeze(%397, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %399 = transpose(%398, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %400 = reshape(%399, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %401 = broadcast_to(%400, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%401, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2245 = %2244(%2243) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2246 = fn (%p0152: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1111: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0152, %p1111, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2247 = %2246(%2245, meta[relay.Constant][251] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2248 = fn (%p0151: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1110: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p252: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %393 = reshape(%p0151, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %394 = squeeze(%393, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %395 = add(%394, %p1110) /* ty=Tensor[(32, 256, 1024), float16] */;
    %396 = cast(%395, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%396, %p252) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2249 = %2248(%2247, meta[relay.Constant][252] /* ty=Tensor[(1024), float16] */, %2199) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2250 = fn (%p0592: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0592, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2251 = %2250(%2249) /* ty=Tensor[(32, 256, 1), float32] */;
  %2252 = fn (%p0593: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1409: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0593, %p1409, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2253 = %2252(%2249, %2251) /* ty=Tensor[(32, 256, 1), float32] */;
  %2254 = fn (%p0150: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1109: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p251: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p326: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p426: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %388 = add(%p251, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %389 = subtract(%p0150, %p1109) /* ty=Tensor[(32, 256, 1024), float32] */;
    %390 = rsqrt(%388) /* ty=Tensor[(32, 256, 1), float32] */;
    %391 = multiply(%389, %390) /* ty=Tensor[(32, 256, 1024), float32] */;
    %392 = multiply(%391, %p326) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%392, %p426) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2255 = %2254(%2249, %2251, %2253, meta[relay.Constant][253] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][254] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2256 = fn (%p0149: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %386 = broadcast_to(%p0149, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %387 = reshape(%386, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%387, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2257 = %2256(%2255) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2258 = fn (%p0148: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1108: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0148, %p1108, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %2259 = %2258(%2257, meta[relay.Constant][255] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2260 = fn (%p0147: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1107: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p250: float16 /* ty=float16 */, %p325: float16 /* ty=float16 */, %p425: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %377 = reshape(%p0147, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %378 = squeeze(%377, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %379 = add(%378, %p1107) /* ty=Tensor[(32, 256, 4096), float16] */;
    %380 = multiply(%379, %p250) /* ty=Tensor[(32, 256, 4096), float16] */;
    %381 = fast_erf(%380) /* ty=Tensor[(32, 256, 4096), float16] */;
    %382 = multiply(%381, %p325) /* ty=Tensor[(32, 256, 4096), float16] */;
    %383 = add(%p425, %382) /* ty=Tensor[(32, 256, 4096), float16] */;
    %384 = multiply(%379, %383) /* ty=Tensor[(32, 256, 4096), float16] */;
    %385 = broadcast_to(%384, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%385, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %2261 = %2260(%2259, meta[relay.Constant][256] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2262 = fn (%p0146: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p1106: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0146, %p1106, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2263 = %2262(%2261, meta[relay.Constant][257] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2264 = fn (%p0145: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1105: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p249: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %373 = reshape(%p0145, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %374 = squeeze(%373, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %375 = add(%374, %p1105) /* ty=Tensor[(32, 256, 1024), float16] */;
    %376 = cast(%375, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%376, %p249) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2265 = %2264(%2263, meta[relay.Constant][258] /* ty=Tensor[(1024), float16] */, %2255) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2266 = fn (%p0594: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0594, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2267 = %2266(%2265) /* ty=Tensor[(32, 256, 1), float32] */;
  %2268 = fn (%p0595: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1410: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0595, %p1410, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2269 = %2268(%2265, %2267) /* ty=Tensor[(32, 256, 1), float32] */;
  %2270 = fn (%p0144: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1104: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p248: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p324: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p424: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %368 = add(%p248, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %369 = subtract(%p0144, %p1104) /* ty=Tensor[(32, 256, 1024), float32] */;
    %370 = rsqrt(%368) /* ty=Tensor[(32, 256, 1), float32] */;
    %371 = multiply(%369, %370) /* ty=Tensor[(32, 256, 1024), float32] */;
    %372 = multiply(%371, %p324) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%372, %p424) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2271 = %2270(%2265, %2267, %2269, meta[relay.Constant][259] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][260] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2272 = fn (%p0143: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %366 = broadcast_to(%p0143, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %367 = reshape(%366, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%367, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2273 = %2272(%2271) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2274 = fn (%p0142: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1103: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0142, %p1103, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2275 = %2274(%2273, meta[relay.Constant][261] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2276 = fn (%p0141: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1102: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %360 = reshape(%p0141, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %361 = squeeze(%360, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %362 = add(%361, %p1102) /* ty=Tensor[(32, 256, 1024), float16] */;
    %363 = reshape(%362, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %364 = transpose(%363, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %365 = broadcast_to(%364, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%365, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2285 = fn (%p0598: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2283 = broadcast_to(%p0598, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2284 = reshape(%2283, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2284, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2286 = %2285(%2271) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2287 = fn (%p0597: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1412: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0597, %p1412, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2288 = %2287(%2286, meta[relay.Constant][263] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2289 = fn (%p0596: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1411: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %2277 = reshape(%p0596, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2278 = squeeze(%2277, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2279 = add(%2278, %p1411) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2280 = reshape(%2279, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2281 = transpose(%2280, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %2282 = broadcast_to(%2281, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%2282, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %2290 = %2276(%2275, meta[relay.Constant][262] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2291 = %2289(%2288, meta[relay.Constant][264] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %2292 = fn (%p0140: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p1101: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0140, %p1101, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2293 = %2292(%2290, %2291) /* ty=Tensor[(512, 256, 256), float16] */;
  %2294 = fn (%p0139: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p1100: float16 /* ty=float16 */, %p247: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %357 = reshape(%p0139, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %358 = squeeze(%357, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %359 = divide(%358, %p1100) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%359, %p247) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2295 = %2294(%2293, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2296 = fn (%p0138: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %356 = nn.fast_softmax(%p0138) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%356, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2297 = %2296(%2295) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2298 = fn (%p0137: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0137, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2307 = fn (%p0601: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2305 = broadcast_to(%p0601, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2306 = reshape(%2305, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2306, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2308 = %2307(%2271) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2309 = fn (%p0600: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1414: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0600, %p1414, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2310 = %2309(%2308, meta[relay.Constant][265] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2311 = fn (%p0599: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1413: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %2299 = reshape(%p0599, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2300 = squeeze(%2299, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2301 = add(%2300, %p1413) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2302 = reshape(%2301, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2303 = transpose(%2302, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %2304 = broadcast_to(%2303, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%2304, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2312 = %2298(%2297) /* ty=Tensor[(512, 256, 256), float16] */;
  %2313 = %2311(%2310, meta[relay.Constant][266] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2314 = fn (%p0136: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p199: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0136, %p199, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2315 = %2314(%2312, %2313) /* ty=Tensor[(512, 256, 64), float16] */;
  %2316 = fn (%p0135: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %351 = reshape(%p0135, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %352 = squeeze(%351, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %353 = transpose(%352, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %354 = reshape(%353, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %355 = broadcast_to(%354, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%355, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2317 = %2316(%2315) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2318 = fn (%p0134: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p198: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0134, %p198, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2319 = %2318(%2317, meta[relay.Constant][267] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2320 = fn (%p0133: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p197: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p246: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %347 = reshape(%p0133, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %348 = squeeze(%347, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %349 = add(%348, %p197) /* ty=Tensor[(32, 256, 1024), float16] */;
    %350 = cast(%349, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%350, %p246) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2321 = %2320(%2319, meta[relay.Constant][268] /* ty=Tensor[(1024), float16] */, %2271) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2322 = fn (%p0602: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0602, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2323 = %2322(%2321) /* ty=Tensor[(32, 256, 1), float32] */;
  %2324 = fn (%p0603: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1415: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0603, %p1415, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2325 = %2324(%2321, %2323) /* ty=Tensor[(32, 256, 1), float32] */;
  %2326 = fn (%p0132: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p196: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p245: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p323: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p423: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %342 = add(%p245, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %343 = subtract(%p0132, %p196) /* ty=Tensor[(32, 256, 1024), float32] */;
    %344 = rsqrt(%342) /* ty=Tensor[(32, 256, 1), float32] */;
    %345 = multiply(%343, %344) /* ty=Tensor[(32, 256, 1024), float32] */;
    %346 = multiply(%345, %p323) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%346, %p423) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2327 = %2326(%2321, %2323, %2325, meta[relay.Constant][269] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][270] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2328 = fn (%p0131: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %340 = broadcast_to(%p0131, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %341 = reshape(%340, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%341, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2329 = %2328(%2327) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2330 = fn (%p0130: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p195: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0130, %p195, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %2331 = %2330(%2329, meta[relay.Constant][271] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2332 = fn (%p0129: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p194: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p244: float16 /* ty=float16 */, %p322: float16 /* ty=float16 */, %p422: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %331 = reshape(%p0129, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %332 = squeeze(%331, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %333 = add(%332, %p194) /* ty=Tensor[(32, 256, 4096), float16] */;
    %334 = multiply(%333, %p244) /* ty=Tensor[(32, 256, 4096), float16] */;
    %335 = fast_erf(%334) /* ty=Tensor[(32, 256, 4096), float16] */;
    %336 = multiply(%335, %p322) /* ty=Tensor[(32, 256, 4096), float16] */;
    %337 = add(%p422, %336) /* ty=Tensor[(32, 256, 4096), float16] */;
    %338 = multiply(%333, %337) /* ty=Tensor[(32, 256, 4096), float16] */;
    %339 = broadcast_to(%338, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%339, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %2333 = %2332(%2331, meta[relay.Constant][272] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2334 = fn (%p0128: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p193: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0128, %p193, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2335 = %2334(%2333, meta[relay.Constant][273] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2336 = fn (%p0127: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p192: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p243: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %327 = reshape(%p0127, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %328 = squeeze(%327, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %329 = add(%328, %p192) /* ty=Tensor[(32, 256, 1024), float16] */;
    %330 = cast(%329, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%330, %p243) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2337 = %2336(%2335, meta[relay.Constant][274] /* ty=Tensor[(1024), float16] */, %2327) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2338 = fn (%p0604: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0604, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2339 = %2338(%2337) /* ty=Tensor[(32, 256, 1), float32] */;
  %2340 = fn (%p0605: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1416: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0605, %p1416, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2341 = %2340(%2337, %2339) /* ty=Tensor[(32, 256, 1), float32] */;
  %2342 = fn (%p0126: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p191: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p242: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p321: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p421: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %322 = add(%p242, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %323 = subtract(%p0126, %p191) /* ty=Tensor[(32, 256, 1024), float32] */;
    %324 = rsqrt(%322) /* ty=Tensor[(32, 256, 1), float32] */;
    %325 = multiply(%323, %324) /* ty=Tensor[(32, 256, 1024), float32] */;
    %326 = multiply(%325, %p321) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%326, %p421) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2343 = %2342(%2337, %2339, %2341, meta[relay.Constant][275] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][276] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2344 = fn (%p0125: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %320 = broadcast_to(%p0125, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %321 = reshape(%320, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%321, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2345 = %2344(%2343) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2346 = fn (%p0124: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p190: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0124, %p190, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2347 = %2346(%2345, meta[relay.Constant][277] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2348 = fn (%p0123: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p189: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %314 = reshape(%p0123, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %315 = squeeze(%314, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %316 = add(%315, %p189) /* ty=Tensor[(32, 256, 1024), float16] */;
    %317 = reshape(%316, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %318 = transpose(%317, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %319 = broadcast_to(%318, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%319, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2357 = fn (%p0608: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2355 = broadcast_to(%p0608, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2356 = reshape(%2355, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2356, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2358 = %2357(%2343) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2359 = fn (%p0607: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1418: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0607, %p1418, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2360 = %2359(%2358, meta[relay.Constant][279] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2361 = fn (%p0606: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1417: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %2349 = reshape(%p0606, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2350 = squeeze(%2349, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2351 = add(%2350, %p1417) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2352 = reshape(%2351, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2353 = transpose(%2352, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %2354 = broadcast_to(%2353, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%2354, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %2362 = %2348(%2347, meta[relay.Constant][278] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2363 = %2361(%2360, meta[relay.Constant][280] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %2364 = fn (%p0122: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p188: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0122, %p188, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2365 = %2364(%2362, %2363) /* ty=Tensor[(512, 256, 256), float16] */;
  %2366 = fn (%p0121: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p187: float16 /* ty=float16 */, %p241: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %311 = reshape(%p0121, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %312 = squeeze(%311, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %313 = divide(%312, %p187) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%313, %p241) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2367 = %2366(%2365, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2368 = fn (%p0120: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %310 = nn.fast_softmax(%p0120) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%310, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2369 = %2368(%2367) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2370 = fn (%p0119: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0119, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2379 = fn (%p0611: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2377 = broadcast_to(%p0611, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2378 = reshape(%2377, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2378, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2380 = %2379(%2343) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2381 = fn (%p0610: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1420: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0610, %p1420, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2382 = %2381(%2380, meta[relay.Constant][281] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2383 = fn (%p0609: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1419: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %2371 = reshape(%p0609, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2372 = squeeze(%2371, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2373 = add(%2372, %p1419) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2374 = reshape(%2373, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2375 = transpose(%2374, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %2376 = broadcast_to(%2375, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%2376, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2384 = %2370(%2369) /* ty=Tensor[(512, 256, 256), float16] */;
  %2385 = %2383(%2382, meta[relay.Constant][282] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2386 = fn (%p0118: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p186: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0118, %p186, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2387 = %2386(%2384, %2385) /* ty=Tensor[(512, 256, 64), float16] */;
  %2388 = fn (%p0117: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %305 = reshape(%p0117, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %306 = squeeze(%305, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %307 = transpose(%306, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %308 = reshape(%307, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %309 = broadcast_to(%308, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%309, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2389 = %2388(%2387) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2390 = fn (%p0116: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p185: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0116, %p185, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2391 = %2390(%2389, meta[relay.Constant][283] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2392 = fn (%p0115: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p184: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p240: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %301 = reshape(%p0115, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %302 = squeeze(%301, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %303 = add(%302, %p184) /* ty=Tensor[(32, 256, 1024), float16] */;
    %304 = cast(%303, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%304, %p240) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2393 = %2392(%2391, meta[relay.Constant][284] /* ty=Tensor[(1024), float16] */, %2343) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2394 = fn (%p0612: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0612, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2395 = %2394(%2393) /* ty=Tensor[(32, 256, 1), float32] */;
  %2396 = fn (%p0613: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1421: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0613, %p1421, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2397 = %2396(%2393, %2395) /* ty=Tensor[(32, 256, 1), float32] */;
  %2398 = fn (%p0114: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p183: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p239: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p320: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p420: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %296 = add(%p239, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %297 = subtract(%p0114, %p183) /* ty=Tensor[(32, 256, 1024), float32] */;
    %298 = rsqrt(%296) /* ty=Tensor[(32, 256, 1), float32] */;
    %299 = multiply(%297, %298) /* ty=Tensor[(32, 256, 1024), float32] */;
    %300 = multiply(%299, %p320) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%300, %p420) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2399 = %2398(%2393, %2395, %2397, meta[relay.Constant][285] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][286] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2400 = fn (%p0113: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %294 = broadcast_to(%p0113, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %295 = reshape(%294, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%295, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2401 = %2400(%2399) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2402 = fn (%p0112: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p182: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p0112, %p182, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %2403 = %2402(%2401, meta[relay.Constant][287] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2404 = fn (%p0111: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p181: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p238: float16 /* ty=float16 */, %p319: float16 /* ty=float16 */, %p419: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %285 = reshape(%p0111, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %286 = squeeze(%285, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %287 = add(%286, %p181) /* ty=Tensor[(32, 256, 4096), float16] */;
    %288 = multiply(%287, %p238) /* ty=Tensor[(32, 256, 4096), float16] */;
    %289 = fast_erf(%288) /* ty=Tensor[(32, 256, 4096), float16] */;
    %290 = multiply(%289, %p319) /* ty=Tensor[(32, 256, 4096), float16] */;
    %291 = add(%p419, %290) /* ty=Tensor[(32, 256, 4096), float16] */;
    %292 = multiply(%287, %291) /* ty=Tensor[(32, 256, 4096), float16] */;
    %293 = broadcast_to(%292, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%293, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %2405 = %2404(%2403, meta[relay.Constant][288] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2406 = fn (%p0110: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p180: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0110, %p180, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2407 = %2406(%2405, meta[relay.Constant][289] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2408 = fn (%p0109: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p179: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p237: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %281 = reshape(%p0109, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %282 = squeeze(%281, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %283 = add(%282, %p179) /* ty=Tensor[(32, 256, 1024), float16] */;
    %284 = cast(%283, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%284, %p237) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2409 = %2408(%2407, meta[relay.Constant][290] /* ty=Tensor[(1024), float16] */, %2399) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2410 = fn (%p0614: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0614, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2411 = %2410(%2409) /* ty=Tensor[(32, 256, 1), float32] */;
  %2412 = fn (%p0615: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1422: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0615, %p1422, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2413 = %2412(%2409, %2411) /* ty=Tensor[(32, 256, 1), float32] */;
  %2414 = fn (%p0108: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p178: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p236: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p318: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p418: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %276 = add(%p236, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %277 = subtract(%p0108, %p178) /* ty=Tensor[(32, 256, 1024), float32] */;
    %278 = rsqrt(%276) /* ty=Tensor[(32, 256, 1), float32] */;
    %279 = multiply(%277, %278) /* ty=Tensor[(32, 256, 1024), float32] */;
    %280 = multiply(%279, %p318) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%280, %p418) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2415 = %2414(%2409, %2411, %2413, meta[relay.Constant][291] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][292] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2416 = fn (%p0107: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %274 = broadcast_to(%p0107, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %275 = reshape(%274, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%275, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2417 = %2416(%2415) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2418 = fn (%p0106: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p177: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0106, %p177, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2419 = %2418(%2417, meta[relay.Constant][293] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2420 = fn (%p0105: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p176: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %268 = reshape(%p0105, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %269 = squeeze(%268, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %270 = add(%269, %p176) /* ty=Tensor[(32, 256, 1024), float16] */;
    %271 = reshape(%270, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %272 = transpose(%271, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %273 = broadcast_to(%272, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%273, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2429 = fn (%p0618: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2427 = broadcast_to(%p0618, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2428 = reshape(%2427, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2428, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2430 = %2429(%2415) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2431 = fn (%p0617: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1424: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0617, %p1424, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2432 = %2431(%2430, meta[relay.Constant][295] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2433 = fn (%p0616: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1423: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %2421 = reshape(%p0616, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2422 = squeeze(%2421, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2423 = add(%2422, %p1423) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2424 = reshape(%2423, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2425 = transpose(%2424, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %2426 = broadcast_to(%2425, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%2426, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %2434 = %2420(%2419, meta[relay.Constant][294] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2435 = %2433(%2432, meta[relay.Constant][296] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %2436 = fn (%p0104: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p175: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p0104, %p175, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2437 = %2436(%2434, %2435) /* ty=Tensor[(512, 256, 256), float16] */;
  %2438 = fn (%p0103: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p174: float16 /* ty=float16 */, %p235: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %265 = reshape(%p0103, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %266 = squeeze(%265, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %267 = divide(%266, %p174) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%267, %p235) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2439 = %2438(%2437, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2440 = fn (%p0102: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %264 = nn.fast_softmax(%p0102) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%264, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2441 = %2440(%2439) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2442 = fn (%p0101: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p0101, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2451 = fn (%p0621: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2449 = broadcast_to(%p0621, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2450 = reshape(%2449, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2450, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2452 = %2451(%2415) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2453 = fn (%p0620: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1426: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0620, %p1426, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2454 = %2453(%2452, meta[relay.Constant][297] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2455 = fn (%p0619: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1425: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %2443 = reshape(%p0619, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2444 = squeeze(%2443, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2445 = add(%2444, %p1425) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2446 = reshape(%2445, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2447 = transpose(%2446, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %2448 = broadcast_to(%2447, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%2448, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2456 = %2442(%2441) /* ty=Tensor[(512, 256, 256), float16] */;
  %2457 = %2455(%2454, meta[relay.Constant][298] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2458 = fn (%p0100: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p173: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p0100, %p173, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2459 = %2458(%2456, %2457) /* ty=Tensor[(512, 256, 64), float16] */;
  %2460 = fn (%p099: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %259 = reshape(%p099, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %260 = squeeze(%259, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %261 = transpose(%260, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %262 = reshape(%261, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %263 = broadcast_to(%262, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%263, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2461 = %2460(%2459) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2462 = fn (%p098: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p172: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p098, %p172, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2463 = %2462(%2461, meta[relay.Constant][299] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2464 = fn (%p097: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p171: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p234: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %255 = reshape(%p097, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %256 = squeeze(%255, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %257 = add(%256, %p171) /* ty=Tensor[(32, 256, 1024), float16] */;
    %258 = cast(%257, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%258, %p234) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2465 = %2464(%2463, meta[relay.Constant][300] /* ty=Tensor[(1024), float16] */, %2415) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2466 = fn (%p0622: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0622, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2467 = %2466(%2465) /* ty=Tensor[(32, 256, 1), float32] */;
  %2468 = fn (%p0623: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1427: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0623, %p1427, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2469 = %2468(%2465, %2467) /* ty=Tensor[(32, 256, 1), float32] */;
  %2470 = fn (%p096: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p170: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p233: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p317: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p417: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %250 = add(%p233, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %251 = subtract(%p096, %p170) /* ty=Tensor[(32, 256, 1024), float32] */;
    %252 = rsqrt(%250) /* ty=Tensor[(32, 256, 1), float32] */;
    %253 = multiply(%251, %252) /* ty=Tensor[(32, 256, 1024), float32] */;
    %254 = multiply(%253, %p317) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%254, %p417) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2471 = %2470(%2465, %2467, %2469, meta[relay.Constant][301] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][302] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2472 = fn (%p095: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %248 = broadcast_to(%p095, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %249 = reshape(%248, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%249, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2473 = %2472(%2471) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2474 = fn (%p094: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p169: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p094, %p169, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %2475 = %2474(%2473, meta[relay.Constant][303] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2476 = fn (%p093: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p168: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p232: float16 /* ty=float16 */, %p316: float16 /* ty=float16 */, %p416: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %239 = reshape(%p093, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %240 = squeeze(%239, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %241 = add(%240, %p168) /* ty=Tensor[(32, 256, 4096), float16] */;
    %242 = multiply(%241, %p232) /* ty=Tensor[(32, 256, 4096), float16] */;
    %243 = fast_erf(%242) /* ty=Tensor[(32, 256, 4096), float16] */;
    %244 = multiply(%243, %p316) /* ty=Tensor[(32, 256, 4096), float16] */;
    %245 = add(%p416, %244) /* ty=Tensor[(32, 256, 4096), float16] */;
    %246 = multiply(%241, %245) /* ty=Tensor[(32, 256, 4096), float16] */;
    %247 = broadcast_to(%246, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%247, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %2477 = %2476(%2475, meta[relay.Constant][304] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2478 = fn (%p092: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p167: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p092, %p167, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2479 = %2478(%2477, meta[relay.Constant][305] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2480 = fn (%p091: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p166: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p231: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %235 = reshape(%p091, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %236 = squeeze(%235, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %237 = add(%236, %p166) /* ty=Tensor[(32, 256, 1024), float16] */;
    %238 = cast(%237, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%238, %p231) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2481 = %2480(%2479, meta[relay.Constant][306] /* ty=Tensor[(1024), float16] */, %2471) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2482 = fn (%p0624: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0624, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2483 = %2482(%2481) /* ty=Tensor[(32, 256, 1), float32] */;
  %2484 = fn (%p0625: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1428: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0625, %p1428, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2485 = %2484(%2481, %2483) /* ty=Tensor[(32, 256, 1), float32] */;
  %2486 = fn (%p090: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p165: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p230: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p315: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p415: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %230 = add(%p230, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %231 = subtract(%p090, %p165) /* ty=Tensor[(32, 256, 1024), float32] */;
    %232 = rsqrt(%230) /* ty=Tensor[(32, 256, 1), float32] */;
    %233 = multiply(%231, %232) /* ty=Tensor[(32, 256, 1024), float32] */;
    %234 = multiply(%233, %p315) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%234, %p415) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2487 = %2486(%2481, %2483, %2485, meta[relay.Constant][307] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][308] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2488 = fn (%p089: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %228 = broadcast_to(%p089, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %229 = reshape(%228, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%229, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2489 = %2488(%2487) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2490 = fn (%p088: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p164: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p088, %p164, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2491 = %2490(%2489, meta[relay.Constant][309] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2492 = fn (%p087: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p163: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %222 = reshape(%p087, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %223 = squeeze(%222, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %224 = add(%223, %p163) /* ty=Tensor[(32, 256, 1024), float16] */;
    %225 = reshape(%224, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %226 = transpose(%225, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %227 = broadcast_to(%226, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%227, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2501 = fn (%p0628: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2499 = broadcast_to(%p0628, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2500 = reshape(%2499, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2500, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2502 = %2501(%2487) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2503 = fn (%p0627: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1430: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0627, %p1430, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2504 = %2503(%2502, meta[relay.Constant][311] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2505 = fn (%p0626: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1429: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %2493 = reshape(%p0626, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2494 = squeeze(%2493, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2495 = add(%2494, %p1429) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2496 = reshape(%2495, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2497 = transpose(%2496, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %2498 = broadcast_to(%2497, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%2498, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %2506 = %2492(%2491, meta[relay.Constant][310] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2507 = %2505(%2504, meta[relay.Constant][312] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %2508 = fn (%p086: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p162: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p086, %p162, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2509 = %2508(%2506, %2507) /* ty=Tensor[(512, 256, 256), float16] */;
  %2510 = fn (%p085: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p161: float16 /* ty=float16 */, %p229: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %219 = reshape(%p085, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %220 = squeeze(%219, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %221 = divide(%220, %p161) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%221, %p229) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2511 = %2510(%2509, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2512 = fn (%p084: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %218 = nn.fast_softmax(%p084) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%218, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2513 = %2512(%2511) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2514 = fn (%p083: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p083, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2523 = fn (%p0631: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2521 = broadcast_to(%p0631, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2522 = reshape(%2521, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2522, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2524 = %2523(%2487) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2525 = fn (%p0630: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1432: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0630, %p1432, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2526 = %2525(%2524, meta[relay.Constant][313] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2527 = fn (%p0629: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1431: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %2515 = reshape(%p0629, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2516 = squeeze(%2515, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2517 = add(%2516, %p1431) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2518 = reshape(%2517, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2519 = transpose(%2518, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %2520 = broadcast_to(%2519, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%2520, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2528 = %2514(%2513) /* ty=Tensor[(512, 256, 256), float16] */;
  %2529 = %2527(%2526, meta[relay.Constant][314] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2530 = fn (%p082: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p160: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p082, %p160, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2531 = %2530(%2528, %2529) /* ty=Tensor[(512, 256, 64), float16] */;
  %2532 = fn (%p081: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %213 = reshape(%p081, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %214 = squeeze(%213, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %215 = transpose(%214, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %216 = reshape(%215, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %217 = broadcast_to(%216, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%217, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2533 = %2532(%2531) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2534 = fn (%p080: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p159: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p080, %p159, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2535 = %2534(%2533, meta[relay.Constant][315] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2536 = fn (%p079: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p158: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p228: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %209 = reshape(%p079, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %210 = squeeze(%209, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %211 = add(%210, %p158) /* ty=Tensor[(32, 256, 1024), float16] */;
    %212 = cast(%211, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%212, %p228) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2537 = %2536(%2535, meta[relay.Constant][316] /* ty=Tensor[(1024), float16] */, %2487) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2538 = fn (%p0632: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0632, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2539 = %2538(%2537) /* ty=Tensor[(32, 256, 1), float32] */;
  %2540 = fn (%p0633: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1433: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0633, %p1433, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2541 = %2540(%2537, %2539) /* ty=Tensor[(32, 256, 1), float32] */;
  %2542 = fn (%p078: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p157: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p227: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p314: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p414: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %204 = add(%p227, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %205 = subtract(%p078, %p157) /* ty=Tensor[(32, 256, 1024), float32] */;
    %206 = rsqrt(%204) /* ty=Tensor[(32, 256, 1), float32] */;
    %207 = multiply(%205, %206) /* ty=Tensor[(32, 256, 1024), float32] */;
    %208 = multiply(%207, %p314) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%208, %p414) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2543 = %2542(%2537, %2539, %2541, meta[relay.Constant][317] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][318] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2544 = fn (%p077: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %202 = broadcast_to(%p077, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %203 = reshape(%202, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%203, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2545 = %2544(%2543) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2546 = fn (%p076: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p156: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p076, %p156, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %2547 = %2546(%2545, meta[relay.Constant][319] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2548 = fn (%p075: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p155: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p226: float16 /* ty=float16 */, %p313: float16 /* ty=float16 */, %p413: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %193 = reshape(%p075, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %194 = squeeze(%193, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %195 = add(%194, %p155) /* ty=Tensor[(32, 256, 4096), float16] */;
    %196 = multiply(%195, %p226) /* ty=Tensor[(32, 256, 4096), float16] */;
    %197 = fast_erf(%196) /* ty=Tensor[(32, 256, 4096), float16] */;
    %198 = multiply(%197, %p313) /* ty=Tensor[(32, 256, 4096), float16] */;
    %199 = add(%p413, %198) /* ty=Tensor[(32, 256, 4096), float16] */;
    %200 = multiply(%195, %199) /* ty=Tensor[(32, 256, 4096), float16] */;
    %201 = broadcast_to(%200, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%201, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %2549 = %2548(%2547, meta[relay.Constant][320] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2550 = fn (%p074: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p154: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p074, %p154, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2551 = %2550(%2549, meta[relay.Constant][321] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2552 = fn (%p073: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p153: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p225: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %189 = reshape(%p073, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %190 = squeeze(%189, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %191 = add(%190, %p153) /* ty=Tensor[(32, 256, 1024), float16] */;
    %192 = cast(%191, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%192, %p225) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2553 = %2552(%2551, meta[relay.Constant][322] /* ty=Tensor[(1024), float16] */, %2543) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2554 = fn (%p0634: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0634, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2555 = %2554(%2553) /* ty=Tensor[(32, 256, 1), float32] */;
  %2556 = fn (%p0635: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1434: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0635, %p1434, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2557 = %2556(%2553, %2555) /* ty=Tensor[(32, 256, 1), float32] */;
  %2558 = fn (%p072: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p152: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p224: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p312: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p412: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %184 = add(%p224, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %185 = subtract(%p072, %p152) /* ty=Tensor[(32, 256, 1024), float32] */;
    %186 = rsqrt(%184) /* ty=Tensor[(32, 256, 1), float32] */;
    %187 = multiply(%185, %186) /* ty=Tensor[(32, 256, 1024), float32] */;
    %188 = multiply(%187, %p312) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%188, %p412) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2559 = %2558(%2553, %2555, %2557, meta[relay.Constant][323] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][324] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2560 = fn (%p071: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %182 = broadcast_to(%p071, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %183 = reshape(%182, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%183, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2561 = %2560(%2559) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2562 = fn (%p070: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p151: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p070, %p151, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2563 = %2562(%2561, meta[relay.Constant][325] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2564 = fn (%p069: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p150: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %176 = reshape(%p069, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %177 = squeeze(%176, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %178 = add(%177, %p150) /* ty=Tensor[(32, 256, 1024), float16] */;
    %179 = reshape(%178, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %180 = transpose(%179, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %181 = broadcast_to(%180, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%181, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2573 = fn (%p0638: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2571 = broadcast_to(%p0638, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2572 = reshape(%2571, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2572, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2574 = %2573(%2559) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2575 = fn (%p0637: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1436: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0637, %p1436, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2576 = %2575(%2574, meta[relay.Constant][327] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2577 = fn (%p0636: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1435: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %2565 = reshape(%p0636, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2566 = squeeze(%2565, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2567 = add(%2566, %p1435) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2568 = reshape(%2567, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2569 = transpose(%2568, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %2570 = broadcast_to(%2569, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%2570, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %2578 = %2564(%2563, meta[relay.Constant][326] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2579 = %2577(%2576, meta[relay.Constant][328] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %2580 = fn (%p068: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p149: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p068, %p149, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2581 = %2580(%2578, %2579) /* ty=Tensor[(512, 256, 256), float16] */;
  %2582 = fn (%p067: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p148: float16 /* ty=float16 */, %p223: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %173 = reshape(%p067, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %174 = squeeze(%173, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %175 = divide(%174, %p148) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%175, %p223) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2583 = %2582(%2581, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2584 = fn (%p066: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %172 = nn.fast_softmax(%p066) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%172, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2585 = %2584(%2583) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2586 = fn (%p065: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p065, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2595 = fn (%p0641: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2593 = broadcast_to(%p0641, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2594 = reshape(%2593, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2594, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2596 = %2595(%2559) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2597 = fn (%p0640: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1438: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0640, %p1438, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2598 = %2597(%2596, meta[relay.Constant][329] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2599 = fn (%p0639: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1437: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %2587 = reshape(%p0639, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2588 = squeeze(%2587, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2589 = add(%2588, %p1437) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2590 = reshape(%2589, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2591 = transpose(%2590, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %2592 = broadcast_to(%2591, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%2592, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2600 = %2586(%2585) /* ty=Tensor[(512, 256, 256), float16] */;
  %2601 = %2599(%2598, meta[relay.Constant][330] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2602 = fn (%p064: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p147: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p064, %p147, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2603 = %2602(%2600, %2601) /* ty=Tensor[(512, 256, 64), float16] */;
  %2604 = fn (%p063: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %167 = reshape(%p063, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %168 = squeeze(%167, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %169 = transpose(%168, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %170 = reshape(%169, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %171 = broadcast_to(%170, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%171, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2605 = %2604(%2603) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2606 = fn (%p062: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p146: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p062, %p146, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2607 = %2606(%2605, meta[relay.Constant][331] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2608 = fn (%p061: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p145: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p222: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %163 = reshape(%p061, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %164 = squeeze(%163, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %165 = add(%164, %p145) /* ty=Tensor[(32, 256, 1024), float16] */;
    %166 = cast(%165, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%166, %p222) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2609 = %2608(%2607, meta[relay.Constant][332] /* ty=Tensor[(1024), float16] */, %2559) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2610 = fn (%p0642: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0642, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2611 = %2610(%2609) /* ty=Tensor[(32, 256, 1), float32] */;
  %2612 = fn (%p0643: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1439: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0643, %p1439, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2613 = %2612(%2609, %2611) /* ty=Tensor[(32, 256, 1), float32] */;
  %2614 = fn (%p060: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p144: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p221: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p311: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p411: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %158 = add(%p221, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %159 = subtract(%p060, %p144) /* ty=Tensor[(32, 256, 1024), float32] */;
    %160 = rsqrt(%158) /* ty=Tensor[(32, 256, 1), float32] */;
    %161 = multiply(%159, %160) /* ty=Tensor[(32, 256, 1024), float32] */;
    %162 = multiply(%161, %p311) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%162, %p411) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2615 = %2614(%2609, %2611, %2613, meta[relay.Constant][333] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][334] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2616 = fn (%p059: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %156 = broadcast_to(%p059, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %157 = reshape(%156, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%157, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2617 = %2616(%2615) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2618 = fn (%p058: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p143: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p058, %p143, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %2619 = %2618(%2617, meta[relay.Constant][335] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2620 = fn (%p057: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p142: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p220: float16 /* ty=float16 */, %p310: float16 /* ty=float16 */, %p410: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %147 = reshape(%p057, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %148 = squeeze(%147, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %149 = add(%148, %p142) /* ty=Tensor[(32, 256, 4096), float16] */;
    %150 = multiply(%149, %p220) /* ty=Tensor[(32, 256, 4096), float16] */;
    %151 = fast_erf(%150) /* ty=Tensor[(32, 256, 4096), float16] */;
    %152 = multiply(%151, %p310) /* ty=Tensor[(32, 256, 4096), float16] */;
    %153 = add(%p410, %152) /* ty=Tensor[(32, 256, 4096), float16] */;
    %154 = multiply(%149, %153) /* ty=Tensor[(32, 256, 4096), float16] */;
    %155 = broadcast_to(%154, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%155, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %2621 = %2620(%2619, meta[relay.Constant][336] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2622 = fn (%p056: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p141: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p056, %p141, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2623 = %2622(%2621, meta[relay.Constant][337] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2624 = fn (%p055: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p140: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p219: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %143 = reshape(%p055, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %144 = squeeze(%143, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %145 = add(%144, %p140) /* ty=Tensor[(32, 256, 1024), float16] */;
    %146 = cast(%145, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%146, %p219) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2625 = %2624(%2623, meta[relay.Constant][338] /* ty=Tensor[(1024), float16] */, %2615) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2626 = fn (%p0644: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0644, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2627 = %2626(%2625) /* ty=Tensor[(32, 256, 1), float32] */;
  %2628 = fn (%p0645: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1440: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0645, %p1440, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2629 = %2628(%2625, %2627) /* ty=Tensor[(32, 256, 1), float32] */;
  %2630 = fn (%p054: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p139: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p218: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p39: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p49: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %138 = add(%p218, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %139 = subtract(%p054, %p139) /* ty=Tensor[(32, 256, 1024), float32] */;
    %140 = rsqrt(%138) /* ty=Tensor[(32, 256, 1), float32] */;
    %141 = multiply(%139, %140) /* ty=Tensor[(32, 256, 1024), float32] */;
    %142 = multiply(%141, %p39) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%142, %p49) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2631 = %2630(%2625, %2627, %2629, meta[relay.Constant][339] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][340] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2632 = fn (%p053: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %136 = broadcast_to(%p053, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %137 = reshape(%136, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%137, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2633 = %2632(%2631) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2634 = fn (%p052: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p138: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p052, %p138, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2635 = %2634(%2633, meta[relay.Constant][341] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2636 = fn (%p051: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p137: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %130 = reshape(%p051, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %131 = squeeze(%130, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %132 = add(%131, %p137) /* ty=Tensor[(32, 256, 1024), float16] */;
    %133 = reshape(%132, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %134 = transpose(%133, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %135 = broadcast_to(%134, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%135, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2645 = fn (%p0648: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2643 = broadcast_to(%p0648, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2644 = reshape(%2643, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2644, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2646 = %2645(%2631) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2647 = fn (%p0647: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1442: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0647, %p1442, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2648 = %2647(%2646, meta[relay.Constant][343] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2649 = fn (%p0646: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1441: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %2637 = reshape(%p0646, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2638 = squeeze(%2637, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2639 = add(%2638, %p1441) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2640 = reshape(%2639, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2641 = transpose(%2640, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %2642 = broadcast_to(%2641, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%2642, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %2650 = %2636(%2635, meta[relay.Constant][342] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2651 = %2649(%2648, meta[relay.Constant][344] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %2652 = fn (%p050: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p136: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p050, %p136, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2653 = %2652(%2650, %2651) /* ty=Tensor[(512, 256, 256), float16] */;
  %2654 = fn (%p049: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p135: float16 /* ty=float16 */, %p217: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %127 = reshape(%p049, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %128 = squeeze(%127, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %129 = divide(%128, %p135) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%129, %p217) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2655 = %2654(%2653, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2656 = fn (%p048: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %126 = nn.fast_softmax(%p048) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%126, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2657 = %2656(%2655) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2658 = fn (%p047: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p047, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2667 = fn (%p0651: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2665 = broadcast_to(%p0651, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2666 = reshape(%2665, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2666, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2668 = %2667(%2631) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2669 = fn (%p0650: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1444: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0650, %p1444, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2670 = %2669(%2668, meta[relay.Constant][345] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2671 = fn (%p0649: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1443: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %2659 = reshape(%p0649, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2660 = squeeze(%2659, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2661 = add(%2660, %p1443) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2662 = reshape(%2661, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2663 = transpose(%2662, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %2664 = broadcast_to(%2663, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%2664, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2672 = %2658(%2657) /* ty=Tensor[(512, 256, 256), float16] */;
  %2673 = %2671(%2670, meta[relay.Constant][346] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2674 = fn (%p046: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p134: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p046, %p134, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2675 = %2674(%2672, %2673) /* ty=Tensor[(512, 256, 64), float16] */;
  %2676 = fn (%p045: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %121 = reshape(%p045, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %122 = squeeze(%121, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %123 = transpose(%122, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %124 = reshape(%123, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %125 = broadcast_to(%124, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%125, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2677 = %2676(%2675) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2678 = fn (%p044: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p133: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p044, %p133, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2679 = %2678(%2677, meta[relay.Constant][347] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2680 = fn (%p043: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p132: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p216: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %117 = reshape(%p043, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %118 = squeeze(%117, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %119 = add(%118, %p132) /* ty=Tensor[(32, 256, 1024), float16] */;
    %120 = cast(%119, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%120, %p216) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2681 = %2680(%2679, meta[relay.Constant][348] /* ty=Tensor[(1024), float16] */, %2631) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2682 = fn (%p0652: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0652, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2683 = %2682(%2681) /* ty=Tensor[(32, 256, 1), float32] */;
  %2684 = fn (%p0653: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1445: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0653, %p1445, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2685 = %2684(%2681, %2683) /* ty=Tensor[(32, 256, 1), float32] */;
  %2686 = fn (%p042: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p131: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p215: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p38: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p48: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %112 = add(%p215, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %113 = subtract(%p042, %p131) /* ty=Tensor[(32, 256, 1024), float32] */;
    %114 = rsqrt(%112) /* ty=Tensor[(32, 256, 1), float32] */;
    %115 = multiply(%113, %114) /* ty=Tensor[(32, 256, 1024), float32] */;
    %116 = multiply(%115, %p38) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%116, %p48) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2687 = %2686(%2681, %2683, %2685, meta[relay.Constant][349] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][350] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2688 = fn (%p041: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %110 = broadcast_to(%p041, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %111 = reshape(%110, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%111, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2689 = %2688(%2687) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2690 = fn (%p040: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p130: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p040, %p130, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %2691 = %2690(%2689, meta[relay.Constant][351] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2692 = fn (%p039: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p129: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p214: float16 /* ty=float16 */, %p37: float16 /* ty=float16 */, %p47: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %101 = reshape(%p039, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %102 = squeeze(%101, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %103 = add(%102, %p129) /* ty=Tensor[(32, 256, 4096), float16] */;
    %104 = multiply(%103, %p214) /* ty=Tensor[(32, 256, 4096), float16] */;
    %105 = fast_erf(%104) /* ty=Tensor[(32, 256, 4096), float16] */;
    %106 = multiply(%105, %p37) /* ty=Tensor[(32, 256, 4096), float16] */;
    %107 = add(%p47, %106) /* ty=Tensor[(32, 256, 4096), float16] */;
    %108 = multiply(%103, %107) /* ty=Tensor[(32, 256, 4096), float16] */;
    %109 = broadcast_to(%108, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%109, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %2693 = %2692(%2691, meta[relay.Constant][352] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2694 = fn (%p038: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p128: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p038, %p128, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2695 = %2694(%2693, meta[relay.Constant][353] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2696 = fn (%p037: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p127: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p213: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %97 = reshape(%p037, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %98 = squeeze(%97, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %99 = add(%98, %p127) /* ty=Tensor[(32, 256, 1024), float16] */;
    %100 = cast(%99, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%100, %p213) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2697 = %2696(%2695, meta[relay.Constant][354] /* ty=Tensor[(1024), float16] */, %2687) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2698 = fn (%p0654: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0654, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2699 = %2698(%2697) /* ty=Tensor[(32, 256, 1), float32] */;
  %2700 = fn (%p0655: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1446: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0655, %p1446, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2701 = %2700(%2697, %2699) /* ty=Tensor[(32, 256, 1), float32] */;
  %2702 = fn (%p036: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p126: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p212: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p36: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p46: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %92 = add(%p212, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %93 = subtract(%p036, %p126) /* ty=Tensor[(32, 256, 1024), float32] */;
    %94 = rsqrt(%92) /* ty=Tensor[(32, 256, 1), float32] */;
    %95 = multiply(%93, %94) /* ty=Tensor[(32, 256, 1024), float32] */;
    %96 = multiply(%95, %p36) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%96, %p46) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2703 = %2702(%2697, %2699, %2701, meta[relay.Constant][355] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][356] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2704 = fn (%p035: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %90 = broadcast_to(%p035, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %91 = reshape(%90, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%91, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2705 = %2704(%2703) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2706 = fn (%p034: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p125: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p034, %p125, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2707 = %2706(%2705, meta[relay.Constant][357] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2708 = fn (%p033: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p124: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %84 = reshape(%p033, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %85 = squeeze(%84, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %86 = add(%85, %p124) /* ty=Tensor[(32, 256, 1024), float16] */;
    %87 = reshape(%86, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %88 = transpose(%87, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %89 = broadcast_to(%88, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%89, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2717 = fn (%p0658: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2715 = broadcast_to(%p0658, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2716 = reshape(%2715, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2716, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2718 = %2717(%2703) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2719 = fn (%p0657: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1448: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0657, %p1448, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2720 = %2719(%2718, meta[relay.Constant][359] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2721 = fn (%p0656: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1447: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %2709 = reshape(%p0656, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2710 = squeeze(%2709, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2711 = add(%2710, %p1447) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2712 = reshape(%2711, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2713 = transpose(%2712, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %2714 = broadcast_to(%2713, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%2714, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %2722 = %2708(%2707, meta[relay.Constant][358] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2723 = %2721(%2720, meta[relay.Constant][360] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %2724 = fn (%p032: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p123: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p032, %p123, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2725 = %2724(%2722, %2723) /* ty=Tensor[(512, 256, 256), float16] */;
  %2726 = fn (%p031: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p122: float16 /* ty=float16 */, %p211: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %81 = reshape(%p031, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %82 = squeeze(%81, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %83 = divide(%82, %p122) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%83, %p211) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2727 = %2726(%2725, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2728 = fn (%p030: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %80 = nn.fast_softmax(%p030) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%80, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2729 = %2728(%2727) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2730 = fn (%p029: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p029, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2739 = fn (%p0661: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2737 = broadcast_to(%p0661, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2738 = reshape(%2737, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2738, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2740 = %2739(%2703) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2741 = fn (%p0660: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1450: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0660, %p1450, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2742 = %2741(%2740, meta[relay.Constant][361] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2743 = fn (%p0659: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1449: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %2731 = reshape(%p0659, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2732 = squeeze(%2731, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2733 = add(%2732, %p1449) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2734 = reshape(%2733, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2735 = transpose(%2734, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %2736 = broadcast_to(%2735, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%2736, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2744 = %2730(%2729) /* ty=Tensor[(512, 256, 256), float16] */;
  %2745 = %2743(%2742, meta[relay.Constant][362] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2746 = fn (%p028: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p121: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p028, %p121, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2747 = %2746(%2744, %2745) /* ty=Tensor[(512, 256, 64), float16] */;
  %2748 = fn (%p027: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %75 = reshape(%p027, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %76 = squeeze(%75, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %77 = transpose(%76, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %78 = reshape(%77, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %79 = broadcast_to(%78, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%79, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2749 = %2748(%2747) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2750 = fn (%p026: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p120: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p026, %p120, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2751 = %2750(%2749, meta[relay.Constant][363] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2752 = fn (%p025: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p119: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p210: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %71 = reshape(%p025, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %72 = squeeze(%71, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %73 = add(%72, %p119) /* ty=Tensor[(32, 256, 1024), float16] */;
    %74 = cast(%73, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%74, %p210) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2753 = %2752(%2751, meta[relay.Constant][364] /* ty=Tensor[(1024), float16] */, %2703) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2754 = fn (%p0662: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0662, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2755 = %2754(%2753) /* ty=Tensor[(32, 256, 1), float32] */;
  %2756 = fn (%p0663: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1451: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0663, %p1451, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2757 = %2756(%2753, %2755) /* ty=Tensor[(32, 256, 1), float32] */;
  %2758 = fn (%p024: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p118: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p29: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p35: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p45: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %66 = add(%p29, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %67 = subtract(%p024, %p118) /* ty=Tensor[(32, 256, 1024), float32] */;
    %68 = rsqrt(%66) /* ty=Tensor[(32, 256, 1), float32] */;
    %69 = multiply(%67, %68) /* ty=Tensor[(32, 256, 1024), float32] */;
    %70 = multiply(%69, %p35) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%70, %p45) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2759 = %2758(%2753, %2755, %2757, meta[relay.Constant][365] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][366] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2760 = fn (%p023: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %64 = broadcast_to(%p023, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %65 = reshape(%64, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%65, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2761 = %2760(%2759) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2762 = fn (%p022: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p117: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p022, %p117, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %2763 = %2762(%2761, meta[relay.Constant][367] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2764 = fn (%p021: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p116: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p28: float16 /* ty=float16 */, %p34: float16 /* ty=float16 */, %p44: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %55 = reshape(%p021, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %56 = squeeze(%55, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %57 = add(%56, %p116) /* ty=Tensor[(32, 256, 4096), float16] */;
    %58 = multiply(%57, %p28) /* ty=Tensor[(32, 256, 4096), float16] */;
    %59 = fast_erf(%58) /* ty=Tensor[(32, 256, 4096), float16] */;
    %60 = multiply(%59, %p34) /* ty=Tensor[(32, 256, 4096), float16] */;
    %61 = add(%p44, %60) /* ty=Tensor[(32, 256, 4096), float16] */;
    %62 = multiply(%57, %61) /* ty=Tensor[(32, 256, 4096), float16] */;
    %63 = broadcast_to(%62, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%63, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %2765 = %2764(%2763, meta[relay.Constant][368] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2766 = fn (%p020: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p115: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p020, %p115, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2767 = %2766(%2765, meta[relay.Constant][369] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2768 = fn (%p019: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p114: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p27: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %51 = reshape(%p019, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %52 = squeeze(%51, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %53 = add(%52, %p114) /* ty=Tensor[(32, 256, 1024), float16] */;
    %54 = cast(%53, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%54, %p27) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2769 = %2768(%2767, meta[relay.Constant][370] /* ty=Tensor[(1024), float16] */, %2759) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2770 = fn (%p0664: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0664, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2771 = %2770(%2769) /* ty=Tensor[(32, 256, 1), float32] */;
  %2772 = fn (%p0665: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1452: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0665, %p1452, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2773 = %2772(%2769, %2771) /* ty=Tensor[(32, 256, 1), float32] */;
  %2774 = fn (%p018: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p113: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p26: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p33: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p43: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %46 = add(%p26, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %47 = subtract(%p018, %p113) /* ty=Tensor[(32, 256, 1024), float32] */;
    %48 = rsqrt(%46) /* ty=Tensor[(32, 256, 1), float32] */;
    %49 = multiply(%47, %48) /* ty=Tensor[(32, 256, 1024), float32] */;
    %50 = multiply(%49, %p33) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%50, %p43) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2775 = %2774(%2769, %2771, %2773, meta[relay.Constant][371] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][372] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2776 = fn (%p017: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %44 = broadcast_to(%p017, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %45 = reshape(%44, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%45, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2777 = %2776(%2775) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2778 = fn (%p016: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p112: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p016, %p112, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2779 = %2778(%2777, meta[relay.Constant][373] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2780 = fn (%p015: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p111: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %38 = reshape(%p015, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %39 = squeeze(%38, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %40 = add(%39, %p111) /* ty=Tensor[(32, 256, 1024), float16] */;
    %41 = reshape(%40, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %42 = transpose(%41, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %43 = broadcast_to(%42, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%43, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2789 = fn (%p0668: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2787 = broadcast_to(%p0668, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2788 = reshape(%2787, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2788, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2790 = %2789(%2775) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2791 = fn (%p0667: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1454: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0667, %p1454, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2792 = %2791(%2790, meta[relay.Constant][375] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2793 = fn (%p0666: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1453: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 64, 256), float16] {
    %2781 = reshape(%p0666, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2782 = squeeze(%2781, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2783 = add(%2782, %p1453) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2784 = reshape(%2783, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2785 = transpose(%2784, axes=[0, 2, 3, 1]) /* ty=Tensor[(32, 16, 64, 256), float16] */;
    %2786 = broadcast_to(%2785, shape=[32, 16, 64, 256], dtype="float16") /* ty=Tensor[(32, 16, 64, 256), float16] */;
    reshape(%2786, newshape=[-1, 64, 256]) /* ty=Tensor[(512, 64, 256), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 64, 256), float16] */;
  %2794 = %2780(%2779, meta[relay.Constant][374] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2795 = %2793(%2792, meta[relay.Constant][376] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 64, 256), float16] */;
  %2796 = fn (%p014: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, %p110: Tensor[(512, 64, 256), float16] /* ty=Tensor[(512, 64, 256), float16] */, Primitive=1) -> Tensor[(512, 256, 256), float16] {
    nn.batch_matmul(%p014, %p110, out_dtype="float16") /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16], Tensor[(512, 64, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2797 = %2796(%2794, %2795) /* ty=Tensor[(512, 256, 256), float16] */;
  %2798 = fn (%p013: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p19: float16 /* ty=float16 */, %p25: Tensor[(32, 1, 1, 256), float16] /* ty=Tensor[(32, 1, 1, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %35 = reshape(%p013, newshape=[32, 16, 256, 256]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %36 = squeeze(%35, axis=[]) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    %37 = divide(%36, %p19) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    add(%37, %p25) /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], float16, Tensor[(32, 1, 1, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2799 = %2798(%2797, 8f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(32, 1, 1, 256), float16] */) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2800 = fn (%p012: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1) -> Tensor[(32, 16, 256, 256), float16] {
    %34 = nn.fast_softmax(%p012) /* ty=Tensor[(32, 16, 256, 256), float16] */;
    broadcast_to(%34, shape=[32, 16, 256, 256], dtype="float16") /* ty=Tensor[(32, 16, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(32, 16, 256, 256), float16] */;
  %2801 = %2800(%2799) /* ty=Tensor[(32, 16, 256, 256), float16] */;
  %2802 = fn (%p011: Tensor[(32, 16, 256, 256), float16] /* ty=Tensor[(32, 16, 256, 256), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(512, 256, 256), float16] {
    reshape(%p011, newshape=[-1, 256, 256]) /* ty=Tensor[(512, 256, 256), float16] */
  } /* ty=fn (Tensor[(32, 16, 256, 256), float16]) -> Tensor[(512, 256, 256), float16] */;
  %2811 = fn (%p0671: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %2809 = broadcast_to(%p0671, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2810 = reshape(%2809, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%2810, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2812 = %2811(%2775) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2813 = fn (%p0670: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1456: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p0670, %p1456, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2814 = %2813(%2812, meta[relay.Constant][377] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2815 = fn (%p0669: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p1455: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    %2803 = reshape(%p0669, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2804 = squeeze(%2803, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2805 = add(%2804, %p1455) /* ty=Tensor[(32, 256, 1024), float16] */;
    %2806 = reshape(%2805, newshape=[32, 256, 16, 64]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %2807 = transpose(%2806, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %2808 = broadcast_to(%2807, shape=[32, 16, 256, 64], dtype="float16") /* ty=Tensor[(32, 16, 256, 64), float16] */;
    reshape(%2808, newshape=[-1, 256, 64]) /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2816 = %2802(%2801) /* ty=Tensor[(512, 256, 256), float16] */;
  %2817 = %2815(%2814, meta[relay.Constant][378] /* ty=Tensor[(1024), float16] */) /* ty=Tensor[(512, 256, 64), float16] */;
  %2818 = fn (%p010: Tensor[(512, 256, 256), float16] /* ty=Tensor[(512, 256, 256), float16] */, %p18: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(512, 256, 64), float16] {
    nn.batch_matmul(%p010, %p18, out_dtype="float16") /* ty=Tensor[(512, 256, 64), float16] */
  } /* ty=fn (Tensor[(512, 256, 256), float16], Tensor[(512, 256, 64), float16]) -> Tensor[(512, 256, 64), float16] */;
  %2819 = %2818(%2816, %2817) /* ty=Tensor[(512, 256, 64), float16] */;
  %2820 = fn (%p09: Tensor[(512, 256, 64), float16] /* ty=Tensor[(512, 256, 64), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %29 = reshape(%p09, newshape=[32, 16, 256, 64]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %30 = squeeze(%29, axis=[]) /* ty=Tensor[(32, 16, 256, 64), float16] */;
    %31 = transpose(%30, axes=[0, 2, 1, 3]) /* ty=Tensor[(32, 256, 16, 64), float16] */;
    %32 = reshape(%31, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %33 = broadcast_to(%32, shape=[32, 256, 1024], dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */;
    reshape(%33, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(512, 256, 64), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2821 = %2820(%2819) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2822 = fn (%p08: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p17: Tensor[(32, 1024, 1024), float16] /* ty=Tensor[(32, 1024, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p08, %p17, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2823 = %2822(%2821, meta[relay.Constant][379] /* ty=Tensor[(32, 1024, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2824 = fn (%p07: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p16: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p24: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %25 = reshape(%p07, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %26 = squeeze(%25, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %27 = add(%26, %p16) /* ty=Tensor[(32, 256, 1024), float16] */;
    %28 = cast(%27, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%28, %p24) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2825 = %2824(%2823, meta[relay.Constant][380] /* ty=Tensor[(1024), float16] */, %2775) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2826 = fn (%p0672: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0672, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2827 = %2826(%2825) /* ty=Tensor[(32, 256, 1), float32] */;
  %2828 = fn (%p0673: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1457: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0673, %p1457, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2829 = %2828(%2825, %2827) /* ty=Tensor[(32, 256, 1), float32] */;
  %2830 = fn (%p06: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p15: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p23: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p32: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p42: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %20 = add(%p23, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %21 = subtract(%p06, %p15) /* ty=Tensor[(32, 256, 1024), float32] */;
    %22 = rsqrt(%20) /* ty=Tensor[(32, 256, 1), float32] */;
    %23 = multiply(%21, %22) /* ty=Tensor[(32, 256, 1024), float32] */;
    %24 = multiply(%23, %p32) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%24, %p42) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2831 = %2830(%2825, %2827, %2829, meta[relay.Constant][381] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][382] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2832 = fn (%p05: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    %18 = broadcast_to(%p05, shape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    %19 = reshape(%18, newshape=[-1, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float32] */;
    cast(%19, dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float16] */;
  %2833 = %2832(%2831) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2834 = fn (%p04: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p14: Tensor[(32, 1024, 4096), float16] /* ty=Tensor[(32, 1024, 4096), float16] */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    nn.batch_matmul(%p04, %p14, out_dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(32, 1024, 4096), float16]) -> Tensor[(32, 256, 4096), float16] */;
  %2835 = %2834(%2833, meta[relay.Constant][383] /* ty=Tensor[(32, 1024, 4096), float16] */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2836 = fn (%p03: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p13: Tensor[(4096), float16] /* ty=Tensor[(4096), float16] */, %p22: float16 /* ty=float16 */, %p31: float16 /* ty=float16 */, %p41: float16 /* ty=float16 */, Primitive=1) -> Tensor[(32, 256, 4096), float16] {
    %9 = reshape(%p03, newshape=[32, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %10 = squeeze(%9, axis=[]) /* ty=Tensor[(32, 256, 4096), float16] */;
    %11 = add(%10, %p13) /* ty=Tensor[(32, 256, 4096), float16] */;
    %12 = multiply(%11, %p22) /* ty=Tensor[(32, 256, 4096), float16] */;
    %13 = fast_erf(%12) /* ty=Tensor[(32, 256, 4096), float16] */;
    %14 = multiply(%13, %p31) /* ty=Tensor[(32, 256, 4096), float16] */;
    %15 = add(%p41, %14) /* ty=Tensor[(32, 256, 4096), float16] */;
    %16 = multiply(%11, %15) /* ty=Tensor[(32, 256, 4096), float16] */;
    %17 = broadcast_to(%16, shape=[32, 256, 4096], dtype="float16") /* ty=Tensor[(32, 256, 4096), float16] */;
    reshape(%17, newshape=[-1, 256, 4096]) /* ty=Tensor[(32, 256, 4096), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(4096), float16], float16, float16, float16) -> Tensor[(32, 256, 4096), float16] */;
  %2837 = %2836(%2835, meta[relay.Constant][384] /* ty=Tensor[(4096), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(32, 256, 4096), float16] */;
  %2838 = fn (%p02: Tensor[(32, 256, 4096), float16] /* ty=Tensor[(32, 256, 4096), float16] */, %p12: Tensor[(32, 4096, 1024), float16] /* ty=Tensor[(32, 4096, 1024), float16] */, Primitive=1) -> Tensor[(32, 256, 1024), float16] {
    nn.batch_matmul(%p02, %p12, out_dtype="float16") /* ty=Tensor[(32, 256, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 4096), float16], Tensor[(32, 4096, 1024), float16]) -> Tensor[(32, 256, 1024), float16] */;
  %2839 = %2838(%2837, meta[relay.Constant][385] /* ty=Tensor[(32, 4096, 1024), float16] */) /* ty=Tensor[(32, 256, 1024), float16] */;
  %2840 = fn (%p01: Tensor[(32, 256, 1024), float16] /* ty=Tensor[(32, 256, 1024), float16] */, %p11: Tensor[(1024), float16] /* ty=Tensor[(1024), float16] */, %p21: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %5 = reshape(%p01, newshape=[32, 256, 1024]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %6 = squeeze(%5, axis=[]) /* ty=Tensor[(32, 256, 1024), float16] */;
    %7 = add(%6, %p11) /* ty=Tensor[(32, 256, 1024), float16] */;
    %8 = cast(%7, dtype="float32") /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%8, %p21) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float16], Tensor[(1024), float16], Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2841 = %2840(%2839, meta[relay.Constant][386] /* ty=Tensor[(1024), float16] */, %2831) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2842 = fn (%p0674: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    mean(%p0674, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2843 = %2842(%2841) /* ty=Tensor[(32, 256, 1), float32] */;
  %2844 = fn (%p0675: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1458: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, Primitive=1) -> Tensor[(32, 256, 1), float32] {
    variance(%p0675, %p1458, axis=[-1], keepdims=True) /* ty=Tensor[(32, 256, 1), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32]) -> Tensor[(32, 256, 1), float32] */;
  %2845 = %2844(%2841, %2843) /* ty=Tensor[(32, 256, 1), float32] */;
  %2846 = fn (%p0: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, %p1: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p2: Tensor[(32, 256, 1), float32] /* ty=Tensor[(32, 256, 1), float32] */, %p3: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, %p4: Tensor[(1024), float32] /* ty=Tensor[(1024), float32] */, Primitive=1) -> Tensor[(32, 256, 1024), float32] {
    %0 = add(%p2, 1e-12f /* ty=float32 */) /* ty=Tensor[(32, 256, 1), float32] */;
    %1 = subtract(%p0, %p1) /* ty=Tensor[(32, 256, 1024), float32] */;
    %2 = rsqrt(%0) /* ty=Tensor[(32, 256, 1), float32] */;
    %3 = multiply(%1, %2) /* ty=Tensor[(32, 256, 1024), float32] */;
    %4 = multiply(%3, %p3) /* ty=Tensor[(32, 256, 1024), float32] */;
    add(%4, %p4) /* ty=Tensor[(32, 256, 1024), float32] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32], Tensor[(32, 256, 1), float32], Tensor[(32, 256, 1), float32], Tensor[(1024), float32], Tensor[(1024), float32]) -> Tensor[(32, 256, 1024), float32] */;
  %2850 = %2846(%2841, %2843, %2845, meta[relay.Constant][387] /* ty=Tensor[(1024), float32] */, meta[relay.Constant][388] /* ty=Tensor[(1024), float32] */) /* ty=Tensor[(32, 256, 1024), float32] */;
  %2851 = fn (%p0677: Tensor[(32, 256, 1024), float32] /* ty=Tensor[(32, 256, 1024), float32] */, Primitive=1) -> Tensor[(32, 1024), float16] {
    %2849 = take(%p0677, 0 /* ty=int32 span=aten::select_0:0:0 */, axis=1, mode="wrap") /* ty=Tensor[(32, 1024), float32] */;
    cast(%2849, dtype="float16") /* ty=Tensor[(32, 1024), float16] */
  } /* ty=fn (Tensor[(32, 256, 1024), float32]) -> Tensor[(32, 1024), float16] */;
  %2852 = %2851(%2850) /* ty=Tensor[(32, 1024), float16] */;
  %2853 = fn (%p0676: Tensor[(32, 1024), float16] /* ty=Tensor[(32, 1024), float16] */, %p1459: Tensor[(1024, 1024), float16] /* ty=Tensor[(1024, 1024), float16] */, %p2146: Tensor[(1, 1024), float16] /* ty=Tensor[(1, 1024), float16] */, Primitive=1) -> Tensor[(32, 1024), float16] {
    %2847 = nn.dense(%p0676, %p1459, units=None, out_dtype="float16") /* ty=Tensor[(32, 1024), float16] */;
    %2848 = add(%2847, %p2146) /* ty=Tensor[(32, 1024), float16] */;
    fast_tanh(%2848) /* ty=Tensor[(32, 1024), float16] */
  } /* ty=fn (Tensor[(32, 1024), float16], Tensor[(1024, 1024), float16], Tensor[(1, 1024), float16]) -> Tensor[(32, 1024), float16] */;
  %2854 = %2853(%2852, meta[relay.Constant][389] /* ty=Tensor[(1024, 1024), float16] */, meta[relay.Constant][390] /* ty=Tensor[(1, 1024), float16] */) /* ty=Tensor[(32, 1024), float16] */;
  (%2850, %2854) /* ty=(Tensor[(32, 256, 1024), float32], Tensor[(32, 1024), float16]) */
}


